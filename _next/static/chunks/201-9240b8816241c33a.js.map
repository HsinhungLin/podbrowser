{"version":3,"file":"static/chunks/201-9240b8816241c33a.js","mappings":"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","sources":["webpack://_N_E/./components/profile/appAvatar/styles.js","webpack://_N_E/./components/profile/appAvatar/index.jsx","webpack://_N_E/./components/pages/privacy/resourceAccess/revokeAccessButton/styles.js","webpack://_N_E/./components/pages/privacy/resourceAccess/revokeAccessButton/index.jsx","webpack://_N_E/./src/hooks/useAgentProfile/index.js","webpack://_N_E/./components/pages/privacy/resourceAccess/resourceAccessDrawer/index.jsx","webpack://_N_E/./components/pages/privacy/resourceAccess/resourceAccessDrawer/styles.js","webpack://_N_E/./components/pages/privacy/resourceAccess/show/tabPanel/index.jsx","webpack://_N_E/./components/pages/privacy/resourceAccess/show/styles.js","webpack://_N_E/./components/pages/privacy/resourceAccess/show/index.jsx","webpack://_N_E/./components/tabs/index.jsx","webpack://_N_E/./components/tabs/styles.js","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acl/agent.mjs"],"sourcesContent":["/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst lightPrimaryBackgroundColor = \"#F1EDFF\"; // TODO: THIS MUST BE MOVED TO PRISM\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    avatar: {\n      width: \"64px\",\n      height: \"64px\",\n      background: \"transparent\",\n    },\n    appAvatar: {\n      textAlign: \"center\",\n      padding: theme.spacing(1),\n      borderRadius: \"50%\",\n      fontSize: theme.typography.h5.fontSize,\n      color: theme.palette.primary.main,\n      backgroundColor: lightPrimaryBackgroundColor,\n    },\n    avatarText: {\n      fontFamily: theme.typography.h1.fontFamily,\n      fontSize: \"1.5rem\",\n      color: theme.palette.secondary.contrastText,\n    },\n    headerLink: {\n      display: \"block\",\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: \"1rem\",\n      fontWeight: theme.typography.body2.fontWeight,\n      color: theme.palette.secondary.contrastText,\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React, { useState } from \"react\";\nimport { foaf } from \"rdf-namespaces\";\nimport T from \"prop-types\";\nimport { Avatar, Box, createStyles } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { Icons } from \"@inrupt/prism-react-components\";\nimport {\n  Text,\n  ThingProvider,\n  DatasetProvider,\n  Image,\n} from \"@inrupt/solid-ui-react\";\n\nimport styles from \"./styles\";\nimport {\n  mockApp,\n  mockAppDataset,\n  LOGO_PREDICATE,\n} from \"../../../__testUtils/mockApp\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport const TESTCAFE_ID_NAME_TITLE = \"app-name-title\";\nexport const TESTCAFE_ID_NAME_FIELD = \"app-name-field\";\n\nexport function setupErrorComponent(bem) {\n  return () => (\n    <Avatar className={bem(\"appAvatar\")} alt=\"Contact avatar\">\n      <Icons className={bem(\"appAvatar\")} name=\"project-diagram\" />\n    </Avatar>\n  );\n}\n\n// temporarily using mock data for apps for dev purposes until we have audit list\nconst app = mockApp();\nconst dataset = mockAppDataset();\n\nexport default function AppAvatar({ profileIri }) {\n  const [error, setError] = useState(null);\n\n  const classes = useStyles();\n  const bem = useBem(classes);\n  // TODO replace with toast error or something?\n  // Ignoring this line for coverage until there are actually errors\n  /* istanbul ignore next */\n  if (error) {\n    return error.toString();\n  }\n\n  const errorComponent = setupErrorComponent(bem);\n\n  return (\n    <DatasetProvider solidDataset={dataset}>\n      <ThingProvider thing={app} onError={setError}>\n        <Box alignItems=\"center\" display=\"flex\">\n          <Box>\n            <Avatar className={classes.avatar} alt=\"Contact avatar\">\n              <Image\n                property={LOGO_PREDICATE}\n                width={120}\n                errorComponent={errorComponent}\n              />\n            </Avatar>\n          </Box>\n\n          <Box p={2}>\n            <h3 data-testid={TESTCAFE_ID_NAME_TITLE}>\n              <Text className={classes.avatarText} property={foaf.name} />\n              <a\n                className={classes.headerLink}\n                href={profileIri}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                {profileIri}\n              </a>\n            </h3>\n          </Box>\n        </Box>\n      </ThingProvider>\n    </DatasetProvider>\n  );\n}\n\nAppAvatar.propTypes = {\n  profileIri: T.string.isRequired,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    \"revoke-button\": {\n      color: theme.palette.error.main,\n      textDecoration: \"underline\",\n      background: \"none\",\n      border: \"none\",\n      cursor: \"pointer\",\n      textAlign: \"left\",\n      fontSize: \"1rem\",\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport T from \"prop-types\";\nimport { getResourceInfo } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport { createStyles } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { Button } from \"@inrupt/prism-react-components\";\nimport { getPolicyDetailFromAccess } from \"../../../../../src/accessControl/acp\";\nimport { getResourceName } from \"../../../../../src/solidClientHelpers/resource\";\nimport styles from \"./styles\";\nimport AlertContext from \"../../../../../src/contexts/alertContext\";\nimport ConfirmationDialogContext from \"../../../../../src/contexts/confirmationDialogContext\";\nimport useAgentProfile from \"../../../../../src/hooks/useAgentProfile\";\nimport { isHTTPError } from \"../../../../../src/error\";\nimport { getAccessControl } from \"../../../../../src/accessControl\";\nimport usePodRootUri from \"../../../../../src/hooks/usePodRootUri\";\nimport { getPoliciesContainerUrl } from \"../../../../../src/models/policy\";\n\nexport const TESTCAFE_ID_ACCESS_DETAILS_REMOVE_BUTTON =\n  \"access-details-remove-button\";\n\nexport const TESTCAFE_ID_REVOKE_ACCESS_BUTTON = \"revoke-access-button\";\n\nexport const REMOVE_ACCESS_CONFIRMATION_DIALOG =\n  \"remove-access-confirmation-dialog\";\n\nexport const SINGLE_ACCESS_MESSAGE = \"Revoke Access\";\nexport const ALL_ACCESS_MESSAGE = \"Revoke All Access\";\nexport const ACCESS_TO_POD_MESSAGE = \"anything in your Pod.\";\n\nexport const getAllowModes = (accessList) => {\n  if (!accessList) return null;\n  const accessModes = [\n    ...new Set(\n      [\n        ...accessList.map(({ allow }) => {\n          return allow.map((mode) => mode);\n        }),\n      ].reduce((acc, modes) => [...acc, ...modes], [])\n    ),\n  ];\n  return accessModes;\n};\n\nexport const handleRemoveAccess = ({\n  resources,\n  policiesContainer,\n  accessList,\n  agentWebId,\n  setShouldUpdate,\n  alertError,\n  alertSuccess,\n  onClose,\n  fetch,\n}) => {\n  return () => {\n    if (!resources) return;\n    const acpMaps = accessList?.map(({ allow }) => {\n      return {\n        read: !!allow.includes(\"http://www.w3.org/ns/solid/acp#Read\"),\n        write: !!allow.includes(\"http://www.w3.org/ns/solid/acp#Write\"),\n        append: !!allow.includes(\"http://www.w3.org/ns/solid/acp#Append\"),\n        control: !!allow.includes(\"http://www.w3.org/ns/solid/acp#Control\"),\n      };\n    });\n    const policyNames = acpMaps.map((acpMap) =>\n      getPolicyDetailFromAccess(acpMap, \"name\")\n    );\n    resources.map(async (url) => {\n      const resource = await getResourceInfo(url, { fetch });\n      const accessControl = await getAccessControl(\n        resource,\n        policiesContainer,\n        fetch\n      );\n      policyNames.map(async (policy) => {\n        try {\n          await accessControl.removeAgentFromPolicy(agentWebId, policy);\n          setShouldUpdate(true);\n        } catch (e) {\n          if (!isHTTPError(e, 404)) {\n            alertError(e.toString());\n          }\n        } finally {\n          alertSuccess(`${agentWebId}'s access succesfully revoked`);\n          onClose();\n        }\n      });\n    });\n  };\n};\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport default function RevokeAccessButton({\n  variant,\n  resources,\n  onClose,\n  accessList,\n  setShouldUpdate,\n}) {\n  const classes = useStyles();\n  const bem = useBem(classes);\n  const { alertError, alertSuccess } = useContext(AlertContext);\n  const [agentWebId, setAgentWebId] = useState(\n    accessList && accessList[0]?.agent\n  );\n  const { session } = useSession();\n  const { fetch } = session;\n  const { data: agentProfile } = useAgentProfile(agentWebId);\n  const agentName = agentProfile?.name || agentWebId;\n  const {\n    confirmed,\n    open: dialogOpen,\n    setContent,\n    setOpen,\n    setTitle,\n    closeDialog,\n    setConfirmText,\n    setIsDangerousAction,\n  } = useContext(ConfirmationDialogContext);\n  const [confirmationSetup, setConfirmationSetup] = useState(false);\n  const podRoot = usePodRootUri(session.info.webId);\n  const policiesContainer = podRoot && getPoliciesContainerUrl(podRoot);\n  const resourceName =\n    resources.length === 1\n      ? getResourceName(resources[0])\n      : ACCESS_TO_POD_MESSAGE;\n\n  const removeAccess = handleRemoveAccess({\n    resources,\n    policiesContainer,\n    accessList,\n    agentWebId,\n    setShouldUpdate,\n    alertError,\n    alertSuccess,\n    onClose,\n    fetch,\n  });\n\n  useEffect(() => {\n    if (!accessList || !accessList.length) return;\n    setAgentWebId(accessList[0]?.agent);\n  }, [accessList]);\n\n  const handleConfirmation = () => {\n    setConfirmationSetup(true);\n    setOpen(REMOVE_ACCESS_CONFIRMATION_DIALOG);\n    setIsDangerousAction(true);\n    setTitle(\n      resources.length === 1\n        ? `Revoke access to ${resourceName}?`\n        : `Revoke access from ${agentName}?`\n    );\n    setConfirmText(\n      resources.length === 1 ? SINGLE_ACCESS_MESSAGE : ALL_ACCESS_MESSAGE\n    );\n    setContent(`${agentName} will not be able to access ${resourceName}`);\n  };\n\n  useEffect(() => {\n    if (\n      confirmationSetup &&\n      confirmed === null &&\n      dialogOpen === REMOVE_ACCESS_CONFIRMATION_DIALOG\n    )\n      return;\n\n    if (\n      confirmationSetup &&\n      confirmed &&\n      dialogOpen === REMOVE_ACCESS_CONFIRMATION_DIALOG\n    ) {\n      removeAccess();\n    }\n\n    if (confirmed !== null) {\n      closeDialog();\n      setConfirmationSetup(false);\n    }\n  }, [confirmationSetup, confirmed, closeDialog, dialogOpen, removeAccess]);\n\n  if (variant === \"in-menu\") {\n    return (\n      <Button\n        type=\"button\"\n        variant={variant}\n        className={clsx(bem(`revoke-button`))}\n        data-testid={TESTCAFE_ID_ACCESS_DETAILS_REMOVE_BUTTON}\n        onClick={handleConfirmation}\n      >\n        Revoke access\n      </Button>\n    );\n  }\n  return (\n    <button\n      type=\"button\"\n      className={bem(\"revoke-button\")}\n      data-testid={TESTCAFE_ID_REVOKE_ACCESS_BUTTON}\n      onClick={handleConfirmation}\n    >\n      {resources.length > 1\n        ? ALL_ACCESS_MESSAGE\n        : `Remove Access to ${resourceName}?`}\n    </button>\n  );\n}\n\nRevokeAccessButton.propTypes = {\n  accessList: T.arrayOf(\n    T.shape({\n      agent: T.string,\n      allow: T.arrayOf(T.string),\n      deny: T.arrayOf(T.string),\n      resource: T.string,\n    })\n  ),\n  onClose: T.func.isRequired,\n  resources: T.arrayOf(T.string).isRequired,\n  variant: T.string,\n  setShouldUpdate: T.func,\n};\n\nRevokeAccessButton.defaultProps = {\n  accessList: [],\n  variant: null,\n  setShouldUpdate: () => {},\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport useSWR from \"swr\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport {\n  PUBLIC_AGENT_NAME,\n  PUBLIC_AGENT_PREDICATE,\n} from \"../../models/contact/public\";\nimport {\n  AUTHENTICATED_AGENT_NAME,\n  AUTHENTICATED_AGENT_PREDICATE,\n} from \"../../models/contact/authenticated\";\nimport { fetchProfile } from \"../../solidClientHelpers/profile\";\n\nexport const GET_PROFILE = \"getProfile\";\n\nexport default function useAgentProfile(webId, options) {\n  const {\n    session: { fetch },\n  } = useSession();\n\n  return useSWR(\n    [webId, GET_PROFILE],\n    async () => {\n      if (!webId) return null;\n      if (webId === PUBLIC_AGENT_PREDICATE) {\n        return { name: PUBLIC_AGENT_NAME };\n      }\n      if (webId === AUTHENTICATED_AGENT_PREDICATE) {\n        return { name: AUTHENTICATED_AGENT_NAME };\n      }\n      return fetchProfile(webId, fetch);\n    },\n    options\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React from \"react\";\nimport T from \"prop-types\";\nimport { Drawer, Icons } from \"@inrupt/prism-react-components\";\nimport {\n  createStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { getAcpAccessDetails } from \"../../../../../src/accessControl/acp\";\nimport { getResourceName } from \"../../../../../src/solidClientHelpers/resource\";\nimport styles from \"./styles\";\nimport { isContainerIri } from \"../../../../../src/solidClientHelpers/utils\";\nimport { getParentContainerUrl } from \"../../../../../src/stringHelpers\";\nimport useAccessControl from \"../../../../../src/hooks/useAccessControl\";\nimport useResourceInfo from \"../../../../../src/hooks/useResourceInfo\";\nimport RevokeAccessButton from \"../revokeAccessButton\";\nimport Spinner from \"../../../../spinner\";\n\nexport const TESTCAFE_ID_ACCESS_DETAILS_REMOVE_BUTTON =\n  \"access-details-remove-button\";\n\nexport const REMOVE_ACCESS_CONFIRMATION_DIALOG =\n  \"remove-access-confirmation-dialog\";\n\nexport const getAllowModes = (accessList) => {\n  if (!accessList) return null;\n  const accessModes = [\n    ...new Set(\n      [\n        ...accessList.map(({ allow }) => {\n          return allow.map((mode) => mode);\n        }),\n      ].reduce((acc, modes) => [...acc, ...modes], [])\n    ),\n  ];\n  return accessModes;\n};\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport default function ResourceAccessDrawer({\n  open,\n  onClose,\n  accessList,\n  resourceIri,\n  podRoot,\n  setShouldUpdate,\n}) {\n  const classes = useStyles();\n  const bem = useBem(classes);\n  const { data: resourceInfo } = useResourceInfo(resourceIri, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: false,\n  });\n  const { data: accessControl, error: accessControlError } =\n    useAccessControl(resourceInfo);\n  const resourceName = resourceIri && getResourceName(resourceIri);\n  const resourcePath =\n    resourceIri && getParentContainerUrl(resourceIri)?.replace(podRoot, \"\");\n\n  const allowModes = getAllowModes(accessList);\n  const modes = allowModes?.map((mode) => {\n    return {\n      read: !!mode.includes(\"Read\"),\n      write: !!mode.includes(\"Write\"),\n      append: !!mode.includes(\"Append\"),\n      control: !!mode.includes(\"Control\"),\n    };\n  });\n\n  const accessDetails = modes?.map((mode) => {\n    return getAcpAccessDetails(mode);\n  });\n  const order = [\"View\", \"Edit\", \"Add\", \"Share\", \"View Sharing\"];\n  const sortedAccessDetails = accessDetails?.sort((a, b) => {\n    return order.indexOf(a.name) - order.indexOf(b.name);\n  });\n\n  return (\n    <Drawer anchor=\"top\" open={open} close={onClose}>\n      {!accessControl && !accessControlError && <Spinner />}\n      {accessControl && (\n        <div className={bem(\"access-details\", \"wrapper\")}>\n          <span className={bem(\"access-details\", \"title\")}>\n            <span className={bem(\"access-details\", \"resource-info\")}>\n              <p>{decodeURIComponent(resourcePath)}</p>\n              <h2>\n                {\" \"}\n                <Icons\n                  name={\n                    resourceIri && isContainerIri(resourceIri)\n                      ? \"folder\"\n                      : \"file\"\n                  }\n                  className={bem(\"access-details\", \"icon\")}\n                />\n                {resourceName}\n              </h2>\n            </span>\n          </span>\n          <section className={bem(\"access-details\", \"section\")}>\n            <h3 className={bem(\"access-details\", \"section-header\")}>Access</h3>\n            <hr className={bem(\"access-details\", \"separator\")} />\n            <List>\n              {sortedAccessDetails?.map(({ name, icon, description }) => {\n                return (\n                  <ListItem key={name}>\n                    <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                      <Icons\n                        name={icon}\n                        className={bem(\"access-details\", \"section-icon\")}\n                      />\n                    </ListItemIcon>\n                    <ListItemText\n                      classes={{\n                        root: classes.listItemText,\n                        primary: classes.listItemTitleText,\n                        secondary: classes.listItemSecondaryText,\n                      }}\n                      key={name}\n                      primary={name}\n                      secondary={description}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </section>\n          <RevokeAccessButton\n            variant=\"drawer\"\n            resources={[resourceIri]}\n            onClose={onClose}\n            accessList={accessList}\n            setShouldUpdate={setShouldUpdate}\n          />\n        </div>\n      )}\n    </Drawer>\n  );\n}\n\nResourceAccessDrawer.propTypes = {\n  open: T.bool.isRequired,\n  accessList: T.arrayOf(\n    T.shape({\n      agent: T.string,\n      allow: T.arrayOf(T.string),\n      deny: T.arrayOf(T.string),\n      resource: T.string,\n    })\n  ),\n  onClose: T.func.isRequired,\n  resourceIri: T.string,\n  podRoot: T.string,\n  setShouldUpdate: T.func,\n};\n\nResourceAccessDrawer.defaultProps = {\n  accessList: [],\n  resourceIri: null,\n  podRoot: null,\n  setShouldUpdate: () => {},\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst DETAILS_ICON_COLOR = \"#4CAF50\";\n\nexport default function styles(theme) {\n  return {\n    \"access-details--wrapper\": {\n      padding: \"1.5rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    \"access-details--title\": {\n      \"& h2\": {\n        padding: \"0 0 0 2rem\",\n        margin: 0,\n        fontFamily: theme.typography.h2.fontFamily,\n        position: \"relative\",\n        \"& > *\": {\n          position: \"absolute\",\n          left: 0,\n          top: \"0.3rem\",\n        },\n      },\n    },\n    \"access-details--resource-info\": {\n      flexGrow: 1,\n      \"& > *\": {\n        paddingLeft: \"2rem\",\n      },\n      \"& p\": {\n        fontSize: \"0.8125rem\",\n        margin: 0,\n        wordWrap: \"break-word\",\n      },\n    },\n    \"access-details--icon\": {\n      fontSize: \"1.5rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      background: \"linear-gradient(to right, #0D6796, #33B2D3)\",\n      \"-webkit-background-clip\": \"text\",\n      color: \"transparent\",\n      marginRight: \"1rem\",\n    },\n    \"access-details--section\": {\n      minWidth: \"100%\",\n    },\n    \"access-details--section-header\": {\n      fontFamily: theme.typography.h3.fontFamily,\n    },\n    \"access-details--section-icon\": {\n      color: DETAILS_ICON_COLOR,\n      fontSize: \"1rem\",\n      alignItems: \"flex-start\",\n    },\n    listItemIcon: {\n      minWidth: \"fit-content\",\n      paddingRight: \"0.5rem\",\n      display: \"flex\",\n      alignSelf: \"flex-start\",\n      paddingTop: \"0.2rem\",\n    },\n    listItemTitleText: {\n      fontFamily: theme.typography.body.fontFamily,\n      fontSize: theme.typography.body1.fontSize,\n    },\n    listItemSecondaryText: {\n      fontFamily: theme.typography.body.fontFamily,\n      fontSize: \"0.8125rem\",\n    },\n    \"access-details--separator\": {\n      backgroundColor: theme.palette.grey.A100,\n      border: \"none\",\n      height: \"1px\",\n    },\n    listItemText: {\n      marginTop: 0,\n    },\n    \"access-details--remove-access-button\": {\n      border: \"none\",\n      background: \"transparent\",\n      color: theme.palette.error.main,\n      textDecoration: \"underline\",\n      fontSize: \"1rem\",\n      cursor: \"pointer\",\n      textAlign: \"left\",\n      justifySelf: \"flex-end\",\n    },\n  };\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport T from \"prop-types\";\n\nexport default function TabPanel(props) {\n  const { children, value, panelName, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== panelName}\n      id={`simple-tabpanel-${panelName}`}\n      aria-labelledby={`simple-tab-${panelName}`}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...other}\n    >\n      {value === panelName && (\n        <Box p={1} mt={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: T.node,\n  panelName: T.string.isRequired,\n  value: T.string.isRequired,\n};\n\nTabPanel.defaultProps = {\n  children: null,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst secondaryTeal80 = \"#3D85AB\";\nconst secondaryTeal10 = \"#E6EFF4\";\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    avatar: {\n      width: \"64px\",\n      height: \"64px\",\n    },\n    avatarText: {\n      fontFamily: theme.typography.h1.fontFamily,\n      fontSize: \"1.5rem\",\n      color: theme.palette.secondary.contrastText,\n    },\n    headerLink: {\n      display: \"block\",\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: \"1rem\",\n      fontWeight: theme.typography.body2.fontWeight,\n      color: theme.palette.secondary.contrastText,\n    },\n    container: {\n      width: \"100%\",\n      maxWidth: theme.breakpoints.width(\"md\"),\n      paddingTop: theme.spacing(1),\n      margin: \"0 auto\",\n    },\n    \"access-details--icon\": {\n      fontSize: \"1.5rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      background: \"linear-gradient(to right, #0D6796, #33B2D3)\",\n      \"-webkit-background-clip\": \"text\",\n      color: \"transparent\",\n    },\n    table__container: {\n      border: \"solid 1px\",\n      borderColor: theme.palette.grey[\"200\"],\n      borderCollapse: \"collapse\",\n      boxShadow: \"0 4px 12px 1px rgba(208,208,208,0.22)\",\n      borderRadius: 8,\n      paddingBottom: \"0.5em\",\n      marginBottom: \"1.5rem\",\n    },\n    table: {\n      borderCollapse: \"collapse\",\n      borderRadius: 8,\n    },\n    table__header: {\n      borderBottom: \"1px solid\",\n      borderBottomColor: theme.palette.grey[\"200\"],\n    },\n    \"table__head-cell\": {\n      padding: \"1em\",\n    },\n    \"table__body-row\": {\n      borderBottom: \"0 !important\",\n      borderTop: \"1px solid\",\n      borderTopColor: theme.palette.grey[\"200\"],\n      \"&:hover\": {\n        cursor: \"pointer\",\n        background: theme.palette.grey[\"50\"],\n      },\n      \"&:last-child\": {\n        borderBottom: 0,\n      },\n    },\n    \"table__body-row--active\": {\n      border: `2px solid ${secondaryTeal80} !important`,\n      backgroundColor: secondaryTeal10,\n    },\n    \"table__body-cell\": {\n      width: \"2em\",\n    },\n\n    \"table__body-cell--interactive\": {\n      width: \"auto\",\n      maxWidth: \"650px\",\n      cursor: \"pointer\",\n      textDecoration: \"underline\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      direction: \"rtl\",\n      textAlign: \"left\",\n    },\n    \"revoke-button__container\": {\n      paddingBottom: \"2rem\",\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { CombinedDataProvider, useSession, Text } from \"@inrupt/solid-ui-react\";\nimport { useRouter } from \"next/router\";\nimport T from \"prop-types\";\nimport { schema, foaf } from \"rdf-namespaces\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useSortBy, useTable } from \"react-table\";\nimport clsx from \"clsx\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport {\n  ActionButton,\n  Button,\n  BackToNav,\n  BackToNavLink,\n  DrawerContainer,\n  Icons,\n  Table as PrismTable,\n} from \"@inrupt/prism-react-components\";\nimport { createStyles, Divider } from \"@material-ui/core\";\nimport ConfirmationDialog from \"../../../../confirmationDialog\";\nimport { handleAction } from \"../../../../containerTableRow\";\nimport { useRedirectIfLoggedOut } from \"../../../../../src/effects/auth\";\nimport PersonAvatar from \"../../../../profile/personAvatar\";\nimport AppAvatar from \"../../../../profile/appAvatar\";\nimport PersonProfile from \"../../../../profile/personProfile\";\nimport AppProfile from \"../../../../profile/appProfile\";\nimport Tabs from \"../../../../tabs\";\nimport usePodRootUri from \"../../../../../src/hooks/usePodRootUri\";\nimport Spinner from \"../../../../spinner\";\nimport RevokeAccessButton from \"../revokeAccessButton\";\nimport ResourceAccessDrawer, { getAllowModes } from \"../resourceAccessDrawer\";\nimport SortedTableCarat from \"../../../../sortedTableCarat\";\nimport { getAcpAccessDetails } from \"../../../../../src/accessControl/acp\";\nimport { getResourceName } from \"../../../../../src/solidClientHelpers/resource\";\nimport { isContainerIri } from \"../../../../../src/solidClientHelpers/utils\";\nimport { getParentContainerUrl } from \"../../../../../src/stringHelpers\";\nimport TabPanel from \"./tabPanel\";\nimport styles from \"./styles\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport const TESTCAFE_ID_TAB_PERMISSIONS = \"permissions-tab\";\nexport const TESTCAFE_ID_TAB_PROFILE = \"profile-tab\";\nexport const USER_ACCESS_STRING = \"has access to these resources\";\n\nexport default function AgentResourceAccessShowPage({ type }) {\n  useRedirectIfLoggedOut();\n  const router = useRouter();\n  const decodedIri = decodeURIComponent(router.query.webId);\n  const tableClass = PrismTable.useTableClass(\"table\", \"inherits\");\n  useRedirectIfLoggedOut();\n  const { session, fetch } = useSession();\n  const podRoot = usePodRootUri(session.info.webId);\n  const [resources, setResources] = useState([]);\n  const [accessList, setAccessList] = useState([]);\n  const [selectedResourceIndex, setSelectedResourceIndex] = useState(null);\n  const [selectedAccessList, setSelectedAccessList] = useState(null);\n  const [resourcesError, setResourcesError] = useState(null);\n  const [shouldUpdate, setShouldUpdate] = useState(false);\n  const [selectedTabValue, setSelectedTabValue] = useState(\"Permissions\");\n\n  const link = <BackToNavLink href=\"/privacy\">privacy</BackToNavLink>;\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabValue(newValue);\n  };\n\n  const classes = useStyles();\n  const bem = useBem(classes);\n\n  const tabs = [\n    {\n      label: \"Permissions\",\n      testid: TESTCAFE_ID_TAB_PERMISSIONS,\n      value: \"Permissions\",\n    },\n    {\n      label: \"Profile\",\n      testid: TESTCAFE_ID_TAB_PROFILE,\n      value: \"Profile\",\n    },\n  ];\n\n  const query = `\n  {\n    pod(iri: \"${podRoot}\" ) {\n        accessByAgent(agent: \"${decodedIri}\" ) {\n        agent\n        allow\n        resource\n        }\n    }\n  }\n  `;\n  useEffect(() => {\n    /* istanbul ignore next */\n    if (!podRoot) return;\n    // FIXME: write tests for this\n    /* istanbul ignore next */\n    fetch(\"https://access.pod.inrupt.com/graphql/\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ query }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .catch((error) => {\n        setResourcesError(error);\n      })\n      .then(({ data }) => {\n        if (!data || !data.pod) return;\n        const { accessByAgent = {} } = data.pod;\n        setAccessList(accessByAgent);\n        const resourceList = [\n          ...new Set(data.pod.accessByAgent.map(({ resource }) => resource)),\n        ];\n        setResources(resourceList);\n        setShouldUpdate(false);\n      });\n  }, [query, podRoot, fetch, session, shouldUpdate]);\n\n  useEffect(() => {\n    // FIXME: ignoring this until we have mock resources in the tests\n    /* istanbul ignore next */\n    const selectedAccess = accessList.filter(\n      ({ resource }) => resource === resources[selectedResourceIndex]\n    );\n    setSelectedAccessList(selectedAccess);\n  }, [accessList, resources, selectedResourceIndex]);\n\n  const drawer = (\n    <ResourceAccessDrawer\n      accessList={selectedAccessList}\n      /* istanbul ignore next */\n      open={selectedResourceIndex !== null}\n      onClose={() => setSelectedResourceIndex(null)}\n      resourceIri={resources[selectedResourceIndex]}\n      podRoot={podRoot}\n      agentWebId={decodedIri}\n      setShouldUpdate={setShouldUpdate}\n    />\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        header: \"Icon\",\n        accessor: \"icon\",\n        disableSortBy: true,\n      },\n      {\n        Header: \"Name\",\n        accessor: \"resource\",\n      },\n      {\n        Header: \"Access\",\n      },\n      {\n        header: \"Actions\",\n        accessor: \"actions\",\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  const data = useMemo(() => {\n    /* istanbul ignore next */\n    if (!resources) {\n      return [];\n    }\n    // showing the first 3 resources for dev purposes\n    return resources;\n  }, [resources]);\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns,\n        data,\n        defaultCanSort: true,\n      },\n      useSortBy\n    );\n\n  // FIXME: update when we have mocked errors\n  /* istanbul ignore next */\n  if (resourcesError) {\n    return resourcesError.toString();\n  }\n\n  // FIXME: update when we can test removing resources from the list\n  /* istanbul ignore next */\n  if (shouldUpdate) {\n    return <Spinner />;\n  }\n  // FIXME: using a conditional dataset provider wrapper while we mock app profiles\n  const ConditionalWrapper = ({ condition, wrapper, children }) =>\n    condition ? wrapper(children) : children;\n\n  const renderAvatar = () => {\n    if (type === schema.SoftwareApplication) {\n      return <AppAvatar profileIri={decodedIri} />;\n    }\n    return <PersonAvatar profileIri={decodedIri} />;\n  };\n\n  const renderProfile = () => {\n    if (type === schema.SoftwareApplication) {\n      return <AppProfile profileIri={decodedIri} />;\n    }\n    return <PersonProfile profileIri={decodedIri} />;\n  };\n\n  return (\n    <ConditionalWrapper\n      condition={type !== schema.SoftwareApplication}\n      wrapper={(children) => (\n        <CombinedDataProvider datasetUrl={decodedIri} thingUrl={decodedIri}>\n          {children}\n        </CombinedDataProvider>\n      )}\n    >\n      <DrawerContainer drawer={drawer} open={selectedResourceIndex !== null}>\n        <div className={classes.container}>\n          <BackToNav link={link} />\n          {renderAvatar()}\n          <Tabs\n            tabs={tabs}\n            handleTabChange={handleTabChange}\n            selectedTabValue={selectedTabValue}\n          />\n          <TabPanel value={selectedTabValue} panelName=\"Permissions\">\n            <p>\n              {/* FIXME: Temporary workaround for mockApp name since there is no dataset */}\n              {type === schema.SoftwareApplication && <span>MockApp</span>}\n              {type !== schema.SoftwareApplication && (\n                <Text property={foaf.name} />\n              )}\n              {` `}\n              {USER_ACCESS_STRING}\n            </p>\n            {resources.length === 0 && <Spinner />}\n            {resources.length !== 0 && (\n              // FIXME: update when we have mock list of resources\n              /* istanbul ignore next */\n              <>\n                <div className={bem(\"table__container\")}>\n                  <table\n                    className={clsx(tableClass, bem(\"table\"))}\n                    {...getTableProps()}\n                  >\n                    <thead className={bem(\"table__header\")}>\n                      {headerGroups.map((headerGroup) => (\n                        <tr\n                          key={headerGroup.id}\n                          {...headerGroup.getHeaderGroupProps()}\n                        >\n                          {headerGroup.headers.map((column) => (\n                            <td\n                              key={column.id}\n                              className={bem(\"table__head-cell\")}\n                              {...column.getHeaderProps(\n                                column.getSortByToggleProps()\n                              )}\n                            >\n                              {column.render(\"Header\")}\n                              {` `}\n                              <SortedTableCarat\n                                sorted={column.isSorted}\n                                sortedDesc={column.isSortedDesc}\n                              />\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                      {rows.map((row, i) => {\n                        prepareRow(row);\n                        const details = row.original;\n                        const resourceName =\n                          details && getResourceName(details);\n                        const resourcePath = getParentContainerUrl(\n                          details\n                        ).replace(podRoot, \"\");\n                        const resourcePathAndName = `${\n                          resourcePath + resourceName.trim()\n                        }`;\n                        const resourceAccess = accessList.filter(\n                          ({ resource }) => resource === row.original\n                        );\n                        const allowModes = getAllowModes(resourceAccess);\n                        const modes = allowModes?.map((mode) => {\n                          return {\n                            read: !!mode.includes(\"Read\"),\n                            write: !!mode.includes(\"Write\"),\n                            append: !!mode.includes(\"Append\"),\n                            control: !!mode.includes(\"Control\"),\n                          };\n                        });\n                        const accessDetails = modes?.map((mode) => {\n                          return getAcpAccessDetails(mode);\n                        });\n                        const accessDetailsName = accessDetails?.map(\n                          ({ name }) => name\n                        );\n                        return (\n                          <tr\n                            key={details}\n                            className={`${\n                              selectedResourceIndex === i\n                                ? bem(\"table__body-row\", \"active\")\n                                : bem(\"table__body-row\")\n                            }`}\n                          >\n                            <td className={bem(\"table__body-cell\")}>\n                              <Icons\n                                name={\n                                  details && isContainerIri(details)\n                                    ? \"folder\"\n                                    : \"file\"\n                                }\n                                className={bem(\"access-details\", \"icon\")}\n                              />\n                            </td>\n                            <td\n                              className={bem(\"table__body-cell\", \"interactive\")}\n                              onClick={() => setSelectedResourceIndex(i)}\n                              onKeyDown={() => setSelectedResourceIndex(i)}\n                            >\n                              {decodeURIComponent(resourcePathAndName)}\n                            </td>\n                            <td>{accessDetailsName?.join(\", \")}</td>\n                            <td className={bem(\"table__body-cell\")}>\n                              <ActionButton>\n                                <Button\n                                  variant=\"in-menu\"\n                                  /* istanbul ignore next */\n                                  onClick={() => setSelectedResourceIndex(i)}\n                                >\n                                  Details\n                                </Button>\n                                <Button\n                                  onClick={handleAction(\n                                    resources[i],\n                                    getParentContainerUrl(details),\n                                    router\n                                  )}\n                                  variant=\"in-menu\"\n                                >\n                                  View Resource\n                                </Button>\n                                <Divider />\n                                <RevokeAccessButton\n                                  variant=\"in-menu\"\n                                  /* istanbul ignore next */\n                                  onClose={() => setSelectedResourceIndex(null)}\n                                  accessList={resourceAccess}\n                                  resources={[resources[i]]}\n                                  setShouldUpdate={setShouldUpdate}\n                                />\n                              </ActionButton>\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n                <div className={bem(\"revoke-button__container\")}>\n                  <RevokeAccessButton\n                    variant=\"all-access\"\n                    /* istanbul ignore next */\n                    onClose={() => router.push(\"/privacy\")}\n                    accessList={accessList}\n                    resources={resources}\n                  />\n                </div>\n              </>\n            )}\n          </TabPanel>\n          <TabPanel value={selectedTabValue} panelName=\"Profile\">\n            {renderProfile()}\n          </TabPanel>\n          <ConfirmationDialog />\n        </div>\n      </DrawerContainer>\n    </ConditionalWrapper>\n  );\n}\n\nAgentResourceAccessShowPage.propTypes = {\n  type: T.string.isRequired,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable react/forbid-prop-types */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Tabs as MuiTabs, Tab, createStyles } from \"@material-ui/core\";\n\nimport styles from \"./styles\";\n\nexport default function Tabs({\n  handleTabChange,\n  selectedTabValue,\n  className,\n  tabs,\n  children,\n}) {\n  const useStyles = makeStyles((theme) => createStyles(styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.tabsContainer, className)}>\n      <MuiTabs\n        classes={{ indicator: classes.indicator }}\n        value={selectedTabValue}\n        onChange={handleTabChange}\n        aria-label=\"Filter tabs\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.label}\n            classes={{\n              root: classes.tab,\n              selected: classes.selected,\n            }}\n            label={tab.label}\n            data-testid={tab.testid}\n            value={tab.value}\n          />\n        ))}\n      </MuiTabs>\n      {children}\n    </div>\n  );\n}\n\nTabs.propTypes = {\n  handleTabChange: PropTypes.func.isRequired,\n  selectedTabValue: PropTypes.string,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      testid: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ).isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nTabs.defaultProps = {\n  className: null,\n  selectedTabValue: null,\n  children: null,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nexport default function styles(theme) {\n  return createStyles(theme, [\"icons\", \"table\"], {\n    tabsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      paddingLeft: theme.spacing(1.2),\n      paddingRight: theme.spacing(1.2),\n      borderBottom: `1px solid ${theme.palette.grey.A100}`,\n    },\n    tab: {\n      textTransform: \"none\",\n      minWidth: \"max-content\",\n      fontFamily: theme.typography.body1.fontFamily,\n      fontSize: theme.typography.body1.fontSize,\n      color: theme.palette.primary.text,\n    },\n    selected: {\n      color: theme.palette.primary.main,\n    },\n    indicator: {\n      height: \"3px\",\n      width: \"100%\",\n      backgroundColor: theme.palette.primary.main,\n    },\n  });\n}\n","import { getIri } from '../thing/get.mjs';\nimport { acl } from '../constants.mjs';\nimport { hasResourceAcl, hasFallbackAcl, getResourceAcl, getFallbackAcl } from './acl.mjs';\nimport { internal_combineAccessModes, internal_getAccessByIri, internal_getAclRules, internal_getResourceAclRulesForResource, internal_getAclRulesForIri, internal_getAccess, internal_setActorAccess, internal_getDefaultAclRulesForResource } from './acl.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's explicitly-granted Access Modes for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Agent through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the Agent for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccess(resourceInfo, agent) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getAgentResourceAccess(resourceInfo.internal_acl.resourceAcl, agent);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getAgentDefaultAccess(resourceInfo.internal_acl.fallbackAcl, agent);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns all explicitly-granted Access Modes per Agent for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to Agents through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which Agents may have been granted access.\r\n * @returns Access Modes per Agent that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccessAll(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getAgentResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getAgentDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to an Agent for the Resource\r\n * associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the child Resources if the associated Resource is a Container (see [[getAgentDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Agent for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @returns Access Modes per Agent that have been explicitly granted for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules for Agent's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentResourceAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agent, \"resource\", agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's Access Modes explicitly granted for the children of the\r\n * Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself (see [[getAgentResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules for a certain Container.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Container's children.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Agent, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agents through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agents for the Container Resource itself (see [[getAgentResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @returns Access Modes, per Agent, that have been explicitly granted for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set an Agent's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules already exist for the Agent in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentDefaultAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agent, \"default\", agent);\r\n}\r\nfunction getAgentAclRulesForAgent(aclRules, agent) {\r\n    return internal_getAclRulesForIri(aclRules, agent, acl.agent);\r\n}\r\nfunction getAgentAclRules(aclRules) {\r\n    return aclRules.filter(isAgentAclRule);\r\n}\r\nfunction isAgentAclRule(aclRule) {\r\n    return getIri(aclRule, acl.agent) !== null;\r\n}\r\nfunction getAccessByAgent(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agent);\r\n}\n\nexport { getAgentAccess, getAgentAccessAll, getAgentDefaultAccess, getAgentDefaultAccessAll, getAgentResourceAccess, getAgentResourceAccessAll, setAgentDefaultAccess, setAgentResourceAccess };\n"],"names":["theme","createStyles","avatar","width","height","background","appAvatar","textAlign","padding","spacing","borderRadius","fontSize","typography","h5","color","palette","primary","main","backgroundColor","avatarText","fontFamily","h1","secondary","contrastText","headerLink","display","body2","fontWeight","useStyles","makeStyles","styles","app","mockApp","dataset","mockAppDataset","AppAvatar","profileIri","useState","error","setError","classes","bem","useBem","toString","errorComponent","Avatar","className","alt","name","setupErrorComponent","DatasetProvider","solidDataset","ThingProvider","thing","onError","Box","alignItems","Image","property","LOGO_PREDICATE","p","Text","foaf","href","rel","target","textDecoration","border","cursor","REMOVE_ACCESS_CONFIRMATION_DIALOG","ALL_ACCESS_MESSAGE","RevokeAccessButton","variant","resources","onClose","accessList","setShouldUpdate","useContext","AlertContext","alertError","alertSuccess","agent","agentWebId","setAgentWebId","session","useSession","fetch","webId","options","useSWR","PUBLIC_AGENT_PREDICATE","PUBLIC_AGENT_NAME","AUTHENTICATED_AGENT_PREDICATE","AUTHENTICATED_AGENT_NAME","fetchProfile","useAgentProfile","agentProfile","data","agentName","ConfirmationDialogContext","confirmed","dialogOpen","open","setContent","setOpen","setTitle","closeDialog","setConfirmText","setIsDangerousAction","confirmationSetup","setConfirmationSetup","podRoot","usePodRootUri","info","policiesContainer","getPoliciesContainerUrl","resourceName","length","getResourceName","removeAccess","policyNames","map","allow","read","includes","write","append","control","acpMap","getPolicyDetailFromAccess","url","getResourceInfo","resource","getAccessControl","accessControl","policy","removeAgentFromPolicy","isHTTPError","handleRemoveAccess","useEffect","handleConfirmation","type","clsx","onClick","defaultProps","getAllowModes","Set","mode","reduce","acc","modes","flexDirection","margin","h2","position","left","top","flexGrow","paddingLeft","wordWrap","marginRight","minWidth","h3","listItemIcon","paddingRight","alignSelf","paddingTop","listItemTitleText","body","body1","listItemSecondaryText","grey","A100","listItemText","marginTop","justifySelf","ResourceAccessDrawer","resourceIri","resourceInfo","useResourceInfo","revalidateOnFocus","shouldRetryOnError","useAccessControl","accessControlError","resourcePath","getParentContainerUrl","replace","allowModes","accessDetails","getAcpAccessDetails","order","sortedAccessDetails","sort","a","b","indexOf","anchor","close","decodeURIComponent","isContainerIri","List","icon","description","ListItem","key","ListItemIcon","root","ListItemText","TabPanel","props","children","value","panelName","other","role","hidden","id","mt","container","maxWidth","breakpoints","table__container","borderColor","borderCollapse","boxShadow","paddingBottom","marginBottom","table","table__header","borderBottom","borderBottomColor","borderTop","borderTopColor","whiteSpace","overflow","textOverflow","direction","AgentResourceAccessShowPage","useRedirectIfLoggedOut","router","useRouter","decodedIri","query","tableClass","PrismTable","setResources","setAccessList","selectedResourceIndex","setSelectedResourceIndex","selectedAccessList","setSelectedAccessList","resourcesError","setResourcesError","shouldUpdate","selectedTabValue","setSelectedTabValue","link","tabs","label","testid","method","headers","JSON","stringify","then","response","json","pod","accessByAgent","resourceList","selectedAccess","filter","drawer","columns","useMemo","header","accessor","disableSortBy","Header","useTable","defaultCanSort","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","ConditionalWrapper","condition","wrapper","schema","CombinedDataProvider","datasetUrl","thingUrl","handleTabChange","event","newValue","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","sorted","isSorted","sortedDesc","isSortedDesc","row","i","details","original","resourcePathAndName","trim","resourceAccess","accessDetailsName","onKeyDown","join","handleAction","Divider","push","Tabs","tabsContainer","justifyContent","tab","textTransform","text","selected","indicator","onChange","Tab","getAgentAccessAll","aclDataset","allRules","resourceRules","internal_accessTo","getAccessByAgent","getAgentAclRules","getAgentResourceAccessAll","getAgentDefaultAccessAll","setAgentResourceAccess","access","setAgentDefaultAccess","aclRules","isAgentAclRule","aclRule"],"sourceRoot":""}