{"version":3,"file":"static/chunks/287-b53f009398b38aaf.js","mappings":"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","sources":["webpack://_N_E/./components/containerTableRow/index.jsx","webpack://_N_E/./components/containerTableRow/styles.js","webpack://_N_E/./src/accessControl/wac/index.js","webpack://_N_E/./src/accessControl/index.js","webpack://_N_E/./src/contexts/detailsMenuContext/index.jsx","webpack://_N_E/./src/hooks/useAccessControlType/index.jsx","webpack://_N_E/./src/hooks/useAccessControl/index.jsx","webpack://_N_E/./src/hooks/useIsLegacyAcp/index.js","webpack://_N_E/./src/hooks/usePoliciesContainerUrl/index.js"],"sourcesContent":["/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint-disable camelcase */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { useRouter } from \"next/router\";\nimport clsx from \"clsx\";\nimport T from \"prop-types\";\nimport { isContainer } from \"@inrupt/solid-client\";\nimport { DETAILS_CONTEXT_ACTIONS } from \"../../src/contexts/detailsMenuContext\";\nimport PodLocationContext from \"../../src/contexts/podLocationContext\";\nimport ResourceLink from \"../resourceLink\";\nimport Bookmark from \"../bookmark\";\nimport styles from \"./styles\";\nimport { resourceContextRedirect } from \"../../src/navigator\";\nimport { isContainerIri } from \"../../src/solidClientHelpers/utils\";\n\nexport function ResourceIcon({ iri, bem }) {\n  // keeping it very simple for now (either folder or file), and then we can expand upon it later\n  const icon = isContainerIri(iri) ? \"icon-folder\" : \"icon-file\";\n\n  return <i className={clsx(bem(icon), bem(\"resource-icon\"))} />;\n}\n\nResourceIcon.propTypes = {\n  iri: T.string.isRequired,\n  bem: T.func.isRequired,\n};\n\nexport function renderResourceType(iri) {\n  return isContainerIri(iri) ? \"Container\" : \"Resource\";\n}\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport function handleAction(resourceIri, containerIri, router) {\n  const action = DETAILS_CONTEXT_ACTIONS.DETAILS;\n\n  return async (event) => {\n    if (event.type === \"keydown\" && event.key !== \"Enter\") return;\n    const element = event.target;\n    if (element && element.tagName === \"A\") return;\n    if (element && element.tagName === \"I\") return;\n    await resourceContextRedirect(action, resourceIri, containerIri, router);\n  };\n}\n\nexport function handlePreselection(resourceIri, containerIri, router) {\n  const action = DETAILS_CONTEXT_ACTIONS.DETAILS;\n  return (async () => {\n    await resourceContextRedirect(action, resourceIri, containerIri, router);\n  })();\n}\n\nexport default function ContainerTableRow({\n  resource,\n  container,\n  preselected,\n}) {\n  const classes = useStyles();\n  const bem = useBem(classes);\n  const { name, iri } = resource;\n  const router = useRouter();\n  const { currentUri } = useContext(PodLocationContext);\n  const isActive = router.query.resourceIri === iri;\n  const [shouldRedirect, setShouldRedirect] = useState(preselected);\n\n  useEffect(() => {\n    if (!isContainer(iri) && preselected) {\n      setShouldRedirect(true);\n    }\n  }, [preselected, iri, setShouldRedirect]);\n\n  useEffect(() => {\n    if (shouldRedirect) {\n      handlePreselection(iri, container, router);\n      setShouldRedirect(false);\n    }\n  }, [\n    shouldRedirect,\n    setShouldRedirect,\n    container,\n    iri,\n    router,\n    preselected,\n    resource,\n  ]);\n\n  return (\n    <tr\n      tabIndex=\"0\"\n      className={clsx(\n        bem(\"table__body-row\", \"selectable\", isActive ? \"selected\" : null)\n      )}\n      onClick={handleAction(iri, currentUri, router)}\n      onKeyDown={handleAction(iri, currentUri, router)}\n    >\n      <td className={bem(\"table__body-cell\", \"align-center\", \"width-preview\")}>\n        <Bookmark iri={iri} />\n      </td>\n      <td className={bem(\"table__body-cell\", \"align-center\", \"width-preview\")}>\n        <ResourceIcon iri={iri} bem={bem} />\n      </td>\n      <td className={bem(\"table__body-cell\")}>\n        {isContainer(iri) ? (\n          <ResourceLink\n            containerIri={iri}\n            resourceIri={iri}\n            className={bem(\"table__link\")}\n          >\n            {name}\n          </ResourceLink>\n        ) : (\n          name\n        )}\n      </td>\n      <td key={`${iri}-type`} className={bem(\"table__body-cell\")}>\n        {renderResourceType(iri)}\n      </td>\n    </tr>\n  );\n}\n\nContainerTableRow.propTypes = {\n  resource: T.shape({\n    name: T.string.isRequired,\n    iri: T.string.isRequired,\n  }),\n  container: T.string.isRequired,\n  preselected: T.bool,\n};\n\nContainerTableRow.defaultProps = {\n  resource: {\n    name: \"\",\n    iri: \"\",\n  },\n  preselected: false,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nexport default function styles(theme) {\n  return createStyles(theme, [\"icons\", \"table\"], {\n    spinnerContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"nowrap\",\n      justifyContent: \"center\",\n    },\n    \"resource-icon\": theme.icons.iconColor(theme.palette.text.secondary),\n  });\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport {\n  createAclFromFallbackAcl,\n  deleteFile,\n  getAgentAccessAll,\n  getAgentDefaultAccessAll,\n  getFallbackAcl,\n  getResourceAcl,\n  getResourceInfoWithAcl,\n  getSourceUrl,\n  hasAccessibleAcl,\n  hasFallbackAcl,\n  hasResourceAcl,\n  saveAclFor,\n  setAgentDefaultAccess,\n  setAgentResourceAccess,\n} from \"@inrupt/solid-client\";\nimport {\n  chain,\n  createResponder,\n  isContainerIri,\n} from \"../../solidClientHelpers/utils\";\nimport { displayPermissions } from \"../../solidClientHelpers/permissions\";\nimport { isUrl } from \"../../stringHelpers\";\n\nexport const noAclError = \"No available ACL resource for this resource\";\n\nexport function hasAcl(dataset) {\n  // TODO: stand-in until hasAcl is properly exported from @inrupt/solid-client\n  return typeof dataset.internal_acl === \"object\";\n}\n\nexport default class WacAccessControlStrategy {\n  #datasetWithAcl;\n\n  #fetch;\n\n  constructor(datasetWithAcl, fetch) {\n    this.#datasetWithAcl = datasetWithAcl;\n    this.#fetch = fetch;\n  }\n\n  async deleteFile() {\n    return deleteFile(getSourceUrl(this.#datasetWithAcl), {\n      fetch: this.#fetch,\n    });\n  }\n\n  async getPermissions() {\n    if (hasResourceAcl(this.#datasetWithAcl)) {\n      const accessModeList = getAgentAccessAll(this.#datasetWithAcl);\n      return this.normalizePermissions(accessModeList);\n    }\n    if (hasAccessibleAcl(this.#datasetWithAcl)) {\n      const fallbackAcl = getFallbackAcl(this.#datasetWithAcl);\n      const accessModeList = getAgentDefaultAccessAll(fallbackAcl);\n      return this.normalizePermissions(accessModeList);\n    }\n    throw new Error(\n      `No access to ACL for ${getSourceUrl(this.#datasetWithAcl)}`\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  normalizePermissions(permissions) {\n    return Object.keys(permissions)\n      .filter(isUrl)\n      .map((webId) => {\n        const acl = permissions[webId];\n        const alias = displayPermissions(acl);\n        return {\n          acl,\n          alias,\n          webId,\n        };\n      });\n  }\n\n  async savePermissionsForAgent(webId, access) {\n    const { respond, error } = createResponder();\n\n    if (!hasAccessibleAcl(this.#datasetWithAcl)) {\n      return error(\"dataset does not have accessible ACL\");\n    }\n\n    let aclDataset;\n    if (hasResourceAcl(this.#datasetWithAcl)) {\n      aclDataset = getResourceAcl(this.#datasetWithAcl);\n    } else if (hasFallbackAcl(this.#datasetWithAcl)) {\n      aclDataset = createAclFromFallbackAcl(this.#datasetWithAcl);\n    } else {\n      return error(\"unable to access ACL\");\n    }\n\n    if (!aclDataset) return error(\"aclDataset is empty\");\n\n    const datasetUri = getSourceUrl(this.#datasetWithAcl);\n    const updatedAcl = chain(\n      setAgentResourceAccess(aclDataset, webId, access),\n      (acl) =>\n        isContainerIri(datasetUri)\n          ? setAgentDefaultAccess(acl, webId, access) // will only apply default permissions if dataset is a container\n          : acl\n    );\n    if (!updatedAcl) return error(\"updatedAcl is empty\");\n\n    const response = await saveAclFor(this.#datasetWithAcl, updatedAcl, {\n      fetch: this.#fetch,\n    });\n    if (!response) return error(\"response is empty\");\n\n    // TODO: Can optimize once saveAclFor returns the resource dataset instead of the acl dataset\n    const dataset = await getResourceInfoWithAcl(\n      getSourceUrl(this.#datasetWithAcl),\n      {\n        fetch: this.#fetch,\n      }\n    );\n    if (!dataset) return error(\"dataset is empty\");\n\n    this.#datasetWithAcl = dataset;\n\n    return respond(dataset);\n  }\n\n  static async init(resourceInfo, fetch) {\n    const datasetWithAcl = await getResourceInfoWithAcl(\n      getSourceUrl(resourceInfo),\n      { fetch }\n    );\n    if (\n      !hasAcl(datasetWithAcl) ||\n      (!hasResourceAcl(datasetWithAcl) && !hasFallbackAcl(datasetWithAcl))\n    ) {\n      throw new Error(noAclError);\n    }\n    return new WacAccessControlStrategy(datasetWithAcl, fetch);\n  }\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// eslint-disable-next-line camelcase\nimport { hasAccessibleAcl, acp_v1 as acp } from \"@inrupt/solid-client\";\nimport WacAccessControlStrategy from \"./wac\";\nimport AcpAccessControlStrategy from \"./acp\";\n\nexport const noAccessPolicyError =\n  \"No available access policy for this resource\";\n\nexport function hasAccess(resourceInfo) {\n  return hasAccessibleAcl(resourceInfo) || acp.hasLinkedAcr(resourceInfo);\n}\n\nexport function isAcp(accessControlType) {\n  return accessControlType === \"acp\";\n}\n\nexport function isWac(accessControlType) {\n  return accessControlType === \"wac\";\n}\n\nexport async function getAccessControl(\n  resourceInfo,\n  policiesContainerUrl,\n  fetch,\n  isLegacy,\n  accessControlType\n) {\n  if (isWac(accessControlType)) {\n    return WacAccessControlStrategy.init(resourceInfo, fetch);\n  }\n  if (isAcp(accessControlType)) {\n    return AcpAccessControlStrategy.init(\n      resourceInfo,\n      policiesContainerUrl,\n      fetch,\n      isLegacy ?? false\n    );\n  }\n  throw new Error(noAccessPolicyError);\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React, { createContext, useState } from \"react\";\nimport T from \"prop-types\";\n\nexport const DETAILS_CONTEXT_ACTIONS = {\n  DETAILS: \"details\",\n};\n\nexport const defaultDetailsMenuContext = {\n  menuOpen: false,\n  setMenuOpen: (open) => open,\n};\nconst DetailsMenuContext = createContext(defaultDetailsMenuContext);\n\nfunction DetailsMenuProvider({ children }) {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return (\n    <DetailsMenuContext.Provider\n      value={{\n        menuOpen,\n        setMenuOpen,\n      }}\n    >\n      {children}\n    </DetailsMenuContext.Provider>\n  );\n}\n\nDetailsMenuProvider.propTypes = {\n  children: T.node,\n};\n\nDetailsMenuProvider.defaultProps = {\n  children: null,\n};\n\nexport { DetailsMenuProvider };\nexport default DetailsMenuContext;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport {\n  hasAccessibleAcl,\n  acp_v3 as acp3,\n  getSourceUrl,\n} from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport useSWR from \"swr\";\n\nexport const ACP = \"acp\";\nexport const WAC = \"wac\";\n\nasync function getAccessControlType(resourceInfo, fetch) {\n  const resourceUrl = getSourceUrl(resourceInfo);\n  const isAcpControlledResource = await acp3.isAcpControlled(resourceUrl, {\n    fetch,\n  });\n  const isWacControlledResource =\n    !isAcpControlledResource && hasAccessibleAcl(resourceInfo);\n  if (isAcpControlledResource) {\n    return ACP;\n  }\n  if (isWacControlledResource) {\n    return WAC;\n  }\n  return null;\n}\n\nexport default function useAccessControlType(resourceInfo) {\n  const { fetch } = useSession();\n  return useSWR(\n    [\"useAccessControlType\", resourceInfo],\n    async () => {\n      if (!resourceInfo) return null;\n      return getAccessControlType(resourceInfo, fetch);\n    },\n    { revalidateOnFocus: false }\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport { getSourceUrl } from \"@inrupt/solid-client\";\nimport { useEffect, useState } from \"react\";\nimport { getAccessControl } from \"../../accessControl\";\nimport usePoliciesContainerUrl from \"../usePoliciesContainerUrl\";\nimport useIsLegacyAcp from \"../useIsLegacyAcp\";\nimport useAccessControlType from \"../useAccessControlType\";\n\nexport default function useAccessControl(resourceInfo) {\n  const { session } = useSession();\n  const { fetch } = session;\n  const [data, setData] = useState();\n  const [error, setError] = useState();\n  const resourceUrl = resourceInfo && getSourceUrl(resourceInfo);\n  const policiesContainerUrl = usePoliciesContainerUrl(resourceUrl);\n  const { data: isLegacy } = useIsLegacyAcp(resourceInfo);\n\n  const { data: accessControlType, isValidating } = useAccessControlType(\n    resourceInfo,\n    fetch\n  );\n  useEffect(() => {\n    (async () => {\n      if (\n        isValidating ||\n        !resourceInfo ||\n        !policiesContainerUrl ||\n        accessControlType === undefined\n      )\n        return;\n      try {\n        const accessControl = await getAccessControl(\n          resourceInfo,\n          policiesContainerUrl,\n          fetch,\n          isLegacy,\n          accessControlType\n        );\n        setData({\n          accessControl,\n          accessControlType,\n        });\n        setError(null);\n      } catch (error) {\n        setError(error);\n        setData(null);\n      }\n    })();\n  }, [\n    accessControlType,\n    isLegacy,\n    isValidating,\n    resourceInfo,\n    policiesContainerUrl,\n    fetch,\n  ]);\n\n  return { data, error, isValidating: !data && !error };\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport useSWR from \"swr\";\nimport { acp_v3 as acp } from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\n\nimport { hasAcpConfiguration } from \"../../accessControl/acp/helpers/index\";\n\nexport default function useIsLegacyAcp(resourceInfo) {\n  const { fetch } = useSession();\n  return useSWR(\n    [resourceInfo ? acp.getLinkedAcrUrl(resourceInfo) : null, fetch],\n    // A legacy ACP server is one which does _not_ implement the ACP configuration discovery.\n    // Since we mock SWR, the following line never runs.\n    /* istanbul ignore next */\n    async (acrUlr) => !(await hasAcpConfiguration(acrUlr, fetch))\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { acp_v3 as acp } from \"@inrupt/solid-client\";\nimport { useEffect, useState } from \"react\";\nimport usePodRootUri from \"../usePodRootUri\";\nimport { getPoliciesContainerUrl } from \"../../models/policy\";\nimport useIsLegacyAcp from \"../useIsLegacyAcp\";\nimport useResourceInfo from \"../useResourceInfo\";\n\nexport default function usePoliciesContainerUrl(resourceUrl) {\n  const { data: resourceInfo } = useResourceInfo(resourceUrl);\n  const [policiesContainerUrl, setPoliciesContainerUrl] = useState();\n  const rootUrl = usePodRootUri(resourceUrl);\n  const { data: isLegacy } = useIsLegacyAcp(resourceInfo);\n  useEffect(() => {\n    if (!resourceUrl) return;\n    if (isLegacy === undefined) {\n      setPoliciesContainerUrl(null);\n      return;\n    }\n    if (isLegacy) {\n      setPoliciesContainerUrl(\n        rootUrl ? getPoliciesContainerUrl(rootUrl) : null\n      );\n    } else {\n      setPoliciesContainerUrl(\n        resourceInfo !== undefined && resourceInfo !== null\n          ? acp.getLinkedAcrUrl(resourceInfo) ?? null\n          : null\n      );\n    }\n  }, [isLegacy, resourceInfo, resourceUrl, rootUrl]);\n  return policiesContainerUrl;\n}\n"],"names":["ResourceIcon","iri","bem","icon","isContainerIri","className","clsx","renderResourceType","useStyles","makeStyles","theme","createStyles","spinnerContainer","display","flexDirection","flexWrap","justifyContent","icons","iconColor","palette","text","secondary","styles","handleAction","resourceIri","containerIri","router","action","DETAILS_CONTEXT_ACTIONS","event","type","key","element","target","tagName","resourceContextRedirect","ContainerTableRow","resource","container","preselected","classes","useBem","name","useRouter","currentUri","useContext","PodLocationContext","isActive","query","useState","shouldRedirect","setShouldRedirect","useEffect","isContainer","handlePreselection","tabIndex","onClick","onKeyDown","defaultProps","WacAccessControlStrategy","datasetWithAcl","fetch","this","deleteFile","getSourceUrl","hasResourceAcl","accessModeList","getAgentAccessAll","normalizePermissions","hasAccessibleAcl","fallbackAcl","getFallbackAcl","getAgentDefaultAccessAll","Error","permissions","Object","keys","filter","isUrl","map","webId","acl","alias","displayPermissions","access","createResponder","respond","error","aclDataset","getResourceAcl","hasFallbackAcl","createAclFromFallbackAcl","datasetUri","updatedAcl","chain","setAgentResourceAccess","setAgentDefaultAccess","saveAclFor","getResourceInfoWithAcl","dataset","resourceInfo","internal_acl","noAccessPolicyError","isAcp","accessControlType","isWac","getAccessControl","policiesContainerUrl","isLegacy","init","AcpAccessControlStrategy","DETAILS","defaultDetailsMenuContext","menuOpen","setMenuOpen","open","DetailsMenuContext","createContext","DetailsMenuProvider","children","Provider","value","getAccessControlType","resourceUrl","acp3","isAcpControlledResource","isWacControlledResource","useAccessControl","useSession","session","data","setData","setError","usePoliciesContainerUrl","useIsLegacyAcp","useSWR","revalidateOnFocus","useAccessControlType","isValidating","undefined","accessControl","acp","acrUlr","hasAcpConfiguration","useResourceInfo","setPoliciesContainerUrl","rootUrl","usePodRootUri","getPoliciesContainerUrl"],"sourceRoot":""}