{"version":3,"file":"static/chunks/741-8d3cb69b8bb492f4.js","mappings":"6JAqBA,MAAMA,EAAgB,kCAEhBC,EAAM,CACRC,cAAeF,EAAcG,OAAO,iBACpCC,sBAAuBJ,EAAcG,OAAO,yBAC5CE,mBAAoBL,EAAcG,OAAO,sBACzCG,aAAcN,EAAcG,OAAO,gBACnCI,QAASP,EAAcG,OAAO,WAC9BK,OAAQR,EAAcG,OAAO,UAC7BM,YAAaT,EAAcG,OAAO,eAClCO,OAAQV,EAAcG,OAAO,UAC7BQ,cAAeX,EAAcG,OAAO,iBACpCS,MAAOZ,EAAcG,OAAO,SAC5BU,MAAOb,EAAcG,OAAO,SAC5BW,MAAOd,EAAcG,OAAO,SAC5BY,MAAOf,EAAcG,OAAO,SAC5Ba,MAAOhB,EAAcG,OAAO,SAC5Bc,OAAQjB,EAAcG,OAAO,UAC7Be,KAAMlB,EAAcG,OAAO,QAC3BgB,oBAAqBnB,EAAcG,OAAO,uBAC1CiB,OAAQpB,EAAcG,OAAO,UAC7BkB,GAAIrB,EAAcG,OAAO,OAGvBmB,EAAgB,iCAEhBC,EAAM,CACRC,OAAQF,EAAcnB,OAAO,UAC7BsB,QAASH,EAAcnB,OAAO,WAC9BuB,KAAMJ,EAAcnB,OAAO,QAC3BwB,MAAOL,EAAcnB,OAAO,U,gDCVhC,SAASyB,EAAWC,GAAO,WACvB,IAAIC,GAAQ,QAAQD,GAAQA,GAAO,QAAYA,GAC/C,SAASE,EAASC,GACd,MAAO,CAACC,EAAUC,KACdJ,EAAQE,EAAMF,EAAOG,EAAUC,GACxBC,GAGf,SAASC,EAAUC,GACf,MAAO,CAACJ,EAAUC,KACdJ,EAAQO,EAAOP,EAAOG,EAAUC,GACzBC,GAGf,SAASG,EAAWC,GAChB,MAAO,CAACN,EAAUC,KACdJ,EAAQS,EAAQT,EAAOG,EAAUC,GAC1BC,GAGf,MAAMA,EAAU,CACZK,MAAO,IAAMV,EACbW,OAAQV,EAASW,EAAA,IACjBC,OAAQZ,EAASW,EAAA,IACjBE,WAAYb,EAASW,EAAA,IACrBG,YAAad,EAASW,EAAA,IACtBI,QAASf,EAASW,EAAA,IAClBK,QAAShB,EAASW,EAAA,IAClBM,WAAYjB,EAASW,EAAA,IACrBO,WAAYlB,EAASW,EAAA,IACrBQ,kBAAmBnB,EAASW,EAAA,IAC5BS,iBAAkB,CAAClB,EAAUC,KACzBJ,GAAQ,EAAAY,EAAA,IAAoBZ,EAAOG,EAAUC,EAAO,MAC7CC,GAEXiB,oBAAqB,CAACnB,EAAUC,EAAOmB,KACnCvB,GAAQ,EAAAY,EAAA,IAAoBZ,EAAOG,EAAUC,EAAOmB,GAC7ClB,GAEXmB,aAAcvB,EAASW,EAAA,IACvBa,WAAYxB,EAASW,EAAA,IACrBc,QAASzB,EAASW,EAAA,IAClBe,OAAQrB,EAAUsB,EAAA,GAClBC,OAAQvB,EAAUsB,EAAA,IAClBE,WAAYxB,EAAUsB,EAAA,IACtBG,YAAazB,EAAUsB,EAAA,IACvBI,QAAS1B,EAAUsB,EAAA,IACnBK,QAAS3B,EAAUsB,EAAA,IACnBM,WAAY5B,EAAUsB,EAAA,IACtBO,WAAY7B,EAAUsB,EAAA,IACtBQ,kBAAmB9B,EAAUsB,EAAA,IAC7BS,iBAAkB,CAAClC,EAAUC,KACzBJ,GAAQ,EAAA4B,EAAA,IAAoB5B,EAAOG,EAAUC,EAAO,MAC7CC,GAEXiC,oBAAqB,CAACnC,EAAUC,EAAOmB,KACnCvB,GAAQ,EAAA4B,EAAA,IAAoB5B,EAAOG,EAAUC,EAAOmB,GAC7ClB,GAEXkC,aAAcjC,EAAUsB,EAAA,IACxBY,WAAYlC,EAAUsB,EAAA,IACtBa,QAASnC,EAAUsB,EAAA,IACnBc,UAAYvC,IACRH,GAAQ,EAAA2C,EAAA,IAAU3C,EAAOG,GAClBE,GAEXuC,UAAWpC,EAAWmC,EAAA,IACtBE,UAAWrC,EAAWmC,EAAA,IACtBG,cAAetC,EAAWmC,EAAA,IAC1BI,eAAgBvC,EAAWmC,EAAA,IAC3BK,WAAYxC,EAAWmC,EAAA,IACvBM,WAAYzC,EAAWmC,EAAA,IACvBO,cAAe1C,EAAWmC,EAAA,IAC1BQ,cAAe3C,EAAWmC,EAAA,IAC1BS,qBAAsB5C,EAAWmC,EAAA,IACjCU,oBAAqB,CAAClD,EAAUC,IAAUN,GAAW,EAAA6C,EAAA,IAAuB3C,EAAOG,EAAUC,EAAO,OACpGkD,uBAAwB,CAACnD,EAAUC,EAAOmB,IAAWzB,GAAW,EAAA6C,EAAA,IAAuB3C,EAAOG,EAAUC,EAAOmB,IAC/GgC,gBAAiB/C,EAAWmC,EAAA,IAC5Ba,cAAehD,EAAWmC,EAAA,KAE9B,OAAOtC,E,8DCvFX,MAAMoD,EAAyB,uBAEzBC,EAA6B,0BAE7BC,EAAgC,6BAEhCC,EAAoC,gCAE1C,SAASC,EAA2BC,EAAUC,GAC1C,MAAMC,GAAM,QAAgBF,GAE5B,OADe,QAAaE,GACd3F,OAAO,KAAKA,OAAO0F,GCVrC,SAASE,EAA6BH,EAAUC,GAC5C,MAAMC,GAAM,QAAgBF,GACtBI,EAA0BL,EAA2BC,EAAUC,GAC/DI,GAAqB,QAASH,EAAKE,GACzC,OAA2B,OAAvBC,GAC8B,qBAAvBA,GACA,QAAY,CAAEC,IAAKF,IAEvBC,E,eCVX,SAASE,EAA8BP,EAAU9D,GAC7C,OAAOsE,OAAOC,QAAO,QAAuBT,GAAW,CACnDU,aAAcF,OAAOC,OAAOD,OAAOC,OAAO,GAAIT,EAASU,cAAe,CAAER,KAAK,QAASF,EAASU,aAAaR,IAAKhE,O,eCVzH,SAASyE,EAA8BX,GACnC,MAAME,GAAM,QAAgBF,GACtBY,GAAS,QAAaV,GAC5B,OAAO,QAASA,EAAKU,GCYzB,SAASC,EAAiDZ,GACtD,OAAIA,EAAKa,SAAS,UACPzG,EAAIkB,oBAERlB,EAAIU,cAGf,SAASgG,EAAuCf,EAAUC,GACtD,MAAMe,EAA+BjB,EAA2BC,EAAUC,GACpEC,GAAM,QAAgBF,GAE5B,IAAIiB,EAA6BN,EAA8BX,GAC5B,OAA/BiB,GACsC,qBAA/BA,IACPA,GAA6B,QAAY,CAAEX,KAAK,QAAaJ,MAIjE,OAD4B,EAAAgB,EAAA,IAAUD,EAA4BJ,EAAiDZ,IAC1Fa,SAASE,GAO3BhB,GANHiB,EAA6BjF,EAAWiF,GACnCpE,OAAOgE,EAAiDZ,GAAOe,GAC/DpE,QACE2D,EAA8BP,EAAUiB,ICxBvD,SAASE,EAAuBC,GAC5B,MAAMC,EAAWV,EAA8BS,GAC/C,OAAiB,OAAbC,EACO,IAEJ,EAAAH,EAAA,IAAUG,EAAUhH,EAAIU,eClBnC,SAASuG,EAActB,EAAUuB,EAAmBC,GAChD,MAAMtB,GAAM,QAAgBF,GAC5B,OAAOyB,MAAMC,KAAK,IAAIC,IAAIJ,EACrBK,KAAKC,IACN,MAAMxB,GAAqB,QAASH,EAAK2B,GAEzC,OAA2B,OAAvBxB,GACO,EAAAa,EAAA,IAAUb,EAAoBmB,GAGlC,MAENM,QAAO,CAACC,EAAeC,IAAiBD,EAAcxH,OAAOyH,IAAe,MCCrF,SAASC,EAA6Bb,GAClC,MAAMC,EAAWV,EAA8BS,GAC/C,OAAiB,OAAbC,EACO,IAEJ,EAAAH,EAAA,IAAUG,EAAUhH,EAAIkB,qB,+CCTnC,SAAS2G,EAAUhG,GACf,OAAO,EAAAgF,EAAA,IAAUhF,EAAO,WAAU4E,SAAS,cAuQ/C,SAASqB,EAAmBf,EAAiBnB,GACzC,MAAMC,GAAM,QAAgBkB,GACtBR,GAAS,QAAaV,GACtBI,EAAM,IAAI8B,IAAIxB,GACpBN,EAAI+B,KAAO,IAAIpC,IACf,MAAMqC,GAAa,QAASpC,EAAKI,EAAIiC,MACrC,OAAmB,OAAfD,GAAwBJ,EAAUI,GAG/BA,EAFI,KA2If,SAASE,EAAYC,GACjB,OAAO,EAAAvB,EAAA,IAAUuB,EAAS,YAAWC,QAAQ1H,GAAUA,IAAU,kBAC7DA,IAAU,yBACVA,IAAU,oBA2ElB,SAAS2H,EAAUF,GACf,OAAQ,EAAAvB,EAAA,IAAUuB,EAAS,YAAWC,QAAQ1H,GAAUA,IAAU,mBAC7D4H,OAAS,EAalB,SAASC,EAAUJ,GAIf,GAAyB,kBAAdK,WAAkD,mBAAjBA,UAAU,GAClD,MAAM,IAAIC,MAAM,qHAEpB,OAAO,EAAAjG,EAAA,IAAO2F,EAAS,WAAW,kBA2BtC,SAASO,EAAiBP,GACtB,OAAQ,EAAAvB,EAAA,IAAUuB,EAAS,YAAWC,QAAQ1H,GAAUA,IAAU,0BAAwB4H,OAAS,EAavG,SAASK,EAAiBR,GAItB,GAAyB,kBAAdK,WAAkD,mBAAjBA,UAAU,GAClD,MAAM,IAAIC,MAAM,mIAEpB,OAAO,EAAAjG,EAAA,IAAO2F,EAAS,WAAW,yBA2BtC,SAASS,EAAWT,GAChB,OAAQ,EAAAvB,EAAA,IAAUuB,EAAS,YAAWC,QAAQ1H,GAAUA,IAAU,oBAC7D4H,OAAS,EAalB,SAASO,EAAWV,GAIhB,GAAyB,kBAAdK,WAAkD,mBAAjBA,UAAU,GAClD,MAAM,IAAIC,MAAM,uHAEpB,OAAO,EAAAjG,EAAA,IAAO2F,EAAS,WAAW,mBA4BtC,SAASW,EAAaX,GAClB,OAAO,EAAAvB,EAAA,IAAUuB,EAAS,aAAYC,QAAQrH,GAAWA,IAAW,wBAmExE,SAASgI,EAAaZ,GAClB,OAAQ,EAAAvB,EAAA,IAAUuB,EAAS,aAAYC,QAAQrH,GAAWA,IAAW,wBAAwBuH,OAAS,EAa1G,SAASU,EAAab,GAClB,OAAO,EAAA3F,EAAA,IAAO2F,EAAS,YAAY,uB,cCxtBvC,SAASc,EAASC,EAAQhC,GACtB,MAAMiC,GAAQ,EAAAvC,EAAA,IAAUsC,EAAQhC,GAChC,MAAO,CACHkC,KAAMD,EAAM3C,SAASnF,EAAIG,MACzB6H,OAAQF,EAAM3C,SAASnF,EAAIC,QAC3BgI,MAAOH,EAAM3C,SAASnF,EAAII,OAC1B8H,aAAa,EACbC,cAAc,GCDtB,MAAMC,EAAoB,CACtBL,MAAM,EACNC,QAAQ,EACRC,OAAO,EACPC,aAAa,EACbC,cAAc,GAEZE,EAAa,CAACC,EAASC,EAAWC,KAAW,EAAAjD,EAAA,IAAU+C,EAASC,GAAWpD,UAAS,QAAMqD,ICGhG,MAAMC,EAAiB,CACnBC,0BAAyB,KACzBC,eAAc,KACdC,0BAAyB,KACzBC,kCAAiC,KACjCC,uBAAsB,KACtBC,kCAAiC,KACjCC,uBAAsB,KACtBC,iBAAgB,KAChBC,WAAU,KACVC,gBAAe,KACfC,YDYJ,SAAqB3D,GACjB,MAAMlB,GAAM,QAAgBkB,GACtBrG,EAAgBoF,EAA6BiB,EAAiB,wBAC9DC,EAAWV,EAA8BS,GAC/C,GAAiB,OAAbC,IACC2C,EAAW3C,EAAUhH,EAAIU,cAAeA,GACzC,OAAOgJ,EAEX,MAAMiB,EAAqB,IAAG,QAAa9E,qBACrC+E,GAAW,QAAS/E,EAAK8E,GAC/B,GAAiB,OAAbC,IAAsBjB,EAAWjJ,EAAeV,EAAIe,MAAO6J,GAC3D,OAAOlB,EAEX,MAAMmB,EAAsB,IAAG,QAAahF,sBACtCiF,GAAY,QAASjF,EAAKgF,GAChC,OAAkB,OAAdC,GAAuBnB,EAAWiB,EAAU5K,EAAIc,MAAOgK,GAGpD5B,EAAS0B,EAAU5K,EAAIa,OAFnB6I,GC3BXqB,YCiBJ,SAAqBhE,EAAiBtG,GAClC,IAAIuK,EAAIC,EACR,IAAIpF,GAAM,QAAgBkB,GAC1B,MAAM4D,EAAqB,IAAG,QAAa9E,qBACrCgF,EAAsB,IAAG,QAAahF,sBAC5C,IAAInF,EAAgBoF,EAA6BiB,EAAiB,wBAC9DC,EAAqE,QAAzDgE,EAAK1E,EAA8BS,UAAqC,IAAPiE,EAAgBA,EAAKrJ,EAAW,CAAEsE,KAAK,QAAaJ,KAChInD,OAAO1C,EAAIU,cAAeA,GAC1B6B,SACA,EAAAsE,EAAA,IAAUG,EAAUhH,EAAIU,eAAe+F,UAAS,QAAM/F,MAEvDsG,GAAW,EAAAvE,EAAA,IAAOuE,EAAUhH,EAAIU,cAAeA,IAEnD,IAAIkK,GAAW,QAAS/E,EAAK8E,GACZ,OAAbC,IAEAA,EAAWjJ,EAAW,CAAEsE,IAAK0E,IACxBjI,OAAO,UAAU1C,EAAIO,QACrBmC,OAAO1C,EAAIc,MAAO+J,GAClBtI,QACL7B,GAAgB,EAAA+B,EAAA,IAAO/B,EAAeV,EAAIe,MAAO6J,IAErD,MAAME,EAA0D,QAA7CG,GAAK,QAASpF,EAAKgF,UAAyC,IAAPI,EAAgBA,EAAKtJ,EAAW,CAAEsE,IAAK4E,IAC1GnI,OAAO,UAAU1C,EAAIM,SACrBoC,OAAO1C,EAAIoB,GdvCI,kDcwCfmB,QACC2I,EAAehC,EAAS0B,EAAU5K,EAAIa,OAK5C,OAHA+J,ECxEJ,SAAkBzB,EAAQC,EAAOjC,GAC7B,IAAIgE,GAAY,EAAA3G,EAAA,IAAU2E,EAAQhC,GAUlC,OATIiC,EAAMC,MAAQD,EAAMI,eACpB2B,GAAY,EAAA1I,EAAA,IAAO0I,EAAWhE,EAAM7F,EAAIG,OAExC2H,EAAME,SACN6B,GAAY,EAAA1I,EAAA,IAAO0I,EAAWhE,EAAM7F,EAAIC,UAExC6H,EAAMG,OAASH,EAAMK,gBACrB0B,GAAY,EAAA1I,EAAA,IAAO0I,EAAWhE,EAAM7F,EAAII,QAErCyJ,ED6DIC,CAASR,EAAUzE,OAAOC,OAAOD,OAAOC,OAAO,GAAI8E,GAAezK,GAAST,EAAIa,OAE1FgF,EAAM,CAACmB,EAAUtG,EAAekK,EAAUE,GAAWrD,OAAO,KAAU5B,GEvE1E,SAAgBF,EAAUE,GACtB,OAAOM,OAAOC,QAAO,QAAuBT,GAAW,CACnDU,aAAc,CACVR,IAAAA,KFqEDwF,CAAOtE,EAAiBlB,KD9C7ByF,EAAqB,CACvBC,cAAa,KACbC,gBIdJ,SAAyBzE,EAAiB0E,GACtC,MAAMC,EAAgDhF,EAAuCK,EAAiBxB,GAE9G,OAAOW,EAA8BwF,EAA+C/J,EADlDmE,EAA6B4F,EAA+CnG,IACY/C,OAAOxC,EAAIS,OAAQgL,GAAWlJ,UJYxJoJ,sBKfJ,SAA+B5E,EAAiB0E,GAC5C,MAAMC,EAAgDhF,EAAuCK,EAAiBtB,GAE9G,OAAOS,EAA8BwF,EAA+C/J,EADlDmE,EAA6B4F,EAA+CjG,IACYjD,OAAOxC,EAAIS,OAAQgL,GAAWlJ,ULaxJqJ,mBMhBJ,SAA4B7E,EAAiB0E,GACzC,MAAMI,EAAsDnF,EAAuCK,EAAiBvB,GAEpH,OAAOU,EAA8B2F,EAAqDlK,EADlDmE,EAA6B+F,EAAqDrG,IAErHhD,OAAOxC,EAAIe,MAAO0K,GAClBlJ,UNYLuJ,aOjBJ,SAAsB/E,EAAiB0E,GACnC,MAAMC,EAAgDhF,EAAuCK,EAAiBzB,GAE9G,OAAOY,EAA8BwF,EAA+C/J,EADlDmE,EAA6B4F,EAA+CpG,IACY9C,OAAOxC,EAAIe,MAAO0K,GAAWlJ,UPevJwJ,mBQtBJ,SAA4BhF,GACxB,OAAOE,EAAcF,EAAiBD,EAAuBC,GAAkB/G,EAAIS,SRsBnFuL,yBStBJ,SAAkCjF,GAC9B,OAAOE,EAAcF,EAAiBa,EAA6Bb,GAAkB/G,EAAIS,STsBzFwL,sBUxBJ,SAA+BlF,GAC3B,OAAOE,EAAcF,EAAiBa,EAA6Bb,GAAkB/G,EAAIe,QVwBzFmL,gBWzBJ,SAAyBnF,GACrB,OAAOE,EAAcF,EAAiBD,EAAuBC,GAAkB/G,EAAIe,QXyBnFoL,aAAY,KACZC,mBYxBJ,SAA4BrF,EAAiB0E,GACzC,MAAMY,EAA4BvG,EAA6BiB,EAAiBxB,GAChF,OAAOW,EAA8Ba,GAAiB,EAAAvC,EAAA,IAAU6H,EAA2BrM,EAAIS,OAAQgL,KZuBvGa,sBAAqB,KACrBC,yBa1BJ,SAAkCxF,EAAiB0E,GAC/C,MAAMY,EAA4BvG,EAA6BiB,EAAiBtB,GAChF,OAAOS,EAA8Ba,GAAiB,EAAAvC,EAAA,IAAU6H,EAA2BrM,EAAIS,OAAQgL,KbyBvGe,4BAA2B,KAC3BC,sBc5BJ,SAA+B1F,EAAiB0E,GAC5C,MAAMY,EAA4BvG,EAA6BiB,EAAiBvB,GAChF,OAAOU,EAA8Ba,GAAiB,EAAAvC,EAAA,IAAU6H,EAA2BrM,EAAIe,MAAO0K,Kd2BtGiB,yBAAwB,KACxBC,gBe9BJ,SAAyB5F,EAAiB0E,GACtC,MAAMY,EAA4BvG,EAA6BiB,EAAiBzB,GAChF,OAAOY,EAA8Ba,GAAiB,EAAAvC,EAAA,IAAU6H,EAA2BrM,EAAIe,MAAO0K,Kf6BtGmB,mBAAkB,MAEhBC,EAAoB,CACtBC,aAAY,KACZC,cAAe,KACfC,aAAc,KACdC,UAAS,KACTC,aAAY,IACZC,iBAAgB,KAChBC,aAAY,KACZC,cAAe,KACfC,aAAc,KACdC,UAAS,KACTC,wBAAuB,KACvBC,qBAAoB,KACpBC,wBAAuB,KACvBC,kBAAiB,KACjBC,qBAAoB,KACpBC,wBAAuB,KACvBC,qBAAoB,KACpBC,qBAAoB,KACpBC,kBAAiB,MAEfC,GAAqB,CACvBC,SH4YJ,SAAkB9F,EAASzH,GACvB,OAAO,EAAA8B,EAAA,IAAO2F,EAAS,WAAWzH,IG5YlCwN,cHgJJ,SAAuBlI,GACnB,MAAMmI,GAAY,IAAAC,GAAqBpI,GACvC,IAAIqI,GAAe,QAAY,CAAErI,IAAKmI,IAEtC,OADAE,GAAe,EAAA7K,EAAA,GAAO6K,EAAc,UAAU,cACvCA,GGnJPnG,YAAW,EACXoG,WHmLJ,SAAoBC,EAAiBvI,GACjC,MAAMgC,GAAa,QAASuG,EAAiBvI,GAC7C,OAAmB,OAAfgC,GAAwBJ,EAAUI,GAG/BA,EAFI,MGrLXwG,cH4NJ,SAAuBD,GAEnB,OADe,QAAYA,GACbnG,OAAOR,IG7NrB6G,YHuZJ,SAAqBtG,EAASzH,GAC1B,OAAO,EAAA6D,EAAA,IAAU4D,EAAS,WAAWzH,IGvZrCgO,cHyPJ,SAAuBH,EAAiBpG,GACpC,OAAO,QAAYoG,EAAiBpG,IGzPpCwG,kBHkqBJ,SAA2BxG,GACvB,IAAIyG,EAAW,gBAAe,QAAMzG,SAChC0G,EAAoB,GACpBxG,EAAUF,KACV0G,GAAqB,gBAErBnG,EAAiBP,KACjB0G,GAAqB,gCAErBjG,EAAWT,KACX0G,GAAqB,oCAErB9F,EAAaZ,KACb0G,GAAqB,uCAEzB,MAAMC,EAAe5G,EAAYC,GAC7B2G,EAAaxG,OAAS,IACtBuG,GAAqB,gCACrBA,GAAqBC,EAAaC,KAAK,UAAY,MAEvD,MAAMC,EAAgBlG,EAAaX,GASnC,OARI6G,EAAc1G,OAAS,IACvBuG,GAAqB,sDACrBA,GAAqBG,EAAcD,KAAK,UAAY,MAExDH,GACIC,EAAkBvG,OAAS,EACrB,0BAA4BuG,EAC5B,YACHD,GG9rBPK,SHqWJ,SAAkB9G,EAASzH,GAGvB,MAAMwO,EAAW7G,EAAUF,GACrBgH,EAAkBzG,EAAiBP,GACnCiH,EAAYxG,EAAWT,GAC7B,IAAIkH,GAAS,EAAA7L,EAAA,IAAO2E,EAAS,WAAWzH,GAWxC,OATIwO,IACAG,EAAS9G,EAAU8G,IAEnBF,IACAE,EAAS1G,EAAiB0G,IAE1BD,IACAC,EAASxG,EAAWwG,IAEjBA,GGrXPC,WHkTJ,SAAoBf,EAAiBpG,GACjC,OAAO,QAASoG,EAAiBpG,IGlTjCoH,UHylBJ,SAAmBpH,EAASpH,GACxB,OAAO,EAAAyB,EAAA,IAAO2F,EAAS,YAAYpH,IGzlBnC+H,aAAY,EACZC,aAAY,EACZyG,aHqmBJ,SAAsBrH,EAASpH,GAC3B,OAAO,EAAAwD,EAAA,IAAU4D,EAAS,YAAYpH,IGrmBtCiI,aAAY,EACZyG,UH6jBJ,SAAmBtH,EAASpH,GAGxB,MAAM2O,EAAmB3G,EAAaZ,GACtC,IAAIkH,GAAS,EAAA7L,EAAA,IAAO2E,EAAS,YAAYpH,GAKzC,OAHI2O,IACAL,EAASrG,EAAaqG,IAEnBA,GGrkBPM,gBH6oBJ,SAAyBxH,GACrB,OAAO,EAAA5D,EAAA,IAAU4D,EAAS,YAAY,wBG7oBtCO,iBAAgB,EAChBE,WAAU,EACVP,UAAS,EACTM,iBAAgB,EAChBE,WAAU,EACVN,UAAS,EACTqH,oBHseJ,SAA6BzH,GACzB,OAAO,EAAA5D,EAAA,IAAU4D,EAAS,WAAW,0BGterC0H,cHshBJ,SAAuB1H,GACnB,OAAO,EAAA5D,EAAA,IAAU4D,EAAS,WAAW,oBGthBrC2H,aHobJ,SAAsB3H,GAClB,OAAO,EAAA5D,EAAA,IAAU4D,EAAS,WAAW,mBGpbrC4H,sBHwCJ,SAA+B7G,GAC3B,OAAO,EAAAtC,EAAA,IAAUsC,EAAQ,aGxCzB8G,mBHNJ,SAA4B9G,EAAQf,GAChC,OAAO,EAAA3F,EAAA,IAAO0G,EAAQ,WAAWf,IGMjC8H,sBHSJ,SAA+B/G,EAAQf,GACnC,OAAO,EAAA5D,EAAA,IAAU2E,EAAQ,WAAWf,IGTpC+H,mBHwBJ,SAA4BhH,EAAQf,GAChC,OAAO,EAAA3E,EAAA,IAAO0F,EAAQ,WAAWf,IGxBjCgI,sBH5BJ,SAA+BjH,GAC3B,OAAO,EAAAtC,EAAA,IAAUsC,EAAQ,aG4BzBkH,mBH1EJ,SAA4BlH,EAAQf,GAChC,OAAO,EAAA3F,EAAA,IAAO0G,EAAQ,WAAWf,IG0EjCkI,sBH3DJ,SAA+BnH,EAAQf,GACnC,OAAO,EAAA5D,EAAA,IAAU2E,EAAQ,WAAWf,IG2DpCmI,mBH5CJ,SAA4BpH,EAAQf,GAChC,OAAO,EAAA3E,EAAA,IAAO0F,EAAQ,WAAWf,IG4CjCoI,uBHkGJ,SAAgCrH,GAC5B,OAAO,EAAAtC,EAAA,IAAUsC,EAAQ,cGlGzBsH,oBHkDJ,SAA6BtH,EAAQf,GACjC,OAAO,EAAA3F,EAAA,IAAO0G,EAAQ,YAAYf,IGlDlCsI,uBHkEJ,SAAgCvH,EAAQf,GACpC,OAAO,EAAA5D,EAAA,IAAU2E,EAAQ,YAAYf,IGlErCuI,oBHkFJ,SAA6BxH,EAAQf,GACjC,OAAO,EAAA3E,EAAA,IAAO0F,EAAQ,YAAYf,IGlFlCwI,yBH4HJ,SAAkC7J,EAAiBnB,GAC/C,MAAMC,GAAM,QAAgBkB,GACtBd,EAAM,IAAI8B,KAAI,QAAalC,IACjCI,EAAI+B,KAAO,IAAIpC,IACf,IAAI0I,GAAe,QAAY,CAAErI,IAAKA,EAAIiC,OAE1C,OADAoG,GAAe,EAAA7K,EAAA,GAAO6K,EAAc,UAAU,cACvCA,GGjIPxG,mBAAkB,EAClB+I,sBHuMJ,SAA+B9J,GAC3B,MAAMlB,GAAM,QAAgBkB,GAE5B,OADe,QAAYlB,GACbwC,OAAOR,IGzMrBiJ,sBHoOJ,SAA+B/J,EAAiBqB,GAC5C,MAAMvC,GAAM,QAAgBkB,GAC5B,IAAIgK,EACJ,GAAuB,kBAAZ3I,EACP,IACI,IAAIL,IAAIK,GACR2I,EAAkB3I,EAEtB,MAAO4I,GAKH,MAAMC,EAAa,IAAIlJ,KAAI,QAAalC,IACxCoL,EAAWjJ,KAAO,IAAII,IACtB2I,EAAkBE,EAAW/I,UAIjC6I,GADK,QAAY3I,IACC,IAAAiG,GAAqBjG,IAGrB,QAAMA,GAG5B,MAAM8I,EAAkBpJ,EAAmBf,EAAiB,IAAIgB,IAAIgJ,GAAiB/I,KAAKmJ,UAAU,IACpG,GAAwB,OAApBD,EAEA,OAAOnK,EAEX,MAAMqK,GAAa,QAAYvL,EAAKqL,GAEpC,OADwB,QAAgBnK,EAAiBqK,IGlQzDC,mBHgSJ,SAA4BtK,EAAiBqB,GACzC,MAAMvC,GAAM,QAAgBkB,GACtBqK,GAAa,QAASvL,EAAKuC,GAEjC,OADwB,QAAgBrB,EAAiBqK,KGjSvDE,GAAkB,CACpBC,aAAY,IACZC,WAAU,KAMRC,GAAStL,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,GAAI2D,GAAiBuB,GAAqBuB,GAAoBoB,IAAqBqD,K,sBgBpJzJ,SAASI,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qC,uDCFT,SAASC,EAA6BC,EAAUC,EAAYC,GACzE,IAAKD,EAAWE,IAAIH,GAClB,MAAM,IAAIF,UAAU,gBAAkBI,EAAS,kCAGjD,OAAOD,EAAWnL,IAAIkL,G,sGCHT,SAASI,EAAsBJ,EAAUC,GAEtD,OCJa,SAAkCD,EAAUK,GACzD,OAAIA,EAAWvL,IACNuL,EAAWvL,IAAIwL,KAAKN,GAGtBK,EAAWnQ,MDDX,CAAwB8P,GADd,EAAAO,EAAA,GAA4BP,EAAUC,EAAY,U,qEEDtD,SAASO,EAAsBR,EAAUC,EAAY/P,GAGlE,OCLa,SAAkC8P,EAAUK,EAAYnQ,GACrE,GAAImQ,EAAW3O,IACb2O,EAAW3O,IAAI4O,KAAKN,EAAU9P,OACzB,CACL,IAAKmQ,EAAWI,SACd,MAAM,IAAIX,UAAU,4CAGtBO,EAAWnQ,MAAQA,GDJrB,CAAwB8P,GADP,EAAAO,EAAA,GAA4BP,EAAUC,EAAY,OACrB/P,GACvCA,I,sBELT,SAASwQ,EAAkBC,EAAQC,GACjC,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAMpK,OAAQ8F,IAAK,CACrC,IAAI+D,EAAaO,EAAMtE,GACvB+D,EAAWQ,WAAaR,EAAWQ,aAAc,EACjDR,EAAWS,cAAe,EACtB,UAAWT,IAAYA,EAAWI,UAAW,GACjDrM,OAAO2M,eAAeJ,EAAQN,EAAWW,IAAKX,IAInC,SAASY,EAAapB,EAAaqB,EAAYC,GAG5D,OAFID,GAAYR,EAAkBb,EAAYuB,UAAWF,GACrDC,GAAaT,EAAkBb,EAAasB,GACzCtB,E","sources":["webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/constants.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/thing/build.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/getDefaultAccessControlUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/getDefaultAccessControlThing.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/setAccessControlResourceThing.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/getAccessControlResourceThing.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/setDefaultAccessControlThingIfNotExist.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/accessControl/getAccessControlUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/getPolicyUrls.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/accessControl/getMemberAccessControlUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/matcher.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/getModes.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/util/getVcAccess.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/v4.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/util/setVcAccess.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/setModes.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/internal/setAcr.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/addAcrPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/addMemberAcrPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/addMemberPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/addPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/getAcrPolicyUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/getMemberAcrPolicyUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/getMemberPolicyUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/getPolicyUrlAll.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/removeAcrPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/removeMemberAcrPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/removeMemberPolicyUrl.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client/dist/acp/policy/removePolicyUrl.mjs","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classCallCheck.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classPrivateFieldGet.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classPrivateFieldSet.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","webpack://_N_E/./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/createClass.js"],"sourcesContent":["/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nconst ACP_NAMESPACE = \"http://www.w3.org/ns/solid/acp#\";\r\n/** @hidden */\r\nconst ACP = {\r\n    AccessControl: ACP_NAMESPACE.concat(\"AccessControl\"),\r\n    AccessControlResource: ACP_NAMESPACE.concat(\"AccessControlResource\"),\r\n    AuthenticatedAgent: ACP_NAMESPACE.concat(\"AuthenticatedAgent\"),\r\n    CreatorAgent: ACP_NAMESPACE.concat(\"CreatorAgent\"),\r\n    Matcher: ACP_NAMESPACE.concat(\"Matcher\"),\r\n    Policy: ACP_NAMESPACE.concat(\"Policy\"),\r\n    PublicAgent: ACP_NAMESPACE.concat(\"PublicAgent\"),\r\n    access: ACP_NAMESPACE.concat(\"access\"),\r\n    accessControl: ACP_NAMESPACE.concat(\"accessControl\"),\r\n    agent: ACP_NAMESPACE.concat(\"agent\"),\r\n    allOf: ACP_NAMESPACE.concat(\"allOf\"),\r\n    allow: ACP_NAMESPACE.concat(\"allow\"),\r\n    anyOf: ACP_NAMESPACE.concat(\"anyOf\"),\r\n    apply: ACP_NAMESPACE.concat(\"apply\"),\r\n    client: ACP_NAMESPACE.concat(\"client\"),\r\n    deny: ACP_NAMESPACE.concat(\"deny\"),\r\n    memberAccessControl: ACP_NAMESPACE.concat(\"memberAccessControl\"),\r\n    noneOf: ACP_NAMESPACE.concat(\"noneOf\"),\r\n    vc: ACP_NAMESPACE.concat(\"vc\"),\r\n};\r\n/** @hidden */\r\nconst ACL_NAMESPACE = \"http://www.w3.org/ns/auth/acl#\";\r\n/** @hidden */\r\nconst ACL = {\r\n    Append: ACL_NAMESPACE.concat(\"Append\"),\r\n    Control: ACL_NAMESPACE.concat(\"Control\"),\r\n    Read: ACL_NAMESPACE.concat(\"Read\"),\r\n    Write: ACL_NAMESPACE.concat(\"Write\"),\r\n};\r\n/** @hidden */\r\nconst VC_ACCESS_GRANT = \"http://www.w3.org/ns/solid/vc#SolidAccessGrant\";\n\nexport { ACL, ACL_NAMESPACE, ACP, ACP_NAMESPACE, VC_ACCESS_GRANT };\n","import { addIri, addBoolean, addDatetime, addDate, addTime, addDecimal, addInteger, addStringNoLocale, addStringWithLocale, addNamedNode, addLiteral, addTerm, addUrl } from './add.mjs';\nimport { removeAll, removeIri, removeBoolean, removeDatetime, removeDate, removeTime, removeDecimal, removeInteger, removeStringNoLocale, removeStringWithLocale, removeNamedNode, removeLiteral, removeUrl } from './remove.mjs';\nimport { setIri, setBoolean, setDatetime, setDate, setTime, setDecimal, setInteger, setStringNoLocale, setStringWithLocale, setNamedNode, setLiteral, setTerm, setUrl } from './set.mjs';\nimport { createThing, isThing } from './thing.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create or modify a [[Thing]], setting multiple properties in a single expresssion.\r\n *\r\n * For example, you can create a new Thing and initialise several properties as follows:\r\n *\r\n *     const me = buildThing()\r\n *       .addUrl(rdf.type, schema.Person)\r\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\r\n *       .build();\r\n *\r\n * Take note of the final call to `.build()` to obtain the actual Thing.\r\n *\r\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\r\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\r\n * @since 1.9.0\r\n */\r\nfunction buildThing(init = createThing()) {\r\n    let thing = isThing(init) ? init : createThing(init);\r\n    function getAdder(adder) {\r\n        return (property, value) => {\r\n            thing = adder(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getSetter(setter) {\r\n        return (property, value) => {\r\n            thing = setter(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getRemover(remover) {\r\n        return (property, value) => {\r\n            thing = remover(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    const builder = {\r\n        build: () => thing,\r\n        addUrl: getAdder(addUrl),\r\n        addIri: getAdder(addIri),\r\n        addBoolean: getAdder(addBoolean),\r\n        addDatetime: getAdder(addDatetime),\r\n        addDate: getAdder(addDate),\r\n        addTime: getAdder(addTime),\r\n        addDecimal: getAdder(addDecimal),\r\n        addInteger: getAdder(addInteger),\r\n        addStringNoLocale: getAdder(addStringNoLocale),\r\n        addStringEnglish: (property, value) => {\r\n            thing = addStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        addStringWithLocale: (property, value, locale) => {\r\n            thing = addStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        addNamedNode: getAdder(addNamedNode),\r\n        addLiteral: getAdder(addLiteral),\r\n        addTerm: getAdder(addTerm),\r\n        setUrl: getSetter(setUrl),\r\n        setIri: getSetter(setIri),\r\n        setBoolean: getSetter(setBoolean),\r\n        setDatetime: getSetter(setDatetime),\r\n        setDate: getSetter(setDate),\r\n        setTime: getSetter(setTime),\r\n        setDecimal: getSetter(setDecimal),\r\n        setInteger: getSetter(setInteger),\r\n        setStringNoLocale: getSetter(setStringNoLocale),\r\n        setStringEnglish: (property, value) => {\r\n            thing = setStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        setStringWithLocale: (property, value, locale) => {\r\n            thing = setStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        setNamedNode: getSetter(setNamedNode),\r\n        setLiteral: getSetter(setLiteral),\r\n        setTerm: getSetter(setTerm),\r\n        removeAll: (property) => {\r\n            thing = removeAll(thing, property);\r\n            return builder;\r\n        },\r\n        removeUrl: getRemover(removeUrl),\r\n        removeIri: getRemover(removeIri),\r\n        removeBoolean: getRemover(removeBoolean),\r\n        removeDatetime: getRemover(removeDatetime),\r\n        removeDate: getRemover(removeDate),\r\n        removeTime: getRemover(removeTime),\r\n        removeDecimal: getRemover(removeDecimal),\r\n        removeInteger: getRemover(removeInteger),\r\n        removeStringNoLocale: getRemover(removeStringNoLocale),\r\n        removeStringEnglish: (property, value) => buildThing(removeStringWithLocale(thing, property, value, \"en\")),\r\n        removeStringWithLocale: (property, value, locale) => buildThing(removeStringWithLocale(thing, property, value, locale)),\r\n        removeNamedNode: getRemover(removeNamedNode),\r\n        removeLiteral: getRemover(removeLiteral),\r\n    };\r\n    return builder;\r\n}\n\nexport { buildThing };\n","import { getSourceUrl } from '../../resource/resource.mjs';\nimport 'http-link-header';\nimport '@rdfjs/data-model';\nimport '../../rdf.internal.mjs';\nimport 'jsonld';\nimport 'cross-fetch';\nimport '../../rdfjs.mjs';\nimport '../v1.mjs';\nimport '../v2.mjs';\nimport '../v3.mjs';\nimport '../v4.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nconst DEFAULT_ACCESS_CONTROL = \"defaultAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_ACR_ACCESS_CONTROL = \"defaultAcrAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_MEMBER_ACCESS_CONTROL = \"defaultMemberAccessControl\";\r\n/** @hidden */\r\nconst DEFAULT_MEMBER_ACR_ACCESS_CONTROL = \"defaultMemberAcrAccessControl\";\r\n/** @hidden */\r\nfunction getDefaultAccessControlUrl(resource, name) {\r\n    const acr = internal_getAcr(resource);\r\n    const acrUrl = getSourceUrl(acr);\r\n    return acrUrl.concat(\"#\").concat(name);\r\n}\n\nexport { DEFAULT_ACCESS_CONTROL, DEFAULT_ACR_ACCESS_CONTROL, DEFAULT_MEMBER_ACCESS_CONTROL, DEFAULT_MEMBER_ACR_ACCESS_CONTROL, getDefaultAccessControlUrl };\n","import 'http-link-header';\nimport '@rdfjs/data-model';\nimport '../../rdf.internal.mjs';\nimport 'jsonld';\nimport { getThing, createThing } from '../../thing/thing.mjs';\nimport 'cross-fetch';\nimport '../../rdfjs.mjs';\nimport '../v1.mjs';\nimport '../v2.mjs';\nimport '../v3.mjs';\nimport '../v4.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\nimport { getDefaultAccessControlUrl } from './getDefaultAccessControlUrl.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getDefaultAccessControlThing(resource, name) {\r\n    const acr = internal_getAcr(resource);\r\n    const defaultAccessControlUrl = getDefaultAccessControlUrl(resource, name);\r\n    const accessControlThing = getThing(acr, defaultAccessControlUrl);\r\n    if (accessControlThing === null ||\r\n        typeof accessControlThing === \"undefined\") {\r\n        return createThing({ url: defaultAccessControlUrl });\r\n    }\r\n    return accessControlThing;\r\n}\n\nexport { getDefaultAccessControlThing };\n","import { internal_cloneResource } from '../../resource/resource.internal.mjs';\nimport '@rdfjs/data-model';\nimport '../../rdf.internal.mjs';\nimport 'jsonld';\nimport { setThing } from '../../thing/thing.mjs';\nimport 'cross-fetch';\nimport '../../rdfjs.mjs';\nimport '../v1.mjs';\nimport '../v2.mjs';\nimport '../v3.mjs';\nimport '../v4.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setAccessControlResourceThing(resource, thing) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: Object.assign(Object.assign({}, resource.internal_acp), { acr: setThing(resource.internal_acp.acr, thing) }),\r\n    });\r\n}\n\nexport { setAccessControlResourceThing };\n","import { getSourceUrl } from '../../resource/resource.mjs';\nimport { getThing } from '../../thing/thing.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getAccessControlResourceThing(resource) {\r\n    const acr = internal_getAcr(resource);\r\n    const acrUrl = getSourceUrl(acr);\r\n    return getThing(acr, acrUrl);\r\n}\n\nexport { getAccessControlResourceThing };\n","import { getSourceUrl } from '../../resource/resource.mjs';\nimport 'http-link-header';\nimport '@rdfjs/data-model';\nimport '../../rdf.internal.mjs';\nimport 'jsonld';\nimport { createThing } from '../../thing/thing.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\nimport 'cross-fetch';\nimport { buildThing } from '../../thing/build.mjs';\nimport '../../rdfjs.mjs';\nimport '../v1.mjs';\nimport '../v2.mjs';\nimport '../v3.mjs';\nimport '../v4.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\nimport { ACP } from '../constants.mjs';\nimport { getAccessControlResourceThing } from './getAccessControlResourceThing.mjs';\nimport { getDefaultAccessControlUrl } from './getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from './setAccessControlResourceThing.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction getAccessControlTypeFromDefaultAccessControlName(name) {\r\n    if (name.includes(\"Member\")) {\r\n        return ACP.memberAccessControl;\r\n    }\r\n    return ACP.accessControl;\r\n}\r\n/** @hidden */\r\nfunction setDefaultAccessControlThingIfNotExist(resource, name) {\r\n    const defaultAccessControlThingUrl = getDefaultAccessControlUrl(resource, name);\r\n    const acr = internal_getAcr(resource);\r\n    // Get the Access Control Resource Thing or create it\r\n    let accessControlResourceThing = getAccessControlResourceThing(resource);\r\n    if (accessControlResourceThing === null ||\r\n        typeof accessControlResourceThing === \"undefined\") {\r\n        accessControlResourceThing = createThing({ url: getSourceUrl(acr) });\r\n    }\r\n    // Get the Default Access Control Thing or create it and return\r\n    const accessControlUrlAll = getIriAll(accessControlResourceThing, getAccessControlTypeFromDefaultAccessControlName(name));\r\n    if (!accessControlUrlAll.includes(defaultAccessControlThingUrl)) {\r\n        accessControlResourceThing = buildThing(accessControlResourceThing)\r\n            .addUrl(getAccessControlTypeFromDefaultAccessControlName(name), defaultAccessControlThingUrl)\r\n            .build();\r\n        return setAccessControlResourceThing(resource, accessControlResourceThing);\r\n    }\r\n    // Return the original resource if the ACR and Default AC exist\r\n    return resource;\r\n}\n\nexport { setDefaultAccessControlThingIfNotExist };\n","import { ACP } from '../constants.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\nimport { getAccessControlResourceThing } from '../internal/getAccessControlResourceThing.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URL of all access controls linked to the given resource's ACR.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of access\r\n * controls applying to it.\r\n * @returns Access Control URL array\r\n * @since 1.6.0\r\n */\r\nfunction getAccessControlUrlAll(resourceWithAcr) {\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, ACP.accessControl);\r\n}\n\nexport { getAccessControlUrlAll };\n","import { getIriAll } from '../../thing/get.mjs';\nimport { getThing } from '../../thing/thing.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getPolicyUrls(resource, accessControlUrls, type) {\r\n    const acr = internal_getAcr(resource);\r\n    return Array.from(new Set(accessControlUrls\r\n        .map((accessControlUrl) => {\r\n        const accessControlThing = getThing(acr, accessControlUrl);\r\n        // istanbul ignore next\r\n        if (accessControlThing !== null) {\r\n            return getIriAll(accessControlThing, type);\r\n        }\r\n        // istanbul ignore next\r\n        return [];\r\n    })\r\n        .reduce((previousValue, currentValue) => previousValue.concat(currentValue), [])));\r\n}\n\nexport { getPolicyUrls };\n","import { ACP } from '../constants.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\nimport { getAccessControlResourceThing } from '../internal/getAccessControlResourceThing.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URL of all member access controls linked to the given resource's ACR.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of access\r\n * controls inherited by its children.\r\n * @returns Access Control URL array\r\n * @since 1.6.0\r\n */\r\nfunction getMemberAccessControlUrlAll(resourceWithAcr) {\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null) {\r\n        return [];\r\n    }\r\n    return getIriAll(acrThing, ACP.memberAccessControl);\r\n}\n\nexport { getMemberAccessControlUrlAll };\n","import { acp, rdf, solid } from '../constants.mjs';\nimport { isNamedNode } from '../datatypes.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { getSourceUrl } from '../resource/resource.mjs';\nimport { addIri } from '../thing/add.mjs';\nimport { getIriAll } from '../thing/get.mjs';\nimport { removeIri } from '../thing/remove.mjs';\nimport { setIri, setUrl } from '../thing/set.mjs';\nimport { createThing, getThing, getThingAll, removeThing, asUrl, setThing } from '../thing/thing.mjs';\nimport { internal_getAcr, internal_setAcr } from './control.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param thing the [[Thing]] to check to see if it's an ACP Matcher or not\r\n */\r\nfunction isMatcher(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acp.Matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n *\r\n * Also see [[addAnyOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAllOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that refines the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAllOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrites the Matcher refining the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is **not** present in **any** of the \"All Of\" Matchers,\r\n * they will not be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"All Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAllOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.allOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"All Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"All Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAllOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.allOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addNoneOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addAnyOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that extends the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeAnyOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the Matcher extending the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is present in **any** of the \"Any Of\" Matchers,\r\n * they will be granted access.\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"Any Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setAnyOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.anyOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"Any Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the \"Any Of\" [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getAnyOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.anyOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Add a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by the given Matcher, they will **not** be granted access.\r\n *\r\n * Also see [[addAllOfMatcherUrl]] and [[addAnyOfMatcherUrl]].\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to add to the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the new Matcher added.\r\n * @since Not released yet.\r\n */\r\nfunction addNoneOfMatcherUrl(policy, matcher) {\r\n    return addIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes a Matcher that restricts the scope of a given the [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * in any of the \"None Of\" Matchers, they will **not** be granted access.\r\n *\r\n * @param policy The [[Policy]] from which the Matcher should be removed.\r\n * @param matcher The Matcher to remove from the policy.\r\n * @returns A new [[Policy]] clone of the original one, with the Matcher removed.\r\n * @since Not released yet.\r\n */\r\nfunction removeNoneOfMatcherUrl(policy, matcher) {\r\n    return removeIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set the Matchers restricting the scope of a given [[Policy]]. If an agent\r\n * requesting access to a resource is matched by another Matcher, but **also**\r\n * by any of the \"None Of\" Matchers, they will not be granted access.\r\n *\r\n * @param policy The [[Policy]] to which the Matcher should be added.\r\n * @param matcher The Matcher to set for the Policy.\r\n * @returns A new [[Policy]] clone of the original one, with the \"None Of\" Matchers replaced.\r\n * @since Not released yet.\r\n */\r\nfunction setNoneOfMatcherUrl(policy, matcher) {\r\n    return setIri(policy, acp.noneOf, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the \"None Of\" [[Matcher]]s for the given [[Policy]]\r\n * @param policy The [[policy]] from which the Matchers should be read.\r\n * @returns A list of the forbidden [[Matcher]]s\r\n * @since Not released yet.\r\n */\r\nfunction getNoneOfMatcherUrlAll(policy) {\r\n    return getIriAll(policy, acp.noneOf);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[Matcher]].\r\n *\r\n * @param url URL that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createMatcher(url) {\r\n    const stringUrl = internal_toIriString(url);\r\n    let matcherThing = createThing({ url: stringUrl });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Initialise a new, empty [[ResourceMatcher]] for the given Resource.\r\n *\r\n * @param resourceWithAcr The Resource to which the new Matcher is to apply.\r\n * @param name Name that identifies this [[Matcher]].\r\n * @since Not released yet.\r\n */\r\nfunction createResourceMatcherFor(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const url = new URL(getSourceUrl(acr));\r\n    url.hash = `#${name}`;\r\n    let matcherThing = createThing({ url: url.href });\r\n    matcherThing = setUrl(matcherThing, rdf.type, acp.Matcher);\r\n    return matcherThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[Matcher]] with the given URL from an [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains the given [[Matcher]].\r\n * @param url URL that identifies this [[Matcher]].\r\n * @returns The requested [[Matcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcher(matcherResource, url) {\r\n    const foundThing = getThing(matcherResource, url);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Get the [[ResourceMatcher]] with the given name from an Resource's Access Control\r\n * Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains the given [[ResourceMatcher]].\r\n * @param name Name that identifies this [[ResourceMatcher]].\r\n * @returns The requested [[ResourceMatcher]], if it exists, or `null` if it does not.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcher(resourceWithAcr, name) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const acrUrl = getSourceUrl(acr);\r\n    const url = new URL(acrUrl);\r\n    url.hash = `#${name}`;\r\n    const foundThing = getThing(acr, url.href);\r\n    if (foundThing === null || !isMatcher(foundThing)) {\r\n        return null;\r\n    }\r\n    return foundThing;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[Matcher]]s from a [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns The [[Matcher]]s contained in this resource.\r\n * @since Not released yet.\r\n */\r\nfunction getMatcherAll(matcherResource) {\r\n    const things = getThingAll(matcherResource);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Gets the [[ResourceMatcher]]s from a Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns The [[ResourceMatcher]]s contained in this Resource's Access Control Resource.\r\n * @since Not released yet.\r\n */\r\nfunction getResourceMatcherAll(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const things = getThingAll(acr);\r\n    return things.filter(isMatcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[Matcher]] from the given [[SolidDataset]].\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but without the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction removeMatcher(matcherResource, matcher) {\r\n    return removeThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the given [[ResourceMatcher]] from the given Resource's Access Control Resource.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but without the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction removeResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    let matcherToRemove;\r\n    if (typeof matcher === \"string\") {\r\n        try {\r\n            new URL(matcher);\r\n            matcherToRemove = matcher;\r\n        }\r\n        catch (e) {\r\n            // If the given Matcher to remove is the name of the Matcher,\r\n            // resolve it to its full URL — developers usually refer to either the\r\n            // Matcher itself, or by its name, as they do not have access to the ACR\r\n            // directly.\r\n            const matcherUrl = new URL(getSourceUrl(acr));\r\n            matcherUrl.hash = `#${matcher}`;\r\n            matcherToRemove = matcherUrl.href;\r\n        }\r\n    }\r\n    else if (isNamedNode(matcher)) {\r\n        matcherToRemove = internal_toIriString(matcher);\r\n    }\r\n    else {\r\n        matcherToRemove = asUrl(matcher);\r\n    }\r\n    // Check whether the actual Matcher (i.e. with the Matcher type) exists:\r\n    const matchingMatcher = getResourceMatcher(resourceWithAcr, new URL(matcherToRemove).hash.substring(1));\r\n    if (matchingMatcher === null) {\r\n        // No such Matcher exists yet, so return the Resource+ACR unchanged:\r\n        return resourceWithAcr;\r\n    }\r\n    const updatedAcr = removeThing(acr, matchingMatcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[Matcher]] into the given [[SolidDataset]], replacing previous\r\n * instances of that Matcher.\r\n *\r\n * @param matcherResource The Resource that contains (zero or more) [[Matcher]]s.\r\n * @returns A new SolidDataset equal to the given Matcher Resource, but with the given Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction setMatcher(matcherResource, matcher) {\r\n    return setThing(matcherResource, matcher);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Insert the given [[ResourceMatcher]] into the given Resource's Access Control Resource,\r\n * replacing previous instances of that Matcher.\r\n *\r\n * @param resourceWithAcr The Resource whose Access Control Resource contains (zero or more) [[ResourceMatcher]]s.\r\n * @returns A new Resource equal to the given Resource, but with the given Matcher in its ACR.\r\n * @since Not released yet.\r\n */\r\nfunction setResourceMatcher(resourceWithAcr, matcher) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const updatedAcr = setThing(acr, matcher);\r\n    const updatedResource = internal_setAcr(resourceWithAcr, updatedAcr);\r\n    return updatedResource;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the agents a [[Matcher]] applies **directly** to. This will not include agents\r\n * that are matched on a property other than their WebID.\r\n *\r\n * @param matcher The matcher from which agents are read.\r\n * @returns A list of the WebIDs of agents included in the matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getAgentAll(matcher) {\r\n    return getIriAll(matcher, acp.agent).filter((agent) => agent !== acp.PublicAgent &&\r\n        agent !== acp.AuthenticatedAgent &&\r\n        agent !== acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the agents the [[Matcher]] applies to with the provided agents.\r\n *\r\n * @param matcher The matcher for which agents are set.\r\n * @param agent The agent the matcher should apply to.\r\n * @returns A copy of the input matcher, applying to a different set of agents.\r\n * @since Not released yet.\r\n */\r\nfunction setAgent(matcher, agent) {\r\n    // Preserve the special agent classes authenticated and public, which we\r\n    // don't want to overwrite with this function.\r\n    const isPublic = hasPublic(matcher);\r\n    const isAuthenticated = hasAuthenticated(matcher);\r\n    const isCreator = hasCreator(matcher);\r\n    let result = setIri(matcher, acp.agent, agent);\r\n    // Restore public and authenticated\r\n    if (isPublic) {\r\n        result = setPublic(result);\r\n    }\r\n    if (isAuthenticated) {\r\n        result = setAuthenticated(result);\r\n    }\r\n    if (isCreator) {\r\n        result = setCreator(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional agent.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional agent.\r\n * @param agent The agent the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional agent.\r\n * @since Not released yet.\r\n */\r\nfunction addAgent(matcher, agent) {\r\n    return addIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given agent directly. This will not\r\n * prevent the agent from matching on other properties than its WebID.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given agent.\r\n * @param agent The agent the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAgent(matcher, agent) {\r\n    return removeIri(matcher, acp.agent, agent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any agent.\r\n *\r\n * @param matcher The Matcher checked for public access.\r\n * @returns Whether the Matcher applies to any agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasPublic(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.PublicAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction setPublic(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setPublic` no longer takes a second parameter. It is now used together with `removePublic` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to no longer apply to any agent.\r\n * @since Not released yet.\r\n */\r\nfunction removePublic(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.PublicAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any authenticated agent.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to any authenticated agent or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasAuthenticated(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.AuthenticatedAgent).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to any authenticated Agent.\r\n * @since Not released yet.\r\n */\r\nfunction setAuthenticated(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setAuthenticated` no longer takes a second parameter. It is now used together with `removeAuthenticated` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to any authenticated Agent.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to any authenticated agent.\r\n * @since Not released yet.\r\n */\r\nfunction removeAuthenticated(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.AuthenticatedAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to the creator of the Resource.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to the creator of the Resource or not.\r\n * @since Not released yet.\r\n */\r\nfunction hasCreator(matcher) {\r\n    return (getIriAll(matcher, acp.agent).filter((agent) => agent === acp.CreatorAgent)\r\n        .length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction setCreator(matcher) {\r\n    // The second argument should not be part of the function signature,\r\n    // so it's not in the parameter list:\r\n    // eslint-disable-next-line prefer-rest-params\r\n    if (typeof arguments === \"object\" && typeof arguments[1] === \"boolean\") {\r\n        throw new Error(\"The function `setCreator` no longer takes a second parameter. It is now used together with `removeCreator` instead.\");\r\n    }\r\n    return addIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Set a Matcher to no longer apply to the creator of a Resource.\r\n *\r\n * @param matcher The Matcher being modified.\r\n * @returns A copy of the Matcher, updated to apply/not apply to the creator of a Resource.\r\n * @since Not released yet.\r\n */\r\nfunction removeCreator(matcher) {\r\n    return removeIri(matcher, acp.agent, acp.CreatorAgent);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * List all the clients a [[Matcher]] applies **directly** to. This will not include\r\n * specific client classes, such as public clients.\r\n *\r\n * @param matcher The Matcher from which clients are read.\r\n * @returns A list of the WebIDs of clients included in the Matcher.\r\n * @since Not released yet.\r\n */\r\nfunction getClientAll(matcher) {\r\n    return getIriAll(matcher, acp.client).filter((client) => client !== solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Overwrite the clients the [[Matcher]] applies to with the provided Client.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @param client The Client the Matcher should apply to.\r\n * @returns A copy of the input Matcher, applying to a different set of Clients.\r\n * @since Not released yet.\r\n */\r\nfunction setClient(matcher, client) {\r\n    // Preserve the special \"any client\" class, which we\r\n    // don't want to overwrite with this function.\r\n    const anyClientEnabled = hasAnyClient(matcher);\r\n    let result = setIri(matcher, acp.client, client);\r\n    // Restore the \"any client\" class\r\n    if (anyClientEnabled) {\r\n        result = setAnyClient(result);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Apply the [[Matcher]] to an additional Client.\r\n *\r\n * @param matcher The [[Matcher]] to be applied to an additional Client.\r\n * @param client The Client the [[Matcher]] should apply to.\r\n * @returns A copy of the [[Matcher]], applying to an additional Client.\r\n * @since Not released yet.\r\n */\r\nfunction addClient(matcher, client) {\r\n    return addIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Prevent the [[Matcher]] from applying to a given Client directly.\r\n *\r\n * @param matcher The [[Matcher]] that should no longer apply to a given Client.\r\n * @param client The Client the Matcher should no longer apply to.\r\n * @returns A copy of the Matcher, not applying to the given Client.\r\n * @since Not released yet.\r\n */\r\nfunction removeClient(matcher, client) {\r\n    return removeIri(matcher, acp.client, client);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Check if the Matcher applies to any client, i.e. all the applications\r\n * regardless of their identifier.\r\n *\r\n * @param matcher The Matcher checked for authenticated access.\r\n * @returns Whether the Matcher applies to public clients.\r\n * @since Not released yet.\r\n */\r\nfunction hasAnyClient(matcher) {\r\n    return (getIriAll(matcher, acp.client).filter((client) => client === solid.PublicOidcClient).length > 0);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to apply to any client\r\n * @since Not released yet.\r\n */\r\nfunction setAnyClient(matcher) {\r\n    return addIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * ```{note} There is no Access Control Policies specification yet. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Make the [[Matcher]] no longer apply to any client application.\r\n *\r\n * @param matcher The Matcher for which clients are set.\r\n * @returns A copy of the Matcher, updated to no longer apply to any client\r\n * @since Not released yet.\r\n */\r\nfunction removeAnyClient(matcher) {\r\n    return removeIri(matcher, acp.client, solid.PublicOidcClient);\r\n}\r\n/**\r\n * Gets a human-readable representation of the given [[Matcher]] to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param matcher The Matcher to get a human-readable representation of.\r\n * @since Not released yet.\r\n */\r\nfunction matcherAsMarkdown(matcher) {\r\n    let markdown = `## Matcher: ${asUrl(matcher)}\\n\\n`;\r\n    let targetEnumeration = \"\";\r\n    if (hasPublic(matcher)) {\r\n        targetEnumeration += \"- Everyone\\n\";\r\n    }\r\n    if (hasAuthenticated(matcher)) {\r\n        targetEnumeration += \"- All authenticated agents\\n\";\r\n    }\r\n    if (hasCreator(matcher)) {\r\n        targetEnumeration += \"- The creator of this resource\\n\";\r\n    }\r\n    if (hasAnyClient(matcher)) {\r\n        targetEnumeration += \"- Users of any client application\\n\";\r\n    }\r\n    const targetAgents = getAgentAll(matcher);\r\n    if (targetAgents.length > 0) {\r\n        targetEnumeration += \"- The following agents:\\n  - \";\r\n        targetEnumeration += targetAgents.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    const targetClients = getClientAll(matcher);\r\n    if (targetClients.length > 0) {\r\n        targetEnumeration += \"- Users of the following client applications:\\n  - \";\r\n        targetEnumeration += targetClients.join(\"\\n  - \") + \"\\n\";\r\n    }\r\n    markdown +=\r\n        targetEnumeration.length > 0\r\n            ? \"This Matcher matches:\\n\" + targetEnumeration\r\n            : \"<empty>\\n\";\r\n    return markdown;\r\n}\n\nexport { addAgent, addAllOfMatcherUrl, addAnyOfMatcherUrl, addClient, addNoneOfMatcherUrl, createMatcher, createResourceMatcherFor, getAgentAll, getAllOfMatcherUrlAll, getAnyOfMatcherUrlAll, getClientAll, getMatcher, getMatcherAll, getNoneOfMatcherUrlAll, getResourceMatcher, getResourceMatcherAll, hasAnyClient, hasAuthenticated, hasCreator, hasPublic, matcherAsMarkdown, removeAgent, removeAllOfMatcherUrl, removeAnyClient, removeAnyOfMatcherUrl, removeAuthenticated, removeClient, removeCreator, removeMatcher, removeNoneOfMatcherUrl, removePublic, removeResourceMatcher, setAgent, setAllOfMatcherUrl, setAnyClient, setAnyOfMatcherUrl, setAuthenticated, setClient, setCreator, setMatcher, setNoneOfMatcherUrl, setPublic, setResourceMatcher };\n","import { ACL } from '../constants.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction getModes(policy, type) {\r\n    const modes = getIriAll(policy, type);\r\n    return {\r\n        read: modes.includes(ACL.Read),\r\n        append: modes.includes(ACL.Append),\r\n        write: modes.includes(ACL.Write),\r\n        controlRead: false,\r\n        controlWrite: false,\r\n    };\r\n}\n\nexport { getModes };\n","import { getSourceIri } from '../../resource/resource.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\nimport { asIri, getThing } from '../../thing/thing.mjs';\nimport { ACP } from '../constants.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\nimport { getAccessControlResourceThing } from '../internal/getAccessControlResourceThing.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { getModes } from '../internal/getModes.mjs';\nimport { DEFAULT_VC_POLICY_NAME, DEFAULT_VC_MATCHER_NAME } from './setVcAccess.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DEFAULT_NO_ACCESS = {\r\n    read: false,\r\n    append: false,\r\n    write: false,\r\n    controlRead: false,\r\n    controlWrite: false,\r\n};\r\nconst linkExists = (subject, predicate, object) => getIriAll(subject, predicate).includes(asIri(object));\r\n// TODO: It should be possible to write a `chainExists` function, taking in a chain\r\n// of Thing, predicate, Thing, predicate... and checks whether such chain exists\r\n// in a given dataset. It would make the following function much easier to read,\r\n// instead of checking at each link that it isn't null and it is connected to the\r\n// next link.\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the maximum access modes that are allowed for a VC holder for a given resource.\r\n * If the resource owner issued an Access Grant for the resource, the agent that\r\n * has been granted access will have at most the permissions returned by this function.\r\n * The Access Grant may be more restrictive.\r\n *\r\n * Note that only the modes set using [[setVcAccess]] will be returned by this function.\r\n * Additional access may have been set if the ACR has been manipulated not using this\r\n * library, which is currently out of scope.\r\n *\r\n * @param resourceWithAcr The resource for which the VC access modes are looked up.\r\n * @returns The access modes available to a VC holder.\r\n * @since 1.17.0\r\n */\r\nfunction getVcAccess(resourceWithAcr) {\r\n    const acr = internal_getAcr(resourceWithAcr);\r\n    const accessControl = getDefaultAccessControlThing(resourceWithAcr, \"defaultAccessControl\");\r\n    const acrThing = getAccessControlResourceThing(resourceWithAcr);\r\n    if (acrThing === null ||\r\n        !linkExists(acrThing, ACP.accessControl, accessControl)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\r\n    const vcPolicy = getThing(acr, defaultVcPolicyIri);\r\n    if (vcPolicy === null || !linkExists(accessControl, ACP.apply, vcPolicy)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\r\n    const vcMatcher = getThing(acr, defaultVcMatcherIri);\r\n    if (vcMatcher === null || !linkExists(vcPolicy, ACP.anyOf, vcMatcher)) {\r\n        return DEFAULT_NO_ACCESS;\r\n    }\r\n    return getModes(vcPolicy, ACP.allow);\r\n}\n\nexport { getVcAccess };\n","import { getFileWithAccessDatasets, getFileWithAcr, getReferencedPolicyUrlAll, getResourceInfoWithAccessDatasets, getResourceInfoWithAcr, getSolidDatasetWithAccessDatasets, getSolidDatasetWithAcr, hasAccessibleAcr, saveAcrFor, isAcpControlled } from './acp.mjs';\nimport { acrAsMarkdown, hasLinkedAcr, removeAcrPolicyUrlAll, removeMemberAcrPolicyUrlAll, removeMemberPolicyUrlAll, removePolicyUrlAll } from './control.mjs';\nimport { addAcrPolicyUrl } from './policy/addAcrPolicyUrl.mjs';\nimport { addMemberAcrPolicyUrl } from './policy/addMemberAcrPolicyUrl.mjs';\nimport { addMemberPolicyUrl } from './policy/addMemberPolicyUrl.mjs';\nimport { addPolicyUrl } from './policy/addPolicyUrl.mjs';\nimport { getAcrPolicyUrlAll } from './policy/getAcrPolicyUrlAll.mjs';\nimport { getMemberAcrPolicyUrlAll } from './policy/getMemberAcrPolicyUrlAll.mjs';\nimport { getMemberPolicyUrlAll } from './policy/getMemberPolicyUrlAll.mjs';\nimport { getPolicyUrlAll } from './policy/getPolicyUrlAll.mjs';\nimport { removeAcrPolicyUrl } from './policy/removeAcrPolicyUrl.mjs';\nimport { removeMemberAcrPolicyUrl } from './policy/removeMemberAcrPolicyUrl.mjs';\nimport { removeMemberPolicyUrl } from './policy/removeMemberPolicyUrl.mjs';\nimport { removePolicyUrl } from './policy/removePolicyUrl.mjs';\nimport { createPolicy, getAllowModesV2, getDenyModesV2, getPolicy, getPolicyAll, policyAsMarkdown, removePolicy, setAllowModesV2, setDenyModesV2, setPolicy, createResourcePolicyFor, getResourceAcrPolicy, getResourceAcrPolicyAll, getResourcePolicy, getResourcePolicyAll, removeResourceAcrPolicy, removeResourcePolicy, setResourceAcrPolicy, setResourcePolicy } from './policy.mjs';\nimport { addAgent, createMatcher, getAgentAll, getMatcher, getMatcherAll, removeAgent, removeMatcher, matcherAsMarkdown, setAgent, setMatcher, addClient, getClientAll, hasAnyClient, removeClient, setAnyClient, setClient, removeAnyClient, hasAuthenticated, hasCreator, hasPublic, setAuthenticated, setCreator, setPublic, removeAuthenticated, removeCreator, removePublic, getAnyOfMatcherUrlAll, addAnyOfMatcherUrl, removeAnyOfMatcherUrl, setAnyOfMatcherUrl, getAllOfMatcherUrlAll, addAllOfMatcherUrl, removeAllOfMatcherUrl, setAllOfMatcherUrl, getNoneOfMatcherUrlAll, addNoneOfMatcherUrl, removeNoneOfMatcherUrl, setNoneOfMatcherUrl, createResourceMatcherFor, getResourceMatcher, getResourceMatcherAll, removeResourceMatcher, setResourceMatcher } from './matcher.mjs';\nimport { addMockAcrTo, mockAcrFor } from './mock.mjs';\nimport { getVcAccess } from './util/getVcAccess.mjs';\nimport { setVcAccess } from './util/setVcAccess.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst v4AcpFunctions = {\r\n    getFileWithAccessDatasets,\r\n    getFileWithAcr,\r\n    getReferencedPolicyUrlAll,\r\n    getResourceInfoWithAccessDatasets,\r\n    getResourceInfoWithAcr,\r\n    getSolidDatasetWithAccessDatasets,\r\n    getSolidDatasetWithAcr,\r\n    hasAccessibleAcr,\r\n    saveAcrFor,\r\n    isAcpControlled,\r\n    getVcAccess,\r\n    setVcAccess,\r\n};\r\nconst v4ControlFunctions = {\r\n    acrAsMarkdown,\r\n    addAcrPolicyUrl,\r\n    addMemberAcrPolicyUrl,\r\n    addMemberPolicyUrl,\r\n    addPolicyUrl,\r\n    getAcrPolicyUrlAll,\r\n    getMemberAcrPolicyUrlAll,\r\n    getMemberPolicyUrlAll,\r\n    getPolicyUrlAll,\r\n    hasLinkedAcr,\r\n    removeAcrPolicyUrl,\r\n    removeAcrPolicyUrlAll,\r\n    removeMemberAcrPolicyUrl,\r\n    removeMemberAcrPolicyUrlAll,\r\n    removeMemberPolicyUrl,\r\n    removeMemberPolicyUrlAll,\r\n    removePolicyUrl,\r\n    removePolicyUrlAll,\r\n};\r\nconst v4PolicyFunctions = {\r\n    createPolicy,\r\n    getAllowModes: getAllowModesV2,\r\n    getDenyModes: getDenyModesV2,\r\n    getPolicy,\r\n    getPolicyAll,\r\n    policyAsMarkdown,\r\n    removePolicy,\r\n    setAllowModes: setAllowModesV2,\r\n    setDenyModes: setDenyModesV2,\r\n    setPolicy,\r\n    createResourcePolicyFor,\r\n    getResourceAcrPolicy,\r\n    getResourceAcrPolicyAll,\r\n    getResourcePolicy,\r\n    getResourcePolicyAll,\r\n    removeResourceAcrPolicy,\r\n    removeResourcePolicy,\r\n    setResourceAcrPolicy,\r\n    setResourcePolicy,\r\n};\r\nconst v4MatcherFunctions = {\r\n    addAgent,\r\n    createMatcher,\r\n    getAgentAll,\r\n    getMatcher,\r\n    getMatcherAll,\r\n    removeAgent,\r\n    removeMatcher,\r\n    matcherAsMarkdown,\r\n    setAgent,\r\n    setMatcher,\r\n    addClient,\r\n    getClientAll,\r\n    hasAnyClient,\r\n    removeClient,\r\n    setAnyClient,\r\n    setClient,\r\n    removeAnyClient,\r\n    hasAuthenticated,\r\n    hasCreator,\r\n    hasPublic,\r\n    setAuthenticated,\r\n    setCreator,\r\n    setPublic,\r\n    removeAuthenticated,\r\n    removeCreator,\r\n    removePublic,\r\n    getAnyOfMatcherUrlAll,\r\n    addAnyOfMatcherUrl,\r\n    removeAnyOfMatcherUrl,\r\n    setAnyOfMatcherUrl,\r\n    getAllOfMatcherUrlAll,\r\n    addAllOfMatcherUrl,\r\n    removeAllOfMatcherUrl,\r\n    setAllOfMatcherUrl,\r\n    getNoneOfMatcherUrlAll,\r\n    addNoneOfMatcherUrl,\r\n    removeNoneOfMatcherUrl,\r\n    setNoneOfMatcherUrl,\r\n    createResourceMatcherFor,\r\n    getResourceMatcher,\r\n    getResourceMatcherAll,\r\n    removeResourceMatcher,\r\n    setResourceMatcher,\r\n};\r\nconst v4MockFunctions = {\r\n    addMockAcrTo,\r\n    mockAcrFor,\r\n};\r\n/**\r\n * @hidden\r\n * @deprecated Please import directly from the \"acp/*\" modules.\r\n */\r\nconst acp_v4 = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, v4AcpFunctions), v4ControlFunctions), v4PolicyFunctions), v4MatcherFunctions), v4MockFunctions);\n\nexport { acp_v4 };\n","import { getSourceIri } from '../../resource/resource.mjs';\nimport 'http-link-header';\nimport '@rdfjs/data-model';\nimport '../../rdf.internal.mjs';\nimport { rdf } from '../../constants.mjs';\nimport 'jsonld';\nimport { asIri, getThing, setThing } from '../../thing/thing.mjs';\nimport { getIriAll } from '../../thing/get.mjs';\nimport 'cross-fetch';\nimport { addIri } from '../../thing/add.mjs';\nimport { buildThing } from '../../thing/build.mjs';\nimport '../../rdfjs.mjs';\nimport '../v1.mjs';\nimport '../v2.mjs';\nimport '../v3.mjs';\nimport '../v4.mjs';\nimport { internal_getAcr } from '../control.internal.mjs';\nimport { ACP, VC_ACCESS_GRANT } from '../constants.mjs';\nimport { getAccessControlResourceThing } from '../internal/getAccessControlResourceThing.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { getModes } from '../internal/getModes.mjs';\nimport { setAcr } from '../internal/setAcr.mjs';\nimport { setModes } from '../internal/setModes.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DEFAULT_VC_POLICY_NAME = \"defaultVcPolicy\";\r\nconst DEFAULT_VC_MATCHER_NAME = \"defaultVcMatcher\";\r\n/**\r\n * * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Set the maximum access modes that are allowed for a VC holder for a given resource.\r\n * If the resource owner issued an Access Grant for the resource, the agent that\r\n * has been granted access will have at most the permissions set by this function.\r\n * The Access Grant may be more restrictive.\r\n *\r\n * Note that additional access may have been set if the ACR has been manipulated\r\n * not using this library, which is currently out of scope. In this case, the access\r\n * set by this function may not apply.\r\n *\r\n * @param resourceWithAcr The resource for which the access modes are being set for VC holders.\r\n * @param access The access modes to set. Setting a mode to `true` will enable it, to `false`\r\n * will disable it, and to `undefined` will leave it unchanged compared to what was previously\r\n * set.\r\n * @returns A copy of the resource and its attached ACR, updated to the new access modes.\r\n * @since 1.17.0\r\n */\r\nfunction setVcAccess(resourceWithAcr, access) {\r\n    var _a, _b;\r\n    let acr = internal_getAcr(resourceWithAcr);\r\n    const defaultVcPolicyIri = `${getSourceIri(acr)}#${DEFAULT_VC_POLICY_NAME}`;\r\n    const defaultVcMatcherIri = `${getSourceIri(acr)}#${DEFAULT_VC_MATCHER_NAME}`;\r\n    let accessControl = getDefaultAccessControlThing(resourceWithAcr, \"defaultAccessControl\");\r\n    let acrThing = (_a = getAccessControlResourceThing(resourceWithAcr)) !== null && _a !== void 0 ? _a : buildThing({ url: getSourceIri(acr) })\r\n        .addIri(ACP.accessControl, accessControl)\r\n        .build();\r\n    if (!getIriAll(acrThing, ACP.accessControl).includes(asIri(accessControl))) {\r\n        // Case when the ACR Thing existed, but did not include a link to the default Access Control.\r\n        acrThing = addIri(acrThing, ACP.accessControl, accessControl);\r\n    }\r\n    let vcPolicy = getThing(acr, defaultVcPolicyIri);\r\n    if (vcPolicy === null) {\r\n        // If the policy does not exist, create it and link the default Access Control to it.\r\n        vcPolicy = buildThing({ url: defaultVcPolicyIri })\r\n            .addIri(rdf.type, ACP.Policy)\r\n            .addIri(ACP.anyOf, defaultVcMatcherIri)\r\n            .build();\r\n        accessControl = addIri(accessControl, ACP.apply, vcPolicy);\r\n    }\r\n    const vcMatcher = (_b = getThing(acr, defaultVcMatcherIri)) !== null && _b !== void 0 ? _b : buildThing({ url: defaultVcMatcherIri })\r\n        .addIri(rdf.type, ACP.Matcher)\r\n        .addIri(ACP.vc, VC_ACCESS_GRANT)\r\n        .build();\r\n    const currentModes = getModes(vcPolicy, ACP.allow);\r\n    // Only change the modes which are set in `access`, and preserve the others.\r\n    vcPolicy = setModes(vcPolicy, Object.assign(Object.assign({}, currentModes), access), ACP.allow);\r\n    // Write the changed access control, policy and matchers in the ACR\r\n    acr = [acrThing, accessControl, vcPolicy, vcMatcher].reduce(setThing, acr);\r\n    return setAcr(resourceWithAcr, acr);\r\n}\n\nexport { DEFAULT_VC_MATCHER_NAME, DEFAULT_VC_POLICY_NAME, setVcAccess };\n","import { removeAll } from '../../thing/remove.mjs';\nimport { addIri } from '../../thing/add.mjs';\nimport { ACL } from '../constants.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden */\r\nfunction setModes(policy, modes, type) {\r\n    let newPolicy = removeAll(policy, type);\r\n    if (modes.read || modes.controlRead) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Read);\r\n    }\r\n    if (modes.append) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Append);\r\n    }\r\n    if (modes.write || modes.controlWrite) {\r\n        newPolicy = addIri(newPolicy, type, ACL.Write);\r\n    }\r\n    return newPolicy;\r\n}\n\nexport { setModes };\n","import { internal_cloneResource } from '../../resource/resource.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @hidden\r\n *\r\n * Internal function that attaches an ACR to a Resource. Prefer using this than\r\n * setting the internal values manually (easier to refactor when changing the internals).\r\n */\r\nfunction setAcr(resource, acr) {\r\n    return Object.assign(internal_cloneResource(resource), {\r\n        internal_acp: {\r\n            acr,\r\n        },\r\n    });\r\n}\n\nexport { setAcr };\n","import { ACP } from '../constants.mjs';\nimport { buildThing } from '../../thing/build.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_ACR_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { setDefaultAccessControlThingIfNotExist } from '../internal/setDefaultAccessControlThingIfNotExist.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its access control resource.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_ACR_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build());\r\n}\n\nexport { addAcrPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { buildThing } from '../../thing/build.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_MEMBER_ACR_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { setDefaultAccessControlThingIfNotExist } from '../internal/setDefaultAccessControlThingIfNotExist.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the ACRs of the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its children's access control resources.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.access, policyUrl).build());\r\n}\n\nexport { addMemberAcrPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { buildThing } from '../../thing/build.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_MEMBER_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { setDefaultAccessControlThingIfNotExist } from '../internal/setDefaultAccessControlThingIfNotExist.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to its children.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultMemberAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    const defaultMemberAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultMemberAccessControl, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultMemberAccessControl, buildThing(defaultMemberAccessControlThing)\r\n        .addUrl(ACP.apply, policyUrl)\r\n        .build());\r\n}\n\nexport { addMemberPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { buildThing } from '../../thing/build.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { setDefaultAccessControlThingIfNotExist } from '../internal/setDefaultAccessControlThingIfNotExist.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Add a policy applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to add the URL of a policy\r\n * applying to it.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction addPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const resourceWithAcrContainingDefaultAccessControl = setDefaultAccessControlThingIfNotExist(resourceWithAcr, DEFAULT_ACCESS_CONTROL);\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcrContainingDefaultAccessControl, DEFAULT_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcrContainingDefaultAccessControl, buildThing(defaultAccessControlThing).addUrl(ACP.apply, policyUrl).build());\r\n}\n\nexport { addPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { getAccessControlUrlAll } from '../accessControl/getAccessControlUrlAll.mjs';\nimport { getPolicyUrls } from '../internal/getPolicyUrls.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to its access control resource.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getAcrPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getAccessControlUrlAll(resourceWithAcr), ACP.access);\r\n}\n\nexport { getAcrPolicyUrlAll };\n","import { ACP } from '../constants.mjs';\nimport { getMemberAccessControlUrlAll } from '../accessControl/getMemberAccessControlUrlAll.mjs';\nimport { getPolicyUrls } from '../internal/getPolicyUrls.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the ACRs of the given resource's\r\n * children.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to its children's access control resources.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getMemberAcrPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getMemberAccessControlUrlAll(resourceWithAcr), ACP.access);\r\n}\n\nexport { getMemberAcrPolicyUrlAll };\n","import { ACP } from '../constants.mjs';\nimport { getMemberAccessControlUrlAll } from '../accessControl/getMemberAccessControlUrlAll.mjs';\nimport { getPolicyUrls } from '../internal/getPolicyUrls.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs policies\r\n * applying to its children.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getMemberPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getMemberAccessControlUrlAll(resourceWithAcr), ACP.apply);\r\n}\n\nexport { getMemberPolicyUrlAll };\n","import { ACP } from '../constants.mjs';\nimport { getAccessControlUrlAll } from '../accessControl/getAccessControlUrlAll.mjs';\nimport { getPolicyUrls } from '../internal/getPolicyUrls.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Get the URLs of policies applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to retrieve URLs of policies\r\n * applying to it.\r\n * @returns Policy URL array.\r\n * @since 1.16.1\r\n */\r\nfunction getPolicyUrlAll(resourceWithAcr) {\r\n    return getPolicyUrls(resourceWithAcr, getAccessControlUrlAll(resourceWithAcr), ACP.apply);\r\n}\n\nexport { getPolicyUrlAll };\n","import { ACP } from '../constants.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_ACR_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { removeIri } from '../../thing/remove.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the ACR of the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its access control resource.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.access, policyUrl));\r\n}\n\nexport { removeAcrPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_MEMBER_ACR_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { removeIri } from '../../thing/remove.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the ACRs of the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its children's access control resources.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeMemberAcrPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_MEMBER_ACR_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.access, policyUrl));\r\n}\n\nexport { removeMemberAcrPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_MEMBER_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { removeIri } from '../../thing/remove.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the given resource's children.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to its children.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removeMemberPolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_MEMBER_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.apply, policyUrl));\r\n}\n\nexport { removeMemberPolicyUrl };\n","import { ACP } from '../constants.mjs';\nimport { getDefaultAccessControlThing } from '../internal/getDefaultAccessControlThing.mjs';\nimport { DEFAULT_ACCESS_CONTROL } from '../internal/getDefaultAccessControlUrl.mjs';\nimport { setAccessControlResourceThing } from '../internal/setAccessControlResourceThing.mjs';\nimport { removeIri } from '../../thing/remove.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * The ACP specification is a draft. As such, this function is experimental and\r\n * subject to change, even in a non-major release.\r\n * See also: https://solid.github.io/authorization-panel/acp-specification/\r\n * ```\r\n *\r\n * Remove a policy applying to the given resource.\r\n *\r\n * @param resourceWithAcr The resource for which to remove the URL of a policy\r\n * applying to it.\r\n * @param policyUrl A Policy URL.\r\n * @returns The resource with its ammended access control resource.\r\n * @since 1.16.1\r\n */\r\nfunction removePolicyUrl(resourceWithAcr, policyUrl) {\r\n    const defaultAccessControlThing = getDefaultAccessControlThing(resourceWithAcr, DEFAULT_ACCESS_CONTROL);\r\n    return setAccessControlResourceThing(resourceWithAcr, removeIri(defaultAccessControlThing, ACP.apply, policyUrl));\r\n}\n\nexport { removePolicyUrl };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}"],"names":["ACP_NAMESPACE","ACP","AccessControl","concat","AccessControlResource","AuthenticatedAgent","CreatorAgent","Matcher","Policy","PublicAgent","access","accessControl","agent","allOf","allow","anyOf","apply","client","deny","memberAccessControl","noneOf","vc","ACL_NAMESPACE","ACL","Append","Control","Read","Write","buildThing","init","thing","getAdder","adder","property","value","builder","getSetter","setter","getRemover","remover","build","addUrl","add","addIri","addBoolean","addDatetime","addDate","addTime","addDecimal","addInteger","addStringNoLocale","addStringEnglish","addStringWithLocale","locale","addNamedNode","addLiteral","addTerm","setUrl","set","setIri","setBoolean","setDatetime","setDate","setTime","setDecimal","setInteger","setStringNoLocale","setStringEnglish","setStringWithLocale","setNamedNode","setLiteral","setTerm","removeAll","remove","removeUrl","removeIri","removeBoolean","removeDatetime","removeDate","removeTime","removeDecimal","removeInteger","removeStringNoLocale","removeStringEnglish","removeStringWithLocale","removeNamedNode","removeLiteral","DEFAULT_ACCESS_CONTROL","DEFAULT_ACR_ACCESS_CONTROL","DEFAULT_MEMBER_ACCESS_CONTROL","DEFAULT_MEMBER_ACR_ACCESS_CONTROL","getDefaultAccessControlUrl","resource","name","acr","getDefaultAccessControlThing","defaultAccessControlUrl","accessControlThing","url","setAccessControlResourceThing","Object","assign","internal_acp","getAccessControlResourceThing","acrUrl","getAccessControlTypeFromDefaultAccessControlName","includes","setDefaultAccessControlThingIfNotExist","defaultAccessControlThingUrl","accessControlResourceThing","get","getAccessControlUrlAll","resourceWithAcr","acrThing","getPolicyUrls","accessControlUrls","type","Array","from","Set","map","accessControlUrl","reduce","previousValue","currentValue","getMemberAccessControlUrlAll","isMatcher","getResourceMatcher","URL","hash","foundThing","href","getAgentAll","matcher","filter","hasPublic","length","setPublic","arguments","Error","hasAuthenticated","setAuthenticated","hasCreator","setCreator","getClientAll","hasAnyClient","setAnyClient","getModes","policy","modes","read","append","write","controlRead","controlWrite","DEFAULT_NO_ACCESS","linkExists","subject","predicate","object","v4AcpFunctions","getFileWithAccessDatasets","getFileWithAcr","getReferencedPolicyUrlAll","getResourceInfoWithAccessDatasets","getResourceInfoWithAcr","getSolidDatasetWithAccessDatasets","getSolidDatasetWithAcr","hasAccessibleAcr","saveAcrFor","isAcpControlled","getVcAccess","defaultVcPolicyIri","vcPolicy","defaultVcMatcherIri","vcMatcher","setVcAccess","_a","_b","currentModes","newPolicy","setModes","setAcr","v4ControlFunctions","acrAsMarkdown","addAcrPolicyUrl","policyUrl","resourceWithAcrContainingDefaultAccessControl","addMemberAcrPolicyUrl","addMemberPolicyUrl","resourceWithAcrContainingDefaultMemberAccessControl","addPolicyUrl","getAcrPolicyUrlAll","getMemberAcrPolicyUrlAll","getMemberPolicyUrlAll","getPolicyUrlAll","hasLinkedAcr","removeAcrPolicyUrl","defaultAccessControlThing","removeAcrPolicyUrlAll","removeMemberAcrPolicyUrl","removeMemberAcrPolicyUrlAll","removeMemberPolicyUrl","removeMemberPolicyUrlAll","removePolicyUrl","removePolicyUrlAll","v4PolicyFunctions","createPolicy","getAllowModes","getDenyModes","getPolicy","getPolicyAll","policyAsMarkdown","removePolicy","setAllowModes","setDenyModes","setPolicy","createResourcePolicyFor","getResourceAcrPolicy","getResourceAcrPolicyAll","getResourcePolicy","getResourcePolicyAll","removeResourceAcrPolicy","removeResourcePolicy","setResourceAcrPolicy","setResourcePolicy","v4MatcherFunctions","addAgent","createMatcher","stringUrl","i","matcherThing","getMatcher","matcherResource","getMatcherAll","removeAgent","removeMatcher","matcherAsMarkdown","markdown","targetEnumeration","targetAgents","join","targetClients","setAgent","isPublic","isAuthenticated","isCreator","result","setMatcher","addClient","removeClient","setClient","anyClientEnabled","removeAnyClient","removeAuthenticated","removeCreator","removePublic","getAnyOfMatcherUrlAll","addAnyOfMatcherUrl","removeAnyOfMatcherUrl","setAnyOfMatcherUrl","getAllOfMatcherUrlAll","addAllOfMatcherUrl","removeAllOfMatcherUrl","setAllOfMatcherUrl","getNoneOfMatcherUrlAll","addNoneOfMatcherUrl","removeNoneOfMatcherUrl","setNoneOfMatcherUrl","createResourceMatcherFor","getResourceMatcherAll","removeResourceMatcher","matcherToRemove","e","matcherUrl","matchingMatcher","substring","updatedAcr","setResourceMatcher","v4MockFunctions","addMockAcrTo","mockAcrFor","acp_v4","_classCallCheck","instance","Constructor","TypeError","_classExtractFieldDescriptor","receiver","privateMap","action","has","_classPrivateFieldGet","descriptor","call","classExtractFieldDescriptor","_classPrivateFieldSet","writable","_defineProperties","target","props","enumerable","configurable","defineProperty","key","_createClass","protoProps","staticProps","prototype"],"sourceRoot":""}