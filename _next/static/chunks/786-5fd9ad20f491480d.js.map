{"version":3,"file":"static/chunks/786-5fd9ad20f491480d.js","mappings":"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","sources":["webpack://_N_E/./__testUtils/mockApp.js","webpack://_N_E/./components/profile/appProfile/styles.js","webpack://_N_E/./components/profile/appProfile/valueCellBody/index.jsx","webpack://_N_E/./components/profile/appProfile/titleCellBody/index.jsx","webpack://_N_E/./components/profile/appProfile/index.jsx","webpack://_N_E/./components/profile/personAvatar/styles.js","webpack://_N_E/./components/profile/personAvatar/index.jsx","webpack://_N_E/./components/profile/contactInfoTable/styles.js","webpack://_N_E/./components/profile/contactInfoTable/index.jsx","webpack://_N_E/./components/profile/personProfile/styles.js","webpack://_N_E/./components/profile/personProfile/index.jsx"],"sourcesContent":["/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport {\n  addStringNoLocale,\n  addUrl,\n  createSolidDataset,\n  createThing,\n  setThing,\n} from \"@inrupt/solid-client\";\nimport { vcard, rdf, schema, foaf } from \"rdf-namespaces\";\nimport { chain } from \"../src/solidClientHelpers/utils\";\nimport { vcardExtras } from \"../src/addressBook\";\n\nexport const oidcPrefix = \"http://www.w3.org/ns/solid/oidc#\";\nexport const TOS_PREDICATE = `${oidcPrefix}tos_uri`;\nexport const POLICY_PREDICATE = `${oidcPrefix}policy_uri`;\nexport const CONTACTS_PREDICATE = `${oidcPrefix}contacts`;\nexport const LOGO_PREDICATE = `${oidcPrefix}logo_uri`;\n\nexport const APP_WEBID = \"https://mockappurl.com\";\nexport const APP_POLICY_URL = \"https://mockappurl.com/privacy-policy\";\nexport const APP_TOS_URL = \"https://mockappurl.com/terms-of-service\";\n\nconst contactThing = chain(\n  createThing({ url: \"https://mockappurl.com#contacts\" }),\n  (t) => addStringNoLocale(t, foaf.name, \"Example Contact\"),\n  (t) => addStringNoLocale(t, vcard.hasTelephone, \"555-5555\"),\n  (t) => addStringNoLocale(t, vcard.hasEmail, \"example@email.com\"),\n  (t) => addUrl(t, vcard.url, \"https://examplewebsite.com\")\n);\n\nconst dataset = setThing(createSolidDataset(), contactThing);\n\nexport function mockApp() {\n  return chain(\n    createThing({ url: APP_WEBID }),\n    (t) => addStringNoLocale(t, foaf.name, \"Mock App\"),\n    (t) => addUrl(t, vcardExtras(\"WebId\"), APP_WEBID),\n    (t) => addUrl(t, rdf.type, schema.SoftwareApplication), // just guessing what the type might be for apps\n    (t) => addUrl(t, TOS_PREDICATE, APP_TOS_URL),\n    (t) => addUrl(t, POLICY_PREDICATE, APP_POLICY_URL),\n    (t) => addUrl(t, CONTACTS_PREDICATE, \"https://mockappurl.com#contacts\")\n  );\n}\n\nexport function mockAppDataset() {\n  return setThing(dataset, mockApp());\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst lightPrimaryBackgroundColor = \"#F1EDFF\"; // TODO: THIS MUST BE MOVED TO PRISM\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    avatar: {\n      width: \"64px\",\n      height: \"64px\",\n    },\n    appAvatar: {\n      textAlign: \"center\",\n      padding: theme.spacing(1),\n      borderRadius: \"50%\",\n      fontSize: theme.typography.h5.fontSize,\n      color: theme.palette.primary.main,\n      backgroundColor: lightPrimaryBackgroundColor,\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { getStringNoLocale, getUrl } from \"@inrupt/solid-client\";\nimport { useThing } from \"@inrupt/solid-ui-react\";\nimport { vcard } from \"rdf-namespaces\";\nimport T from \"prop-types\";\n\nexport default function ValueBody({ id }) {\n  const { thing } = useThing();\n  const tableItems = [\n    { property: vcard.url, title: \"Website\" },\n    { property: vcard.hasTelephone, title: \"Telephone\" },\n    { property: vcard.hasEmail, title: \"E-mail\" },\n  ];\n  const type = tableItems[id].title;\n  const { property } = tableItems[id];\n  const value =\n    type === \"Website\"\n      ? getUrl(thing, property)\n      : getStringNoLocale(thing, property);\n  return value;\n}\n\nValueBody.propTypes = {\n  id: T.string.isRequired,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport { vcard } from \"rdf-namespaces\";\nimport T from \"prop-types\";\n\nexport default function TypeBody({ id }) {\n  const tableItems = [\n    { property: vcard.url, title: \"Website\" },\n    { property: vcard.hasTelephone, title: \"Telephone\" },\n    { property: vcard.hasEmail, title: \"E-mail\" },\n  ];\n  const type = tableItems[id].title;\n  return <b>{type}</b>;\n}\nTypeBody.propTypes = {\n  id: T.string.isRequired,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React, { useState } from \"react\";\nimport { vcard } from \"rdf-namespaces\";\nimport clsx from \"clsx\";\nimport { getThing, getUrl } from \"@inrupt/solid-client\";\nimport { Box, InputLabel, createStyles } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { Table as PrismTable } from \"@inrupt/prism-react-components\";\nimport {\n  ThingProvider,\n  DatasetProvider,\n  Value,\n  Table,\n  TableColumn,\n} from \"@inrupt/solid-ui-react\";\n\nimport { vcardExtras } from \"../../../src/addressBook\";\n\nimport styles from \"./styles\";\nimport {\n  mockApp,\n  mockAppDataset,\n  TOS_PREDICATE,\n  POLICY_PREDICATE,\n  CONTACTS_PREDICATE,\n} from \"../../../__testUtils/mockApp\";\nimport ValueBody from \"./valueCellBody\";\nimport TypeBody from \"./titleCellBody\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport const TESTCAFE_ID_WEBID_FIELD = \"app-webid-field\";\nexport const TESTCAFE_ID_TOS_FIELD = \"app-tos-field\";\nexport const TESTCAFE_ID_POLICY_FIELD = \"app-policy-field\";\n\n// temporarily using mock data for apps for dev purposes until we have audit list\nconst app = mockApp();\nconst dataset = mockAppDataset();\n\nexport default function AppProfile() {\n  const [error, setError] = useState(null);\n  const tableClass = PrismTable.useTableClass(\"table\", \"inherits\");\n\n  const classes = useStyles();\n  const bem = useBem(classes);\n  // TODO replace with toast error or something?\n  // Ignoring this for coverage until there are actually errors\n  /* istanbul ignore next */\n  if (error) {\n    return error.toString();\n  }\n  // FIXME: not sure what the contacts would look like in a real app, but possibly a dataset with things? Maybe a profile? For now it is an array of strings:\n  const contactsUrl = getUrl(app, CONTACTS_PREDICATE);\n  const contacts = getThing(dataset, contactsUrl);\n\n  return (\n    <DatasetProvider solidDataset={dataset}>\n      <ThingProvider thing={app} onError={setError}>\n        <Box mt={2}>\n          <Box>\n            <InputLabel>App WebID</InputLabel>\n            <Value\n              property={vcardExtras(\"WebId\")}\n              dataType=\"url\"\n              autosave\n              data-testid={TESTCAFE_ID_WEBID_FIELD}\n            />\n          </Box>\n        </Box>\n        <Box mt={2}>\n          <Box>\n            <InputLabel>Terms of Service</InputLabel>\n            <Value\n              property={TOS_PREDICATE}\n              dataType=\"url\"\n              autosave\n              data-testid={TESTCAFE_ID_TOS_FIELD}\n            />\n          </Box>\n        </Box>\n        <Box mt={2}>\n          <Box>\n            <InputLabel>Privacy Policy</InputLabel>\n            <Value\n              property={POLICY_PREDICATE}\n              dataType=\"url\"\n              autosave\n              data-testid={TESTCAFE_ID_POLICY_FIELD}\n            />\n          </Box>\n        </Box>\n      </ThingProvider>\n      <ThingProvider thing={contacts} onError={setError}>\n        <Box mt={2}>\n          <InputLabel>Contact Support</InputLabel>\n          <Table\n            className={clsx(tableClass, bem(\"table\"))}\n            things={[\n              { dataset, thing: contacts },\n              { dataset, thing: contacts },\n              { dataset, thing: contacts },\n            ]}\n          >\n            <TableColumn\n              property={vcard.url}\n              body={({ row }) => <TypeBody id={row.id} />}\n              header=\"\"\n            />\n            <TableColumn\n              dataType=\"url\"\n              property={vcard.url}\n              header=\"\"\n              body={({ row }) => <ValueBody id={row.id} />}\n            />\n          </Table>\n        </Box>\n      </ThingProvider>\n    </DatasetProvider>\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    avatar: {\n      width: \"64px\",\n      height: \"64px\",\n    },\n    avatarText: {\n      fontFamily: theme.typography.h1.fontFamily,\n      fontSize: \"1.5rem\",\n      color: theme.palette.secondary.contrastText,\n    },\n    headerLink: {\n      display: \"block\",\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: \"1rem\",\n      fontWeight: theme.typography.body2.fontWeight,\n      color: theme.palette.secondary.contrastText,\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport T from \"prop-types\";\nimport { foaf, vcard } from \"rdf-namespaces\";\nimport { Avatar, Box, createStyles } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { Text, Image, useSession } from \"@inrupt/solid-ui-react\";\n\nimport styles from \"./styles\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport const TESTCAFE_ID_NAME_TITLE = \"profile-name-title\";\n\nexport function setupErrorComponent(bem) {\n  return () => (\n    <Avatar className={bem(\"avatar\")} alt=\"Contact photo placeholder\" />\n  );\n}\n\nexport default function PersonAvatar({ profileIri }) {\n  const classes = useStyles();\n  const bem = useBem(classes);\n  const errorComponent = setupErrorComponent(bem);\n  const { session } = useSession();\n\n  return (\n    <Box alignItems=\"center\" display=\"flex\">\n      <Box>\n        <Avatar className={classes.avatar}>\n          <Image\n            property={vcard.hasPhoto}\n            width={120}\n            alt={profileIri}\n            errorComponent={errorComponent}\n          />\n        </Avatar>\n      </Box>\n\n      <Box p={2}>\n        <h3 data-testid={TESTCAFE_ID_NAME_TITLE}>\n          <Text className={classes.avatarText} property={foaf.name} />\n          <a\n            className={classes.headerLink}\n            href={profileIri}\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            {session.info.webId}\n          </a>\n        </h3>\n      </Box>\n    </Box>\n  );\n}\n\nPersonAvatar.propTypes = {\n  profileIri: T.string.isRequired,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles, table } from \"@solid/lit-prism-patterns\";\n\nconst styles = (theme) => {\n  const tableStyles = table.styles(theme);\n  return createStyles(theme, [\"table\", \"button\", \"input\"], {\n    table: {\n      \"& tbody td\": {\n        \"&:nth-child(1)\": {\n          ...tableStyles[\"table__body-cell--width-preview\"],\n          \"padding-right\": \"1.85em\",\n        },\n        \"&:nth-child(2)\": {\n          width: \"100%\",\n        },\n        \"&:nth-child(3)\": {\n          width: \"10em\",\n        },\n      },\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport T from \"prop-types\";\nimport React, { useContext, useState } from \"react\";\nimport { rdf, vcard } from \"rdf-namespaces\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport {\n  addUrl,\n  asUrl,\n  createThing,\n  getSourceUrl,\n  getThing,\n  getUrlAll,\n  removeUrl,\n  saveSolidDatasetAt,\n  setThing,\n  setUrl,\n} from \"@inrupt/solid-client\";\n\nimport {\n  DatasetContext,\n  Table,\n  TableColumn,\n  useSession,\n  useThing,\n  Value,\n} from \"@inrupt/solid-ui-react\";\n\nimport {\n  Box,\n  MenuItem,\n  Typography,\n  FormControl,\n  Select,\n  createStyles,\n} from \"@material-ui/core\";\n\nimport { Button, Table as PrismTable } from \"@inrupt/prism-react-components\";\nimport styles from \"./styles\";\nimport { chain } from \"../../../src/solidClientHelpers/utils\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nconst TESTCAFE_ID_DELETE_BUTTON = \"profile-<TYPE>-delete-button\";\nconst TESTCAFE_ID_EXISTING_TYPE = \"profile-<TYPE>-existing-type\";\nconst TESTCAFE_ID_EXISTING_VALUE = \"profile-<TYPE>-existing-value\";\nconst TESTCAFE_ID_ADD_BUTTON = \"profile-<TYPE>-add-button\";\nexport const TESTCAFE_ID_NEW_TYPE = \"profile-<TYPE>-new-type\";\nconst TESTCAFE_ID_NEW_VALUE = \"profile-<TYPE>-new-value\";\n\nexport const CONTACT_INFO_TYPE_EMAIL = \"email\";\nexport const CONTACT_INFO_TYPE_PHONE = \"phone\";\n\nconst CONTACT_TYPE_LABEL_MAP = {\n  [vcard.Home]: \"Home\",\n  [vcard.Work]: \"Work\",\n};\n\nexport const PREFIX_MAP = {\n  [vcard.hasTelephone]: \"tel:\",\n  [vcard.hasEmail]: \"mailto:\",\n};\n\nexport const DEFAULT_CONTACT_TYPE = vcard.Home;\n\nexport function setupAddContactDetail(\n  property,\n  newContactType,\n  newContactValue,\n  dataset,\n  profile,\n  saveHandler,\n  setNewContactValue\n) {\n  return async () => {\n    const prefix = PREFIX_MAP[property];\n    const newContactDetail = chain(\n      setUrl(createThing(), rdf.type, newContactType),\n      (t) => setUrl(t, vcard.value, `${prefix}${newContactValue}`)\n    );\n\n    const datasetWithContactDetail = setThing(dataset, newContactDetail);\n\n    const newProfile = addUrl(\n      profile,\n      property,\n      asUrl(newContactDetail, getSourceUrl(dataset))\n    );\n\n    await saveHandler(newProfile, datasetWithContactDetail);\n\n    setNewContactValue(\"\");\n  };\n}\n\nexport function setupSaveHandler(fetch, setDataset) {\n  return async (newThing, datasetToUpdate) => {\n    const savedDataset = await saveSolidDatasetAt(\n      getSourceUrl(datasetToUpdate),\n      setThing(datasetToUpdate, newThing),\n      { fetch }\n    );\n    setDataset(savedDataset);\n  };\n}\n\nexport function setupRemoveRow(profile, property, saveHandler, dataset) {\n  return async (rowThing) => {\n    const contactDetailUrl = asUrl(rowThing);\n    const newProfile = removeUrl(profile, property, contactDetailUrl);\n    await saveHandler(newProfile, dataset);\n  };\n}\n\nexport function setupDeleteButtonCell(editing, contactInfoType, removeRow) {\n  return () => {\n    const { thing: rowThing } = useThing();\n\n    if (!editing) {\n      return null;\n    }\n\n    return (\n      <Button\n        onClick={() => removeRow(rowThing)}\n        data-testid={TESTCAFE_ID_DELETE_BUTTON.replace(\n          \"<TYPE>\",\n          contactInfoType\n        )}\n        variant=\"secondary\"\n      >\n        Delete\n      </Button>\n    );\n  };\n}\n\nexport function setupRowProps(bem) {\n  return () => ({\n    className: bem(\"table__body-row\"),\n  });\n}\n\nexport function setupColumnTypeBody(contactInfoType) {\n  // eslint-disable-next-line react/prop-types\n  return ({ value }) => {\n    const existingTypeValue = CONTACT_TYPE_LABEL_MAP[value] || value;\n    const datatestid = TESTCAFE_ID_EXISTING_TYPE.replace(\n      \"<TYPE>\",\n      contactInfoType\n    );\n    return (\n      <Typography title={value} data-testid={datatestid}>\n        {existingTypeValue}\n      </Typography>\n    );\n  };\n}\n\nexport function setupOnSave(setDataset) {\n  return (savedDataset) => {\n    setDataset(savedDataset);\n  };\n}\n\nexport function setupColumnValueBody(editing, contactInfoType, bem, onSave) {\n  return () => (\n    <Typography>\n      <Value\n        edit={editing}\n        autosave\n        dataType=\"url\"\n        inputProps={{\n          className: bem(\"input\"),\n          \"data-testid\": TESTCAFE_ID_EXISTING_VALUE.replace(\n            \"<TYPE>\",\n            contactInfoType\n          ),\n        }}\n        property={vcard.value}\n        onSave={onSave}\n      />\n    </Typography>\n  );\n}\n\nexport function setupOnChange(setFn) {\n  return (e) => setFn(e.target.value);\n}\n\nexport default function ContactTable({ editing, property, contactInfoType }) {\n  const tableClass = PrismTable.useTableClass(\"table\", \"inherits\");\n  const classes = useStyles();\n  const bem = useBem(classes);\n\n  const [newContactType, setNewContactType] = useState(DEFAULT_CONTACT_TYPE);\n  const [newContactValue, setNewContactValue] = useState(\"\");\n  const { fetch } = useSession();\n\n  const { solidDataset: dataset, setDataset } = useContext(DatasetContext);\n  const { thing: profile } = useThing();\n  const contactDetailUrls = profile && getUrlAll(profile, property);\n  const contactDetailThings = contactDetailUrls?.map((url) => ({\n    dataset,\n    thing: dataset && getThing(dataset, url),\n  }));\n\n  const saveHandler = setupSaveHandler(fetch, setDataset);\n\n  const addContactDetail = setupAddContactDetail(\n    property,\n    newContactType,\n    newContactValue,\n    dataset,\n    profile,\n    saveHandler,\n    setNewContactValue\n  );\n\n  const removeRow = setupRemoveRow(profile, property, saveHandler, dataset);\n  const DeleteButtonCell = setupDeleteButtonCell(\n    editing,\n    contactInfoType,\n    removeRow\n  );\n  const getRowProps = setupRowProps(bem);\n  const columnTypeBody = setupColumnTypeBody(contactInfoType);\n  const onSave = setupOnSave(setDataset);\n  const columnValueBody = setupColumnValueBody(\n    editing,\n    contactInfoType,\n    bem,\n    onSave\n  );\n  const newContactTypeOnChange = setupOnChange(setNewContactType);\n  const newContactValueOnChange = setupOnChange(setNewContactValue);\n\n  if (!dataset) {\n    return null;\n  }\n\n  return (\n    <>\n      <Box mb={1}>\n        <Table\n          things={contactDetailThings}\n          className={clsx(tableClass, bem(\"table\"))}\n          getRowProps={getRowProps}\n        >\n          <TableColumn\n            property={rdf.type}\n            body={columnTypeBody}\n            dataType=\"url\"\n            header={() => null}\n          />\n          <TableColumn\n            property={vcard.value}\n            body={columnValueBody}\n            dataType=\"url\"\n            header={() => null}\n          />\n          <TableColumn\n            property={vcard.value}\n            body={DeleteButtonCell}\n            dataType=\"url\"\n            header=\"\"\n          />\n        </Table>\n      </Box>\n\n      {editing && (\n        <>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box>\n              <FormControl className={classes.formControl} variant=\"outlined\">\n                <Select\n                  value={newContactType}\n                  onChange={newContactTypeOnChange}\n                  data-testid={TESTCAFE_ID_NEW_TYPE.replace(\n                    \"<TYPE>\",\n                    contactInfoType\n                  )}\n                >\n                  {Object.keys(CONTACT_TYPE_LABEL_MAP).map((iri) => (\n                    <MenuItem key={iri} value={iri}>\n                      {CONTACT_TYPE_LABEL_MAP[iri]}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n\n            <Box width=\"100%\" ml={1} mr={1}>\n              <input\n                label=\"Value\"\n                value={newContactValue}\n                onChange={newContactValueOnChange}\n                className={bem(\"input\")}\n                data-testid={TESTCAFE_ID_NEW_VALUE.replace(\n                  \"<TYPE>\",\n                  contactInfoType\n                )}\n              />\n            </Box>\n\n            <Box width=\"8.25em\" textAlign=\"center\">\n              <Button\n                onClick={addContactDetail}\n                variant=\"secondary\"\n                data-testid={TESTCAFE_ID_ADD_BUTTON.replace(\n                  \"<TYPE>\",\n                  contactInfoType\n                )}\n              >\n                Add\n              </Button>\n            </Box>\n          </Box>\n        </>\n      )}\n    </>\n  );\n}\n\nContactTable.propTypes = {\n  editing: T.bool,\n  property: T.string.isRequired,\n  contactInfoType: T.oneOf([CONTACT_INFO_TYPE_EMAIL, CONTACT_INFO_TYPE_PHONE])\n    .isRequired,\n};\n\nContactTable.defaultProps = {\n  editing: false,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { createStyles } from \"@solid/lit-prism-patterns\";\n\nconst styles = (theme) => {\n  return createStyles(theme, [\"back-to-nav\", \"input\"], {\n    avatar: {\n      width: \"64px\",\n      height: \"64px\",\n    },\n  });\n};\n\nexport default styles;\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport T from \"prop-types\";\nimport { foaf, vcard } from \"rdf-namespaces\";\nimport { Box, InputLabel, createStyles } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useBem } from \"@solid/lit-prism-patterns\";\nimport { Text } from \"@inrupt/solid-ui-react\";\nimport { vcardExtras } from \"../../../src/addressBook\";\nimport ContactInfoTable, {\n  CONTACT_INFO_TYPE_EMAIL,\n  CONTACT_INFO_TYPE_PHONE,\n} from \"../contactInfoTable\";\n\nimport styles from \"./styles\";\n\nconst useStyles = makeStyles((theme) => createStyles(styles(theme)));\n\nexport const TESTCAFE_ID_NAME_FIELD = \"profile-name-field\";\nexport const TESTCAFE_ID_NAME_TITLE = \"profile-name-title\";\nexport const TESTCAFE_ID_ROLE_FIELD = \"profile-role-field\";\nexport const TESTCAFE_ID_ORG_FIELD = \"profile-org-field\";\n\nexport default function PersonProfile({ profileIri, editing }) {\n  const classes = useStyles();\n  const bem = useBem(classes);\n  return (\n    <>\n      <Box mt={2}>\n        <Box>\n          <InputLabel data-testid={TESTCAFE_ID_NAME_TITLE}>Name</InputLabel>\n          <Text\n            data-testid={TESTCAFE_ID_NAME_FIELD}\n            property={foaf.name}\n            edit={editing}\n            autosave\n            inputProps={{\n              className: bem(\"input\"),\n              \"data-testid\": TESTCAFE_ID_NAME_FIELD,\n            }}\n          />\n        </Box>\n\n        <Box mt={1}>\n          <InputLabel>Role</InputLabel>\n          <Text\n            property={vcard.role}\n            edit={editing}\n            inputProps={{\n              className: bem(\"input\"),\n              \"data-testid\": TESTCAFE_ID_ROLE_FIELD,\n            }}\n            autosave\n          />\n        </Box>\n\n        <Box mt={1}>\n          <InputLabel>Organization</InputLabel>\n          <Text\n            property={vcardExtras(\"organization-name\")}\n            edit={editing}\n            inputProps={{\n              className: bem(\"input\"),\n              \"data-testid\": TESTCAFE_ID_ORG_FIELD,\n            }}\n            autosave\n          />\n        </Box>\n      </Box>\n\n      <Box mt={4}>\n        <InputLabel>Email Addresses</InputLabel>\n        <ContactInfoTable\n          datasetIri={profileIri}\n          property={vcard.hasEmail}\n          editing={editing}\n          contactInfoType={CONTACT_INFO_TYPE_EMAIL}\n        />\n      </Box>\n\n      <Box mt={4}>\n        <InputLabel>Phone Numbers</InputLabel>\n        <ContactInfoTable\n          datasetIri={profileIri}\n          property={vcard.hasTelephone}\n          editing={editing}\n          contactInfoType={CONTACT_INFO_TYPE_PHONE}\n        />\n      </Box>\n    </>\n  );\n}\n\nPersonProfile.propTypes = {\n  profileIri: T.string.isRequired,\n  editing: T.bool,\n};\n\nPersonProfile.defaultProps = {\n  editing: false,\n};\n"],"names":["oidcPrefix","TOS_PREDICATE","POLICY_PREDICATE","CONTACTS_PREDICATE","LOGO_PREDICATE","APP_WEBID","contactThing","chain","createThing","url","t","addStringNoLocale","foaf","vcard","addUrl","dataset","setThing","createSolidDataset","mockApp","vcardExtras","rdf","schema","mockAppDataset","theme","createStyles","avatar","width","height","appAvatar","textAlign","padding","spacing","borderRadius","fontSize","typography","h5","color","palette","primary","main","backgroundColor","ValueBody","id","thing","useThing","tableItems","property","title","type","getUrl","getStringNoLocale","TypeBody","propTypes","T","useStyles","makeStyles","styles","app","AppProfile","useState","error","setError","tableClass","PrismTable","classes","bem","useBem","toString","contactsUrl","contacts","getThing","DatasetProvider","solidDataset","ThingProvider","onError","Box","mt","InputLabel","Value","dataType","autosave","Table","className","clsx","things","TableColumn","body","row","header","avatarText","fontFamily","h1","secondary","contrastText","headerLink","display","body2","fontWeight","PersonAvatar","profileIri","errorComponent","Avatar","alt","setupErrorComponent","session","useSession","alignItems","Image","p","Text","href","rel","target","info","webId","tableStyles","table","CONTACT_TYPE_LABEL_MAP","PREFIX_MAP","DEFAULT_CONTACT_TYPE","setupOnChange","setFn","e","value","ContactTable","editing","contactInfoType","newContactType","setNewContactType","newContactValue","setNewContactValue","fetch","useContext","DatasetContext","setDataset","profile","contactDetailUrls","getUrlAll","contactDetailThings","map","saveHandler","newThing","datasetToUpdate","saveSolidDatasetAt","getSourceUrl","savedDataset","setupSaveHandler","addContactDetail","prefix","newContactDetail","setUrl","datasetWithContactDetail","newProfile","asUrl","setupAddContactDetail","removeRow","rowThing","contactDetailUrl","removeUrl","setupRemoveRow","DeleteButtonCell","onClick","replace","variant","setupDeleteButtonCell","getRowProps","setupRowProps","columnTypeBody","existingTypeValue","datatestid","Typography","setupColumnTypeBody","onSave","setupOnSave","columnValueBody","edit","inputProps","setupColumnValueBody","newContactTypeOnChange","newContactValueOnChange","mb","FormControl","formControl","Select","onChange","Object","keys","iri","MenuItem","key","ml","mr","label","defaultProps","TESTCAFE_ID_NAME_FIELD","PersonProfile","datasetIri"],"sourceRoot":""}