{"version":3,"file":"static/chunks/pages/contacts/[webId]-460ebeab0a5854a5.js","mappings":"+PAsCe,SAASA,EAAQC,GAC9B,IAAQC,EAA8BD,EAA9BC,WAAYC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,KAC7B,GAA0BC,EAAAA,EAAAA,UAAS,MAA5BC,EAAP,KAAcC,EAAd,KAGA,OAAID,GACEE,EAAAA,EAAAA,IAAYF,EAAO,KAEnB,gBAAC,IAAD,CAAOG,SAAS,SAAhB,8CAC0CP,IAIvCI,EAAMI,WAGXN,IAASO,EAAAA,GAAAA,oBACJ,gBAAC,KAAD,MAIP,gBAAC,EAAAC,qBAAD,CACEC,WAAYX,EACZY,SAAUZ,EACVa,QAASR,GAET,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAOS,MAAO,CAAEC,UAAW,QACzB,gBAAC,IAAD,CAAKC,EAAG,GACN,gBAAC,KAAD,CAAchB,WAAYA,IAC1B,2BACA,gBAAC,KAAD,CAAeA,WAAYA,EAAYC,QAASA,QAc5DH,EAAQmB,aAAe,CACrBhB,SAAS,EACTC,KAAM,O,sJCrDO,SAASgB,KACtBC,EAAAA,EAAAA,MACA,IAAMC,GAASC,EAAAA,EAAAA,aACTC,EAAaC,mBAAmBH,EAAOI,MAAMC,OAE7CC,EAAO,gBAAC,KAAD,CAAeC,KAAK,aAApB,YACb,OACE,gCACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAWD,KAAMA,KAEnB,gBAAC,KAAD,CAAS1B,WAAYsB,EAAYpB,KAAMO,EAAAA,GAAAA,UClB9B,SAASS,IACtB,OAAO,gBAACA,EAAD,Q,gKCDIU,EACA,YADAA,EAEC,aAGP,SAAeC,EAAtB,wC,wCAAO,WACLC,EACAC,EACAC,EACAC,GAJK,qEAMDF,EANC,qDAWHD,GACAE,IAA2BJ,EAZxB,gCAcGM,EAAAA,QAAAA,KAAYD,GAdf,UAkBFH,GACDE,IAA2BJ,EAnBxB,gCAqBGM,EAAAA,QAAAA,KAAYD,GArBf,4C,sBAyBA,SAASd,IAA4C,IAArBc,EAAqB,uDAAV,SAChD,GAA8CE,EAAAA,EAAAA,cAAtCC,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,0BAEjBM,EAAAA,EAAAA,YAAU,WACJD,EAAQE,KAAKC,YACjBV,EACEO,EAAQE,KAAKC,WACbR,EACAH,EACAK,MAKC,SAASO,IAAsC,IAAhBP,EAAgB,uDAAL,IAC/C,GAA8CE,EAAAA,EAAAA,cAAtCC,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,yBACXX,GAASC,EAAAA,EAAAA,cACfgB,EAAAA,EAAAA,YAAU,WAELD,EAAQE,KAAKC,aAAenB,EAAOqB,OAAOC,SAAS,UACpDX,GAGFF,EACEO,EAAQE,KAAKC,WACbR,EACAH,EACAK,KAED,CAACG,EAAShB,EAAQa,EAAUF,M,uBCnF5BY,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oBACA,WACE,OAAO,EAAQ,Y","sources":["webpack://_N_E/./components/profile/index.jsx","webpack://_N_E/./components/pages/contacts/show/index.jsx","webpack://_N_E/./pages/contacts/[webId].jsx","webpack://_N_E/./src/effects/auth/index.js","webpack://_N_E/?49eb"],"sourcesContent":["/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React, { useState } from \"react\";\nimport T from \"prop-types\";\nimport { Box, Paper } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Container } from \"@inrupt/prism-react-components\";\nimport { CombinedDataProvider } from \"@inrupt/solid-ui-react\";\nimport { schema } from \"rdf-namespaces\";\nimport { isHTTPError } from \"../../src/error\";\nimport PersonProfile from \"./personProfile\";\nimport PersonAvatar from \"./personAvatar\";\nimport AppProfile from \"./appProfile\";\n\nexport const TESTCAFE_ID_NAME_TITLE = \"profile-name-title\";\nexport const TESTCAFE_ID_NAME_FIELD = \"profile-name-field\";\nexport const TESTCAFE_ID_ROLE_FIELD = \"profile-role-field\";\nexport const TESTCAFE_ID_ORG_FIELD = \"profile-org-field\";\n\nexport default function Profile(props) {\n  const { profileIri, editing, type } = props;\n  const [error, setError] = useState(null);\n\n  // TODO replace with toast error or something?\n  if (error) {\n    if (isHTTPError(error, 404)) {\n      return (\n        <Alert severity=\"error\">\n          {`Cannot fetch avatar for this WebID: ${profileIri}`}\n        </Alert>\n      );\n    }\n    return error.toString();\n  }\n\n  if (type === schema.SoftwareApplication) {\n    return <AppProfile />;\n  }\n\n  return (\n    <CombinedDataProvider\n      datasetUrl={profileIri}\n      thingUrl={profileIri}\n      onError={setError}\n    >\n      <Container>\n        <Paper style={{ marginTop: \"1em\" }}>\n          <Box p={2}>\n            <PersonAvatar profileIri={profileIri} />\n            <hr />\n            <PersonProfile profileIri={profileIri} editing={editing} />\n          </Box>\n        </Paper>\n      </Container>\n    </CombinedDataProvider>\n  );\n}\n\nProfile.propTypes = {\n  profileIri: T.string.isRequired,\n  editing: T.bool,\n  type: T.string,\n};\n\nProfile.defaultProps = {\n  editing: false,\n  type: null,\n};\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { schema } from \"rdf-namespaces\";\nimport {\n  BackToNav,\n  BackToNavLink,\n  Container,\n} from \"@inrupt/prism-react-components\";\nimport Profile from \"../../../profile\";\nimport { useRedirectIfLoggedOut } from \"../../../../src/effects/auth\";\n\nexport default function ContactShow() {\n  useRedirectIfLoggedOut();\n  const router = useRouter();\n  const decodedIri = decodeURIComponent(router.query.webId);\n\n  const link = <BackToNavLink href=\"/contacts\">contacts</BackToNavLink>;\n  return (\n    <>\n      <Container>\n        <BackToNav link={link} />\n      </Container>\n      <Profile profileIri={decodedIri} type={schema.Person} />\n    </>\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\n\nimport ContactShowPage from \"../../components/pages/contacts/show\";\n\nexport default function ContactShow() {\n  return <ContactShowPage />;\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useEffect } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\n\nexport const SESSION_STATES = {\n  LOGGED_IN: \"LOGGED_IN\",\n  LOGGED_OUT: \"LOGGED_OUT\",\n};\n\nexport async function redirectBasedOnSessionState(\n  sessionIsLoggedIn,\n  sessionRequestInProgress,\n  redirectIfSessionState,\n  location\n) {\n  if (sessionRequestInProgress) {\n    return;\n  }\n\n  if (\n    sessionIsLoggedIn &&\n    redirectIfSessionState === SESSION_STATES.LOGGED_IN\n  ) {\n    await Router.push(location);\n  }\n\n  if (\n    !sessionIsLoggedIn &&\n    redirectIfSessionState === SESSION_STATES.LOGGED_OUT\n  ) {\n    await Router.push(location);\n  }\n}\n\nexport function useRedirectIfLoggedOut(location = \"/login\") {\n  const { session, sessionRequestInProgress } = useSession();\n\n  useEffect(() => {\n    if (session.info.isLoggedIn) return;\n    redirectBasedOnSessionState(\n      session.info.isLoggedIn,\n      sessionRequestInProgress,\n      SESSION_STATES.LOGGED_OUT,\n      location\n    );\n  });\n}\n\nexport function useRedirectIfLoggedIn(location = \"/\") {\n  const { session, sessionRequestInProgress } = useSession();\n  const router = useRouter();\n  useEffect(() => {\n    if (\n      (session.info.isLoggedIn && !router.asPath.includes(\"login\")) ||\n      sessionRequestInProgress\n    )\n      return;\n    redirectBasedOnSessionState(\n      session.info.isLoggedIn,\n      sessionRequestInProgress,\n      SESSION_STATES.LOGGED_IN,\n      location\n    );\n  }, [session, router, location, sessionRequestInProgress]);\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/contacts/[webId]\",\n      function () {\n        return require(\"private-next-pages/contacts/[webId].jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/contacts/[webId]\"])\n      });\n    }\n  "],"names":["Profile","props","profileIri","editing","type","useState","error","setError","isHTTPError","severity","toString","schema","CombinedDataProvider","datasetUrl","thingUrl","onError","style","marginTop","p","defaultProps","ContactShow","useRedirectIfLoggedOut","router","useRouter","decodedIri","decodeURIComponent","query","webId","link","href","SESSION_STATES","redirectBasedOnSessionState","sessionIsLoggedIn","sessionRequestInProgress","redirectIfSessionState","location","Router","useSession","session","useEffect","info","isLoggedIn","useRedirectIfLoggedIn","asPath","includes","window","__NEXT_P","push"],"sourceRoot":""}