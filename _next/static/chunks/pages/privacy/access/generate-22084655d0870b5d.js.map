{"version":3,"file":"static/chunks/pages/privacy/access/generate-22084655d0870b5d.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/request/issueAccessRequest.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/discover/getAccessManagementUi.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/discover/redirectToAccessManagementUi.mjs","webpack://_N_E/./components/pages/privacy/access/requests/generate-consent-request/index.jsx","webpack://_N_E/./pages/privacy/access/generate.jsx","webpack://_N_E/./src/effects/auth/index.js","webpack://_N_E/?74c9","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/guard/isConsentRequest.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-vc/dist/issue/issue.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/guard/isBaseConsentParameters.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/util/issueAccessVc.mjs","webpack://_N_E/./node_modules/@inrupt/solid-client-access-grants/dist/guard/isBaseRequest.mjs"],"sourcesContent":["import { getRequestBody, issueAccessVc } from '../util/issueAccessVc.mjs';\nimport { GC_CONSENT_STATUS_REQUESTED } from '../constants.mjs';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Request access to a given Resource.\r\n *\r\n * @param params Access to request.\r\n * @param options Optional properties to customise the access request behaviour.\r\n * @returns A signed Verifiable Credential representing the access request.\r\n * @since 0.4.0\r\n */\r\nasync function issueAccessRequest(params, options = {}) {\r\n    const accessRequest = getRequestBody(Object.assign(Object.assign({}, params), { status: GC_CONSENT_STATUS_REQUESTED }));\r\n    return issueAccessVc(params.requestor, accessRequest, options);\r\n}\r\n/**\r\n * @hidden Deprecated alias of [[issueAccessRequest]]\r\n * @since 0.0.1\r\n * @deprecated\r\n */\r\nconst requestAccess = issueAccessRequest;\r\n/**\r\n * @hidden Alias of [[issueAccessRequest]]\r\n * @deprecated\r\n */\r\nconst requestAccessWithConsent = issueAccessRequest;\n\nexport default issueAccessRequest;\nexport { issueAccessRequest, requestAccess, requestAccessWithConsent };\n","import { getSolidDataset, getThing, getIri, getWellKnownSolid, getThingAll } from '@inrupt/solid-client';\nimport { getSessionFetch } from '../util/getSessionFetch.mjs';\nimport { PREFERRED_CONSENT_MANAGEMENT_UI, PIM_STORAGE } from '../constants.mjs';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nasync function getAccessManagementUiFromProfile(webId, options) {\r\n    const result = {};\r\n    let webIdDocument;\r\n    try {\r\n        webIdDocument = await getSolidDataset(webId, {\r\n            fetch: options.fetch,\r\n        });\r\n    }\r\n    catch (e) {\r\n        throw new Error(`Cannot get the Access Management UI for ${webId}: ${e}.`);\r\n    }\r\n    const profile = getThing(webIdDocument, webId);\r\n    if (profile === null) {\r\n        throw new Error(`Cannot get the Access Management UI for ${webId}: the WebID cannot be dereferenced.`);\r\n    }\r\n    // TODO: rename constant & variable when a definitive term is published:\r\n    const profileConsentUi = getIri(profile, PREFERRED_CONSENT_MANAGEMENT_UI);\r\n    if (profileConsentUi !== null) {\r\n        result.accessEndpoint = profileConsentUi;\r\n    }\r\n    // If the profile document does not advertize for the access management UI, look for a storage root.\r\n    const storage = getIri(profile, PIM_STORAGE);\r\n    if (storage !== null) {\r\n        result.storage = storage;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @since 0.4.0\r\n * @hidden\r\n */\r\nasync function getAccessManagementUiFromWellKnown(storage, options) {\r\n    if (storage === undefined) {\r\n        return undefined;\r\n    }\r\n    const wellKnown = await getWellKnownSolid(storage, {\r\n        fetch: options.fetch,\r\n    });\r\n    if (getThingAll(wellKnown, { acceptBlankNodes: true }).length === 0) {\r\n        return undefined;\r\n    }\r\n    const wellKnownAccesstUi = getIri(getThingAll(wellKnown, { acceptBlankNodes: true })[0], PREFERRED_CONSENT_MANAGEMENT_UI);\r\n    return wellKnownAccesstUi !== null && wellKnownAccesstUi !== void 0 ? wellKnownAccesstUi : undefined;\r\n}\r\n/**\r\n * Get the endpoint where the user prefers to be redirected when asked for access.\r\n * If the user does not specify an endpoint, this function attempts to discover the\r\n * default access UI recommended by their Pod provider.\r\n *\r\n * @param webId The WebID of the user asked for access.\r\n * @param options Optional properties to customise the access request behaviour.\r\n * @returns The URL where the user should be redirected, if discoverable.\r\n * @since 0.4.0\r\n */\r\nasync function getAccessManagementUi(webId, options = {}) {\r\n    const fetcher = await getSessionFetch(options);\r\n    // TODO: Complete code coverage for URL argument\r\n    const { accessEndpoint, storage } = await getAccessManagementUiFromProfile(webId.toString(), { fetch: fetcher });\r\n    return (accessEndpoint !== null && accessEndpoint !== void 0 ? accessEndpoint : getAccessManagementUiFromWellKnown(storage, { fetch: fetcher }));\r\n}\r\n/**\r\n * @hidden alias of [[getAccessManagementUi]]\r\n * @since 0.0.1\r\n * @deprecated\r\n */\r\nconst getConsentManagementUi = getAccessManagementUi;\n\nexport default getAccessManagementUi;\nexport { getAccessManagementUi, getAccessManagementUiFromWellKnown, getConsentManagementUi };\n","import { getBaseAccessRequestVerifiableCredential } from '../util/getBaseAccessVerifiableCredential.mjs';\nimport { getSessionFetch } from '../util/getSessionFetch.mjs';\nimport { getAccessManagementUi, getAccessManagementUiFromWellKnown } from './getAccessManagementUi.mjs';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst REQUEST_VC_PARAM_NAME = \"requestVc\";\r\nconst REDIRECT_URL_PARAM_NAME = \"redirectUrl\";\r\nasync function discoverAccessManagementUi(options) {\r\n    const authFetch = await getSessionFetch({ fetch: options.fetch });\r\n    let accessManagementUi;\r\n    if (options.resourceOwner) {\r\n        accessManagementUi = await getAccessManagementUi(options.resourceOwner, {\r\n            fetch: authFetch,\r\n        });\r\n    }\r\n    else {\r\n        accessManagementUi = await getAccessManagementUiFromWellKnown(options.resourceUrl, { fetch: authFetch });\r\n    }\r\n    return accessManagementUi !== null && accessManagementUi !== void 0 ? accessManagementUi : options.fallbackUi;\r\n}\r\n/**\r\n * Redirects the application to a resource owner's preferred access management\r\n * UI.\r\n *\r\n * @param accessRequestVc The VC containing the Access Request to a resource.\r\n * @param redirectUrl The URL where the user should be redirected back after\r\n * having granted access.\r\n * @param options If you are in a NodeJS environment, you must specify a\r\n * callback to handle the redirection.\r\n * @since 0.4.0\r\n */\r\nasync function redirectToAccessManagementUi(accessRequestVc, redirectUrl, options = {}) {\r\n    var _a;\r\n    // The former fallbackConsentManagementUi option is deprecated:\r\n    const fallbackUi = (_a = options.fallbackAccessManagementUi) !== null && _a !== void 0 ? _a : options.fallbackConsentManagementUi;\r\n    const requestVc = await getBaseAccessRequestVerifiableCredential(accessRequestVc, { fetch: options.fetch });\r\n    const accessManagementUi = await discoverAccessManagementUi({\r\n        resourceUrl: requestVc.credentialSubject.hasConsent.forPersonalData[0],\r\n        resourceOwner: options.resourceOwner,\r\n        fallbackUi,\r\n        fetch: options.fetch,\r\n    });\r\n    if (accessManagementUi === undefined) {\r\n        throw new Error(`Cannot discover access management UI URL for [${requestVc.credentialSubject.hasConsent.forPersonalData[0]}]${options.resourceOwner ? `, neither from [${options.resourceOwner}]` : \"\"}`);\r\n    }\r\n    const targetIri = new URL(accessManagementUi);\r\n    targetIri.searchParams.append(REQUEST_VC_PARAM_NAME, btoa(JSON.stringify(requestVc)));\r\n    targetIri.searchParams.append(REDIRECT_URL_PARAM_NAME, encodeURI(typeof redirectUrl === \"string\" ? redirectUrl : redirectUrl.href));\r\n    if (options !== undefined && options.redirectCallback !== undefined) {\r\n        options.redirectCallback(targetIri.href);\r\n    }\r\n    else {\r\n        if (typeof window === \"undefined\") {\r\n            throw new Error(\"In a non-browser environment, a redirectCallback must be provided by the user.\");\r\n        }\r\n        window.location.href = targetIri.href;\r\n    }\r\n}\r\n/**\r\n * @hidden alias of [[redirectToAccessManagementUi]]\r\n * @since 0.1.0\r\n * @deprecated\r\n */\r\nconst redirectToConsentManagementUi = redirectToAccessManagementUi;\n\nexport { redirectToAccessManagementUi, redirectToConsentManagementUi };\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport {\n  issueAccessRequest,\n  redirectToAccessManagementUi,\n} from \"@inrupt/solid-client-access-grants\";\nimport { useRedirectIfLoggedOut } from \"../../../../../../src/effects/auth\";\nimport useFetchProfile from \"../../../../../../src/hooks/useFetchProfile\";\nimport Spinner from \"../../../../../spinner\";\n\nexport default function GenerateConsentRequest() {\n  useRedirectIfLoggedOut();\n  const { session } = useSession();\n  const { fetch } = session;\n  const options = { fetch };\n  const [resources, setResources] = useState([]);\n  const [owner, setOwner] = useState([]);\n  const [origin, setOrigin] = useState(null);\n  const [resource, setResource] = useState([]);\n  const { data: profile } = useFetchProfile(session.info.webId);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      setOrigin(window.location.origin);\n    }\n  }, []);\n\n  async function generateRequest(e) {\n    e.preventDefault();\n    if (!profile) return;\n    const vc = await issueAccessRequest({\n      requestor: session.info.webId,\n      resourceOwner: owner,\n      access: { read: true },\n      resources,\n      purpose: \"https://example.org/someSpecificPurpose\",\n      requestorInboxUrl: profile.inbox ?? session.info.webId, // FIXME: should Pods have a default inbox? in the meantime, using WebID if inbox not available\n      options,\n    });\n    if (vc && origin) {\n      redirectToAccessManagementUi(\n        vc,\n        `${origin}/privacy/?signedVcUrl=${encodeURIComponent(vc.id)}`,\n        {\n          fallbackConsentManagementUi: `${origin}/privacy/access/requests/`,\n        }\n      );\n    }\n  }\n\n  const handleSetOwner = (e) => {\n    setOwner(e.target.value);\n  };\n\n  const handleSetResource = (e) => {\n    setResource(e.target.value);\n  };\n\n  if (!profile) return <Spinner />;\n\n  return (\n    <>\n      <form\n        onSubmit={generateRequest}\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxWidth: \"max-content\",\n        }}\n      >\n        Generate consent request\n        <label htmlFor=\"owner\">\n          Resource Owner WebID:\n          <input\n            name=\"owner\"\n            type=\"url\"\n            value={owner}\n            onChange={handleSetOwner}\n          />\n        </label>\n        <label htmlFor=\"resource\">\n          Add resources to request:\n          <input\n            name=\"owner\"\n            type=\"url\"\n            value={resource}\n            onChange={handleSetResource}\n          />\n          <button\n            type=\"button\"\n            onClick={() => setResources([...resources, resource])}\n          >\n            Add\n          </button>\n        </label>\n        <div>\n          {resources.map((url) => (\n            <span>{url}</span>\n          ))}\n        </div>\n        <button type=\"submit\">Generate consent request</button>\n      </form>\n    </>\n  );\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport React from \"react\";\nimport GenerateConsentRequest from \"../../../components/pages/privacy/access/requests/generate-consent-request\";\n\nexport default function GenerateConsentRequestPage() {\n  return <GenerateConsentRequest />;\n}\n","/**\n * Copyright 2020 Inrupt Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\n * Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport { useEffect } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\n\nexport const SESSION_STATES = {\n  LOGGED_IN: \"LOGGED_IN\",\n  LOGGED_OUT: \"LOGGED_OUT\",\n};\n\nexport async function redirectBasedOnSessionState(\n  sessionIsLoggedIn,\n  sessionRequestInProgress,\n  redirectIfSessionState,\n  location\n) {\n  if (sessionRequestInProgress) {\n    return;\n  }\n\n  if (\n    sessionIsLoggedIn &&\n    redirectIfSessionState === SESSION_STATES.LOGGED_IN\n  ) {\n    await Router.push(location);\n  }\n\n  if (\n    !sessionIsLoggedIn &&\n    redirectIfSessionState === SESSION_STATES.LOGGED_OUT\n  ) {\n    await Router.push(location);\n  }\n}\n\nexport function useRedirectIfLoggedOut(location = \"/login\") {\n  const { session, sessionRequestInProgress } = useSession();\n\n  useEffect(() => {\n    if (session.info.isLoggedIn) return;\n    redirectBasedOnSessionState(\n      session.info.isLoggedIn,\n      sessionRequestInProgress,\n      SESSION_STATES.LOGGED_OUT,\n      location\n    );\n  });\n}\n\nexport function useRedirectIfLoggedIn(location = \"/\") {\n  const { session, sessionRequestInProgress } = useSession();\n  const router = useRouter();\n  useEffect(() => {\n    if (\n      (session.info.isLoggedIn && !router.asPath.includes(\"login\")) ||\n      sessionRequestInProgress\n    )\n      return;\n    redirectBasedOnSessionState(\n      session.info.isLoggedIn,\n      sessionRequestInProgress,\n      SESSION_STATES.LOGGED_IN,\n      location\n    );\n  }, [session, router, location, sessionRequestInProgress]);\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/privacy/access/generate\",\n      function () {\n        return require(\"private-next-pages/privacy/access/generate.jsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/privacy/access/generate\"])\n      });\n    }\n  ","/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction isConsentRequest(request) {\r\n    if (request.credentialSubject.hasConsent !==\r\n        undefined) {\r\n        return (request.credentialSubject.hasConsent\r\n            .forPurpose !== undefined);\r\n    }\r\n    return (request.credentialSubject.providedConsent\r\n        .forPurpose !== undefined);\r\n}\n\nexport { isConsentRequest };\n","import defaultFetch from '../fetcher.mjs';\nimport { concatenateContexts, defaultCredentialTypes, isVerifiableCredential, defaultContext } from '../common/common.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Request that a given Verifiable Credential (VC) Issuer issues a VC containing\r\n * the provided claims. The VC Issuer is expected to implement the [W3C VC Issuer HTTP API](https://w3c-ccg.github.io/vc-http-api/issuer.html).\r\n *\r\n * @param issuerEndpoint The `/issue` endpoint of the VC Issuer.\r\n * @param subjectId The identifier of the VC claims' subject.\r\n * @param subjectClaims Claims about the subject that will be attested by the VC.\r\n * @param credentialClaims Claims about the credential itself, rather than its subject, e.g. credential type or expiration.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * This can be typically used for authentication. Note that if it is omitted, and\r\n * `@inrupt/solid-client-authn-browser` is in your dependencies, the default session\r\n * is picked up.\r\n * @returns the VC returned by the Issuer if the request is successful. Otherwise, an error is thrown.\r\n * @since 0.1.0\r\n */\r\nasync function issueVerifiableCredential(issuerEndpoint, subjectId, subjectClaims, credentialClaims, options) {\r\n    const internalOptions = Object.assign({}, options);\r\n    if (internalOptions.fetch === undefined) {\r\n        internalOptions.fetch = defaultFetch;\r\n    }\r\n    // credentialClaims should contain all the claims, but not the context.\r\n    // const {\r\n    //   \"@context\": subjectClaimsContext,\r\n    //   ...contextlessSubjectClaims\r\n    // } = subjectClaims;\r\n    // The following lines refactor the previous deconstruction in order to work\r\n    // around a misalignment between `rollup-plugin-typescript2` and NodeJS.\r\n    // Issue tracking: https://github.com/ezolenko/rollup-plugin-typescript2/issues/282\r\n    const contextlessSubjectClaims = Object.assign({}, subjectClaims);\r\n    delete contextlessSubjectClaims[\"@context\"];\r\n    const subjectClaimsContext = subjectClaims[\"@context\"];\r\n    // const {\r\n    //   \"@context\": credentialClaimsContext,\r\n    //   ...contextlessCredentialClaims\r\n    // } = credentialClaims !== undefined ? credentialClaims : { \"@context\": [] };\r\n    // The following lines refactor the previous deconstruction in order to work\r\n    // around a misalignment between `rollup-plugin-typescript2` and NodeJS.\r\n    // Issue tracking: https://github.com/ezolenko/rollup-plugin-typescript2/issues/282\r\n    // When we add proper JSONLD parsing support, the following should be replaced.\r\n    const contextlessCredentialClaims = Object.assign({}, credentialClaims);\r\n    delete contextlessCredentialClaims[\"@context\"];\r\n    const credentialClaimsContext = credentialClaims !== undefined ? credentialClaims[\"@context\"] : [];\r\n    // const {\r\n    //   type: credentialTypeClaims,\r\n    //   ...nonTypeCredentialClaims\r\n    // } = contextlessCredentialClaims;\r\n    // The following lines refactor the previous deconstruction in order to work\r\n    // around a misalignment between `rollup-plugin-typescript2` and NodeJS.\r\n    // Issue tracking: https://github.com/ezolenko/rollup-plugin-typescript2/issues/282\r\n    const nonTypeCredentialClaims = Object.assign({}, contextlessCredentialClaims);\r\n    delete nonTypeCredentialClaims.type;\r\n    const credentialTypeClaims = contextlessCredentialClaims.type;\r\n    let credentialTypes = [];\r\n    if (credentialTypeClaims !== undefined) {\r\n        credentialTypes = Array.isArray(credentialTypeClaims)\r\n            ? credentialTypeClaims\r\n            : [credentialTypeClaims];\r\n    }\r\n    const credentialIssueBody = {\r\n        // See https://w3c-ccg.github.io/vc-http-api/issuer.html\r\n        credential: Object.assign(Object.assign({ \"@context\": concatenateContexts(defaultContext, subjectClaimsContext, credentialClaimsContext), type: [...defaultCredentialTypes, ...credentialTypes] }, nonTypeCredentialClaims), { credentialSubject: Object.assign({ id: subjectId }, contextlessSubjectClaims) }),\r\n    };\r\n    const response = await internalOptions.fetch(issuerEndpoint, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(credentialIssueBody),\r\n    });\r\n    if (!response.ok) {\r\n        // TODO: use the error library when available.\r\n        throw new Error(`The VC issuing endpoint [${issuerEndpoint}] could not successfully issue a VC for provided subject [${subjectId}]: ${response.status} ${response.statusText}`);\r\n    }\r\n    const jsonData = await response.json();\r\n    if (isVerifiableCredential(jsonData)) {\r\n        return jsonData;\r\n    }\r\n    throw new Error(`The VC issuing endpoint [${issuerEndpoint}] returned an unexpected object: ${JSON.stringify(jsonData, null, \"  \")}`);\r\n}\n\nexport { issueVerifiableCredential as default };\n","import { isUnknownObject } from './isUnknownObject.mjs';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction isBaseConsentParameters(x) {\r\n    return isUnknownObject(x) && x.purpose !== undefined;\r\n}\n\nexport { isBaseConsentParameters };\n","import { issueVerifiableCredential } from '@inrupt/solid-client-vc';\nimport { CREDENTIAL_TYPE_ACCESS_GRANT, CONSENT_CONTEXT, CREDENTIAL_TYPE_ACCESS_REQUEST } from '../constants.mjs';\nimport { getSessionFetch } from './getSessionFetch.mjs';\nimport { isConsentRequest } from '../guard/isConsentRequest.mjs';\nimport { getAccessApiEndpoint } from '../discover/getAccessApiEndpoint.mjs';\nimport { accessToResourceAccessModeArray } from './accessToResourceAccessModeArray.mjs';\nimport { isBaseConsentParameters } from '../guard/isBaseConsentParameters.mjs';\nimport { isBaseRequest } from '../guard/isBaseRequest.mjs';\n\n/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction getConsentAttributes(params, type) {\r\n    const modes = accessToResourceAccessModeArray(params.access);\r\n    const consentAttributes = {\r\n        mode: modes,\r\n        hasStatus: params.status,\r\n        forPersonalData: params.resources,\r\n    };\r\n    if (type === \"BaseGrantBody\") {\r\n        return Object.assign(Object.assign({}, consentAttributes), { isProvidedTo: params.requestor });\r\n    }\r\n    return consentAttributes;\r\n}\r\nfunction getBaseBody(params, type) {\r\n    const body = {\r\n        \"@context\": CONSENT_CONTEXT,\r\n        type: [\r\n            type === \"BaseGrantBody\"\r\n                ? CREDENTIAL_TYPE_ACCESS_GRANT\r\n                : CREDENTIAL_TYPE_ACCESS_REQUEST,\r\n        ],\r\n        credentialSubject: {\r\n            id: params.requestor,\r\n            inbox: params.requestorInboxUrl,\r\n        },\r\n    };\r\n    if (type === \"BaseGrantBody\") {\r\n        return Object.assign(Object.assign({}, body), { credentialSubject: Object.assign(Object.assign({}, body.credentialSubject), { providedConsent: getConsentAttributes(params, type) }) });\r\n    }\r\n    return Object.assign(Object.assign({}, body), { credentialSubject: Object.assign(Object.assign({}, body.credentialSubject), { hasConsent: getConsentAttributes(params, type) }) });\r\n}\r\nfunction getConsentBaseBody(params, baseBody) {\r\n    const request = Object.assign({}, baseBody);\r\n    // This makes request a ConsentGrantBody\r\n    if (params.issuanceDate) {\r\n        request.issuanceDate =\r\n            params.issuanceDate.toISOString();\r\n    }\r\n    if (params.expirationDate) {\r\n        request.expirationDate =\r\n            params.expirationDate.toISOString();\r\n    }\r\n    return request;\r\n}\r\nfunction getConsentGrantBody(params, baseBody) {\r\n    const request = getConsentBaseBody(params, baseBody);\r\n    request.credentialSubject.providedConsent.forPurpose =\r\n        params.purpose;\r\n    return request;\r\n}\r\nfunction getConsentRequestBody(params, baseBody) {\r\n    const request = getConsentBaseBody(params, baseBody);\r\n    request.credentialSubject.hasConsent.forPurpose =\r\n        params.purpose;\r\n    return request;\r\n}\r\nfunction getRequestBody(params) {\r\n    const requestBody = getBaseBody(params, \"BaseRequestBody\");\r\n    if (isBaseConsentParameters(params)) {\r\n        // This makes request a ConsentRequestBody\r\n        return getConsentRequestBody(params, requestBody);\r\n    }\r\n    return requestBody;\r\n}\r\nfunction getGrantBody(params) {\r\n    const grantBody = getBaseBody(params, \"BaseGrantBody\");\r\n    // TODO: This should be set by getBaseBody properly.\r\n    grantBody.credentialSubject.id = params.resourceOwner;\r\n    grantBody.type = [CREDENTIAL_TYPE_ACCESS_GRANT];\r\n    if (isBaseConsentParameters(params)) {\r\n        // This makes request a ConsentGrantBody\r\n        return getConsentGrantBody(params, grantBody);\r\n    }\r\n    return grantBody;\r\n}\r\nasync function issueAccessVc(vcSubject, vcBody, options) {\r\n    const fetcher = await getSessionFetch(options);\r\n    const targetResourceIri = isBaseRequest(vcBody)\r\n        ? vcBody.credentialSubject.hasConsent.forPersonalData[0]\r\n        : vcBody.credentialSubject.providedConsent\r\n            .forPersonalData[0];\r\n    // TODO: find out if concatenating \"issue\" here is correct\r\n    // It seems like the issuer endpoint should be discovered from the well-known direcly\r\n    // And the access endpoint should be an object with one URI per service\r\n    // (issuer service, verifier service... supposedly status and query and vc???)\r\n    const accessIssuerEndpoint = new URL(\"issue\", await getAccessApiEndpoint(targetResourceIri, options));\r\n    return issueVerifiableCredential(accessIssuerEndpoint.href, vcSubject, Object.assign({ \"@context\": vcBody[\"@context\"] }, vcBody.credentialSubject), {\r\n        \"@context\": vcBody[\"@context\"],\r\n        type: vcBody.type,\r\n        issuanceDate: isConsentRequest(vcBody) ? vcBody.issuanceDate : undefined,\r\n        expirationDate: isConsentRequest(vcBody)\r\n            ? vcBody.expirationDate\r\n            : undefined,\r\n    }, {\r\n        fetch: fetcher,\r\n    });\r\n}\n\nexport { getGrantBody, getRequestBody, issueAccessVc };\n","/**\r\n * Copyright 2022 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction isBaseRequest(vc) {\r\n    return vc.credentialSubject.hasConsent !== undefined;\r\n}\n\nexport { isBaseRequest };\n"],"names":["async","issueAccessRequest","params","options","accessRequest","Object","assign","status","issueAccessVc","requestor","getAccessManagementUiFromWellKnown","storage","undefined","wellKnown","fetch","acceptBlankNodes","length","wellKnownAccesstUi","get","getAccessManagementUi","webId","fetcher","getSessionFetch","accessEndpoint","result","webIdDocument","e","Error","profile","profileConsentUi","getAccessManagementUiFromProfile","toString","redirectToAccessManagementUi","accessRequestVc","redirectUrl","_a","fallbackUi","fallbackAccessManagementUi","fallbackConsentManagementUi","requestVc","accessManagementUi","authFetch","resourceOwner","resourceUrl","discoverAccessManagementUi","credentialSubject","hasConsent","forPersonalData","targetIri","URL","searchParams","append","btoa","JSON","stringify","encodeURI","href","redirectCallback","window","location","GenerateConsentRequest","useRedirectIfLoggedOut","session","useSession","useState","resources","setResources","owner","setOwner","origin","setOrigin","resource","setResource","useFetchProfile","info","data","preventDefault","access","read","purpose","requestorInboxUrl","inbox","vc","encodeURIComponent","id","useEffect","onSubmit","style","display","flexDirection","maxWidth","htmlFor","name","type","value","onChange","target","onClick","map","url","GenerateConsentRequestPage","SESSION_STATES","redirectBasedOnSessionState","sessionIsLoggedIn","sessionRequestInProgress","redirectIfSessionState","Router","isLoggedIn","useRedirectIfLoggedIn","router","useRouter","asPath","includes","__NEXT_P","push","isConsentRequest","request","forPurpose","providedConsent","issueVerifiableCredential","issuerEndpoint","subjectId","subjectClaims","credentialClaims","internalOptions","contextlessSubjectClaims","subjectClaimsContext","contextlessCredentialClaims","credentialClaimsContext","nonTypeCredentialClaims","credentialTypeClaims","credentialTypes","Array","isArray","credentialIssueBody","credential","response","headers","method","body","ok","statusText","jsonData","json","isBaseConsentParameters","x","isUnknownObject","getConsentAttributes","consentAttributes","mode","accessToResourceAccessModeArray","hasStatus","isProvidedTo","getBaseBody","getConsentBaseBody","baseBody","issuanceDate","toISOString","expirationDate","getRequestBody","requestBody","getConsentRequestBody","getGrantBody","grantBody","getConsentGrantBody","vcSubject","vcBody","targetResourceIri","getAccessApiEndpoint"],"sourceRoot":""}